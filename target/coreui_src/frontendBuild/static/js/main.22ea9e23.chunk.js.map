{"version":3,"sources":["_helpers/commons.js","_components/_common/DataTable/Header/DataTableHeader.js","_components/_common/DataTable/Row/DataTableRow.js","_components/_common/DataTable/Table/ListGroupDataTable.js","_components/_common/DataTable/ContextualMenu/ContextualMenu.js","_components/_common/DataTable/AutoScrollDataTable/AutoScrollDataTable.js","_components/_common/DataTable/Table/DatatablePagination.js","_components/_common/DataTable/Table/DataTable.js","_components/_common/AttributeListGroup/AttributesGroup.js","_components/_common/WorkInfo/WorkInfo.js","_components/_common/PersistenceInfo/PersistenceInfo.js","_components/_common/ContentHolder/ContentHolderAction/ContentFileSelector.js","_components/_common/ContentHolder/ContentHolderAction/ContentHolderPrimaryAction.js","_components/_common/ContentHolder/ContentHolderInfo/ContentHolderPrimaryInfo.js","_components/_common/ContentHolder/ContentHolderInfo/ContentHolderAttachmentsInfo.js","_components/_common/ContentHolder/ContentHolderInfo/ContentHolderInfo.js","_components/_common/ViewDefinition/ViewDefinition.js","_services/contactable.services.js","_components/_common/Contactable/Contactable.js","_components/_common/UserProfile/ResetPassword.js","_components/_common/UserProfile/LockUser.js","_components/_common/UserProfile/UnLockUser.js","_components/_common/UserProfile/UpdatePassword.js","_components/_common/GenderViewer/GenderViewer.js","_components/_common/UserProfile/ActivatePassword.js","_components/_common/WorkInfo/WorkableAction.js","_services/revcontrolled.services.js","_components/_common/RevControlled/RevControlledAction.js","_components/_common/ThumbInfo/ThumbInfo.js","_components/_common/WaitingPane/WaitingPane.js","_components/_common/TotalElements/TotalElements.js","_components/_common/EmptyPane/EmptyPane.js","_components/_common/DefaultFooter/DefaultFooter.js","_components/_common/Wizard/Wizard.js","_components/_common/WizardConfirm/WizardConfirm.js","_services/listvalues.services.js","_components/_common/Enumerations/Enumerations.js","_components/_common/Users/AddOrg/AddOrg.js","_components/_common/Users/AddPeople/AddPeople.js","_components/_common/Users/AddPerson/AddPerson.js","_services/search.services.js","_components/_common/Users/ManageContainerUsers/ManageContainerUsers.js","pages/AdminPages/Container/ContainersMembership.js","_services/role.services.js","_components/_common/Users/UserRoles/UserRoles.js","_components/_common/Users/PeopleDetails/PeopleDetails.js","_components/_common/Users/PeopleCard/PeopleCard.js","_services/preferences.service.js","_components/_common/Users/UserSystemSettings/AddSettings.js","_components/_common/Users/UserSystemSettings/UserSystemSettings.js","_components/_common/Logout/Logout.js","_components/_common/AppBreadcrumb/AppBreadcrumb.js","_components/_common/RevControlled/AllIterations.js","_components/_common/RevControlled/AllVersions.js","_components/_common/ProcessingModal/ProcessingModal.js","_components/_common/Accordion/Accordion.js","_services/container.services.js","_services/lifecycle.services.js","_reducers/coreUserContextReducer.js","_components/_common/RevControlled/RevControlledDetailsHeader/RevControlledDetailsHeader.js","_services/account.services.js","_services/utils/services.config.js","_actions/actionTypes.js","assets/img/profile.png","polyfill.js","_helpers/CoreUri.js","App.js","serviceWorker.js","_reducers/searchMembersReducer.js","_reducers/searchBusinessRulesReducer.js","_reducers/enumerationsReducer.js","_reducers/headerSearchReducer.js","_reducers/applicationReducer.js","_reducers/imagesCachesReducer.js","_reducers/navigationReducer.js","index.js","_actions/actions.js","_services/contentHolder.services.js","_services/login.services.js","_services/workable.services.js","_components/_common/AttributeListGroup/AttributeArrayGroup.js","_components/_common/AttributeListGroup/AttributeArrayObjectGroup.js","_components/_common/AttributeListGroup/AttributeListGroup.js"],"names":["commons","toastError","response","style","errorFamily","errorCode","className","message","toastSuccess","textInfo","getValueFromUrl","token","href","window","location","split","length","urlParams","queryString","parse","getStatusesFromUrl","statuses","statusesFromUrl","Array","isArray","push","toJSONObject","data","d","JSON","stringify","getPropByString","obj","propString","prop","props","i","iLen","candidate","undefined","getInputType","attribute","type","indexOfItemInArray","item","array","index","map","id","clone","getAttributeViewer","value","Fragment","disabled","defaultChecked","checked","staticValue","displayComponent","dateformat","dateFormat","date","moment","format","String","getWorkingContainerName","userContextRX","workingContainer","name","getWorkingContainerPath","path","getWorkingContainerId","hasRoleAdmin","hasAnyRole","hasRoleSuperAdmin","hasRoleReader","rolesInWorkingContainer","hasRole","hasRoleUser","hasRoleAnon","getRootContainerId","applicationContainer","getCurrentUserAccountId","userAccount","getCurrentUserAccountOwnerId","userDetails","getRestErrorMessage","isRequestError","isRequestSuccess","getUrlVars","arrayRemove","arr","filter","ele","setSessionId","session_id","document","cookie","katappult_core_logout","katappult_core_loginSuccess","console","log","links","userContext","rolesInApplicationContainer","userPreferences","systemPreferences","account","user","applicationCurrentEnvironmentName","applicationFriendlyName","isanon","nickName","isepadmin","attributes","key","katappult_core_loginError","sessionId","getAuthorizationCookie","isLoggedIn","katappult_core_isUserConnected","katappult_core_isAnonConnected","getSystemPreference","result","preference","isLoggedInAsUser","isLoggedInAsAnon","isNotLoggedIn","clientContainerId","getContainerSetting","containerSettingsRX","setting","getBooleanContainerSetting","this","getApiRootURL","API_ROOTV","hostname","port","origin","proxyURL","process","REACT_APP_PROXY_URL","test","validateEmail","email","isServer","createElement","authorizationCookie","roleNames","role","includes","roleName","status","cookieValue","find","row","startsWith","DataTableHeader","columns","col","headerClass","headerClassName","scope","hideTableHeader","toHeader","Component","defaultProps","DataTableRow","cells","isDateCol","field","dataField","locale","localization","dateRow","isDisplayableCol","val","enumProvider","selectValue","stringRow","classname","colclass","suffix","contentClassName","toRow","toString","tableConfig","onRowClick","rowClassName","onClick","e","ListGroupDataTable","loading","pagination","pitem","paginate","metaData","hasPreviousPage","hasNextPage","PaginationItem","PaginationLink","previous","tag","totalPages","active","pageNumber","next","CardFooter","Row","Col","md","Pagination","aria-label","size","paginationSize","totalElements","title","rows","populatePagination","displayHeader","xs","lg","xl","ListGroup","emptyTableContent","emptyMessageTitle","emptyMessageDescription","emptyMessageSubDescription","emptyActions","description","subDescription","emptyActionsDisplay","sm","Card","Pane","mainMessage","secondaryMessage","actions","items","tableClassName","React","DatatablePagination","useState","maxPage","setMaxPage","hasPrevious","setHasPrevious","hasNext","setHasNext","currentPage","setCurrentPage","setTotalElements","useEffect","_doGoToPage","goToPage","displayTotalElements","preventDefault","pc","goPreviousPage","pageIndex","elem","handlePagination","goNextPage","DataTable","state","columnsConfig","nextProps","prevState","setState","populateRows","tableTitle","titleDisplay","Table","hover","responsive","tableId","striped","bordered","AttributesGroup","attributesGroup","config","view","AttributeListGroup","attributesListConfig","WorkInfo","schemas","versioned","orientation","cardClassName","displayActions","attributesSchema","PersistenceInfo","schema","ContentFileSelector","handleClick","bind","refs","fileUploader","click","Button","hidden","uploadLabel","display","accept","ref","onChange","onChangeFile","ContentHolderPrimaryAction","downloadPrimaryContent","viewPrimaryContent","deletePrimaryContent","file","target","files","formData","FormData","append","contentHolderService","setPrimaryContentFile","contentHolderId","containerId","then","toast","onUploadSuccess","error","downloadedFileName","blob","blobObject","Blob","FileSaver","saveAs","blobUrl","URL","createObjectURL","open","canUpload","hasContent","noContent","canDelete","downloadLabel","canDownload","canUpdload","canView","ContentHolderPrimaryInfo","primaryContent","setPrimaryContent","contentInfos","ci","displayContentSize","mime","contentFormat","mimeType","fileName","contentHolderFileName","justifyContent","contentSize","ContentHolderAttachmentsInfo","attachments","header","ContentHolderInfo","width","ViewDefinition","CardBody","Form","action","method","FormGroup","Label","htmlFor","Input","placeholder","FormText","color","ListGroupItem","contactableService","getWebContacts","getTelecomContacts","getPostalContacts","updateWebContacts","updateTelecomContacts","updatePostalContacts","getAllContacts","getContactableContactMechanismByRole","contactableId","uri","url","API_ROOT","_doGet","contactMecId","payload","_doPut","Contactable","postalAddressTitle","contacts","allContacts","updateWebContactsSuccess","reloadContacts","form","concat","businessId","catch","updateTelecomContactsSuccess","updatePostalContactSuccess","firstItem","lastModifiedDate","secondItem","finalItem","firstItemLastModification","toDate","contactMecIndex","webAttributesList","formId","onSubmit","borderLess","phonesAttributesList","postalAddressAttributesList","arrayTitleProvider","updatePostalContact","additionalAttributesDisplay","postalAddress","canEdit","standardFooterActions","newObjectFormData","newPostalAddressFormData","hideMobileContacts","firstRowLabel","newWebFormData","newPhoneFormData","emptyContacts","postal","address1","address2","postalCode","city","country","contact","viewMode","summaryContactView","badge","Badge","pill","variant","canSwitch","ButtonToolbar","selectNextContactMecView","fullContactView","ResetPassword","modal","accountId","notify","password","toggle","doResetPassword","dialogContent","handleChange","accountService","resetPassword","resetSuccess","Group","controlId","Control","Check","label","success","afterUpdate","ProcessingModal","show","buttonTitle","toUpperCase","onConfirm","dialogMessage","dialogTitle","LockUser","doLockUser","lockSuccess","lock","onAccountLocked","buttonColor","connect","store","disptach","UnLockUser","doUnlockUser","unlockSuccess","unlock","onAccountUnLocked","buttonSize","UpdatePassword","oldPassword","newPassword","newPasswordValidation","processing","formError","canUpdate","doUpdatePassword","handleFormChange","updateSuccess","backHome","userPostLogin","coreUri","clientSideRenderedURL","event","formadata","emptypass","samePass","match","params","lockToken","updateLostPasswordByUser","json","updated","userEmail","updateSuccess2","updateError","login","loginService","text","authorization","alert","postLogin","history","updatePassword","InputGroup","InputGroupAddon","addonType","autoComplete","block","Spinner","animation","InputGroupText","Modal","isOpen","centered","ModalHeader","ModalBody","formContent","ModalFooter","reinitLostPass","modalUpdatePassWord","onUserAccountUpdatePass","GenderViewer","ActivatePassword","doActivateAccount","activatePassword","info","doActivatePassword","WorkableAction","checkin","checkout","undoCheckout","toWorkingCopy","toOriginalCopy","prevProps","workableId","wc","workInfo","isWorkingCopy","locked","lockedBy","setLoading","idOnly","workableService","originalCopy","loadDatas","workingCopy","refreshListView","wcid","original","res","VALIDATE_LABEL","DELETE_WC_LABEL","validateIcon","deleteIcon","buttonIcon","hasWorkingCopy","lockedSince","canForwardToWc","canForwardToOriginalCopy","canCheckout","iterationInfo","isLatestIteration","versionInfo","isLatestVersion","CLONE_LABEL","cloneIcon","workingCopyActions","WC_LABEL","OC_LABEL","workabaleActions","canCheckin","canUndoCheckout","toWcCallBack","revControlledService","allIterationsOf","allIterationsOfversion","allVersionsOf","exactIterationAndVersion","exactIterationAndVersionIdOnly","latestIterationOf","latestIterationOfIdOnly","revise","revControlledId","_doPost","versionId","version","iteration","RevControlledAction","getNextIteration","getPreviousIteration","getLatestIteration","onAllIterationsSelected","currentIteration","iterationNumber","nextIteration","previousIteration","firstIndex","canRevise","rcActions","ThumbInfo","rootUrl","host","productId","pathname","join","imageName","backgroundImage","WaitingPane","waitingMessage","styles","fadeIn","animationName","Radium","keyframes","EmptyPane","rootClassName","DefaultFooter","buildVersion","Navbar","fixed","Wizard","modalShow","hideWizard","setModalShow","onWizardHide","buttonIconComp","buttonBlock","hideButtonIf","buttonClassName","MyVerticallyCenteredModal","onHide","content","dialogSize","hideFooter","hideHeader","dialogContentProvider","additionalParams","dialogClassName","aria-labelledby","scrollable","Header","closeButton","Body","Footer","WizardConfirm","onConfirmAndClose","Confirm","wizardButtonTitle","modalSize","bodyClassName","listValuesService","names","listvalues","noLocale","details","p","buildURLQuery","Enumerations","selectedItem","fr","en","selectItem","source","srcElement","activate","updateEnumerationsSelection","navs","noSelection","hasEnum","v","LinkTo","angleRight","link","to","enumerations","AddOrg","container","getRegisteringContainer","withAccount","simpleUserForm","errors","registerAttributesList","registerUser","handleResponse","onFormChange","formValidity","registeringContainer","orgType","handleRegister","setPropsProcessing","fromConnectedUser","registerOrgWithAccount","registerOrgWithAccountAnon","onProcessing","onError","loginForm","accountEmail","accountPassword","handleLoginSuccess","onCreatePeopleSuccess","newErrors","saveButtonTitle","createButtonTitle","saveButtonClassName","createButtonClassName","_handleRegister","required","placeHolder","initialData","additionalWizardLeftActions","formMode","AddPeople","initialFormData","peopleSimpleType","peopleMode","gender","step","handleSelectTypeChange","onSuccess","options","row0","as","peopleCreationOption","getStepContent","hideAgreements","replace","AddPerson","lastName","firstName","findFormErrors","peopleType","registerPersonWithAccount","registerPersonWithAccountAnon","searchService","searchUserByNameLikeInWholeApplication","searchUserByLoginLikeInWholeApplication","searchContainerMemberByNameLike","searchContainerMemberByLoginLike","searchContainerMemberByLoginLike2","searchProductByNameLike","searchProductByReferenceLike","reference","queryParams","ManageContainerUsers","totalMembers","members","loadingMembers","statesFilter","reachableStates","queryFilters","page","pageSize","includeParentItems","manageMembers","unsubscribe","blockUser","setLinkState","switchToView","onPeopleDetailsChange","moreActions","getRootObjectForDetailsId","userAccountId","newMembers","m","wizardCloseFunction","refreshView","selectedAccountId","showSuccessAlert","currentItemIdParam","search","rootId","wasRemoved","pushBreadCrumb","updatePeopleCallBack","results","owner","ownerSummary","businessType","LinkToPeople","selectPerson","roleAid","roleBid","lifecycleService","route","backOfficeViewURL","nameOf","searchTermUpdated","datas","class","updateStates","for","datatable","total","membersDatatable","hideMainMessage","headerActions","newPeople","searchHeader","showDetailsView","searchTerm","searchMembers","searchBusinessClass","searchBusinessType","searchResults","updateSearchTerm","updateSearchResults","LinkToOrg","align","ContainersMembership","needUpdate","membershipStates","switchToParent","emptyTableActions","isMember","marginTop","addMemberToContainer","removeMemberFromContainer","paddingTop","switchTo","containerName","removeContainerMembership","addContainerMembership","currentContainerId","containerService","getParentContainer","parentId","parentContainerId","getChildrenContainers","isUserInContainer","toChild","isRootContainer","roleService","getUserRoles","addRoleToUser","removeRoleToUser","searchRoleByNameLike","roleId","_doDelete","UserRoles","getCreatePage","removeFromRole","onCreateItemSuccess","loadRoles","prevprops","prevstate","prevQueryUrlParams","prevId","roles","wizardMode","rolesDisplay","c","AddRole","searching","searchResult","searchRole","isSuperAdmin","getDatas","_doSearchRole","componentDidMount","addUserToRole","getRows","PeopleDetails","loadDataError","summaryMode","activeTab","userProfile","overviewTabContent","accountAttributesList","contactTabContent","updateProfile","updateOrgProfile","isLocked","refresh","isCurrentAccountOwner","organizationAttributesView","accountRoles","accountSystemPrefsContent","updatePersonProfile","updateProfileSuccess","accountDetails","tab","tabsConfig","tabItems","tabContent","visible","containerAccessTabContent","containerAccessTabContentVisible","accountTabContent","customTabItems","xaccessTableConfig","containerMembership","containerMembershipMetaData","contactNavigation","peopleProfileAttributesList","organizationProfileAttributesList","addHeaderMargin","presState","loadAllDatas","refreshbread","currentAccountOwner","currentAccountId","loadContainerMemberships","containersMembership","siret","notLoading","attributesView","accountShortType","isOrganizationProfile","peopleAttributesView","expanded","isAdmin","readOnly","navTabContents","tabsConfigs","tabItem","Tab","eventKey","src","profile","height","Tabs","defaultActiveKey","PeopleCard","people","orgDetailsLink","personDetailsLink","thumb","logicalPath","thumbedId","addressageName","getDisplay","preferencesService","getUserPreferences","ownerId","getSystemPreferences","update","preferenceId","create","drop","AddSettings","createContainerId","ceateContainerId","attributesList","handleSuccessResponse","handleErrorResponse","userHidden","itemId","icon","UserSystemSettings","createForm","editingRow","updateEditedSetting","cancelEditedSetting","setEditingRow","formDataChange","delete","settingsValue","rowAction","displayName","settingsDatatable","Logout","loginUrl","AppBreadcrumb","pushItem","_dopopBreadCrumb","homeLabel","homeUrl","slice","popBreadCrumb","homeUrlAction","hideHome","Breadcrumb","Item","getHomeUrl","getHomeLabel","locations","renderBreadCrumb","AllIterations","tableActions","toIterationDetails","lockedIcon","defaultSortOrder","backdrop","keyboard","Accordion","setEpanded","titleComponent","getAllLifecycles","getAllFolderTemplates","getAllEmailTemplates","getAllTeamTemplates","getRootTypes","getAllMembers","getApplicationRootContainer","getById","getByPath","getAccessiblesChildrenContainers","getOwnedChildrenContainers","getAllAccessibleContainers","isUserContainerAdmin","countMembers","createContainer","getContainerSettings","updateContainerSetting","populateContainerSetting","getContainersOfOwner","populateFromSellsy","getAllContainerAdmin","containerAdminAdd","containerAdminDelete","settingsId","encodeURI","promote","setStateWithComment","denote","statesBySetState","statesByAction","statesByPromote","statesByDenote","getAllPossibleStatesOfLifecyle","updateMasterAttributes","setStateFromExternalApp","createLifecycle","archive","lifecycleTransitions","lifecycleId","_doPostMp","fromState","actionName","lifecycleName","lifecycleManagedId","linkClass","inialState","applicationcContainer","userContextReducer","ns2","produce","nexState","ns3","ns4","updateUserContext","RevControlledDetailsHeader","lockIcon","number","businessTypeDisplayName","lifecycleCurrentState","headerActionsProvider","getNumberOrReference","getLockStatusDisplay","getVersionDisplay","lostPassword","formdata","accountOfParty","partyId","profileId","activateAccount","ownerType","ownersName","isValidAccountLockToken","accoundId","Object","keys","k","finalurl","fetch","appendAccessToken","timeout","headers","body","handleJWTError","_doPostWithoutResponse","addSessionId","credentials","_doGetText","_doGetBlob","reload","forwardToLoginPage","SET_USER_WORKING_CONTAINER","SET_APPLICATION_CONTAINER","LOGIN_USER","LOGOUT_USER","DOLOGIN_USER","USER_ACCOUNT_LOCKED","USER_ACCOUNT_UNLOCKED","USER_ACCOUNT_UPDATE_PASS","SEARCHTERM_UPDATE","SEARCH_RESULTS","SEARCH_HEADER_COMP_SEARCHTERM_UPDATE","SEARCH_HEADER_COMP_SEARCH_RESULTS","BUSINESS_RULES_SEARCHCRITERIAS_UPDATE","ENUMERATIONS_SELECTION_UPDATE","module","exports","CustomEvent","bubbles","cancelable","detail","evt","createEvent","initCustomEvent","prototype","Event","tabName","viewName","targetURL","param","backOfficeHomeURL","backOfficeRealViewURL","AdminLayout","lazy","LoginLayout","browserHistory","createBrowserHistory","App","Suspense","fallback","exact","render","component","Boolean","appConfig","currentPageTitle","breadItems","menuGroup","allReducers","combineReducers","types","nextState","searchType","ns","searchBusinessRules","rules","businessClass","enumds","headerSearchComp","criterias","applicationConfig","ns1","ns7","adminHome","ns9","lifecycleNavCriterias","ns10","emailTemplatesNavCriterias","imagesCaches","imageCache","image","navigationConfig","ns13","actualState","activeMenu","userContextStore","rootReducer","SW_INIT","serviceWorkerInitialized","SW_UPDATE","serviceWorkerUpdated","serviceWorkerRegistration","createStore","ReactDOM","getElementById","navigator","serviceWorker","ready","registration","unregister","userAccountLocked","userAccountUnLocked","userAccountUpdatePass","updateSearchMembersTerm","updateBusinessRulesSearchCriterias","downloadPrimaryContentBlob","downloadAttachment","attachementId","addAttachment","bodyson","logout","loginAsAnon","contId","comment","AttributeArrayGroup","moveDown","moveUp","save","footerActions","add","edit","cancel","isEditing","initalItems","mode","wrapInform","reset","newItems","a","indexOf","splice","newplace","colspan","ButtonGroup","childRows","rowDef","cols","datakey","editor","defaultValue","rowActions","colSpan","borderless","AttributeArrayObjectGroup","isEditingThisItem","editingItems","initialindex","editingindex","currentIndex","newItem","addingNewItem","blocs","indexdata","formsState","standardSaveForm","saveButtonIcon","standardResetForm","standardEditForm","formValidated","editingFormData","pattern","attPath","masterFile","stopPropagation","endProcessing","attrs","lastRow","simpleHRow","actionableHRow","simpleVRow","titleProvider","simpleArrayRow","rootdata","arrayOfvalues","showLabel","labelLess","feedBack","Feedback","invalidFeedBack","editorComponent","enums","opt","isInvalid","selected","placeholderText","isClearable","showTimeSelect","withPortal","timeFormat","dataKey","rowGroupActions","empty","finalheader","finalFooter","processGroup","processHeader","footer","processFooter","formEl","validated"],"mappings":"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","file":"static/js/main.22ea9e23.chunk.js","sourcesContent":["import React from 'react';\nimport {GenderViewer } from '_components/_common';\nimport {Label} from 'reactstrap';\nimport moment from 'moment';\nimport queryString from 'query-string';\n\nexport const commons = {\n\ttoastError,\n\ttoastSuccess,\n\tgetValueFromUrl,\n\tgetStatusesFromUrl,\n\ttoJSONObject,\n\tgetPropByString,\n\tgetInputType,\n\tindexOfItemInArray,\n\tclone,\n\tgetAttributeViewer,\n\tgetWorkingContainerName,\n\tgetWorkingContainerPath,\n\tgetWorkingContainerId,\n\thasRoleAdmin,\n\thasRoleSuperAdmin,\n\thasRoleReader,\n\thasRoleUser,\n\thasRoleAnon,\n\tgetRootContainerId,\n\tgetCurrentUserAccountId,\n\tgetCurrentUserAccountOwnerId,\n\tgetRestErrorMessage,\n\tisRequestError,\n\tisRequestSuccess,\n\tgetUrlVars,\n\tarrayRemove,\n\tsetSessionId,\n\tkatappult_core_logout,\n\tkatappult_core_loginSuccess,\n\tkatappult_core_loginError,\n\tsessionId,\n\tisLoggedIn,\n\tgetSystemPreference,\n\thasRole,\n\thasAnyRole,\n\tkatappult_core_isUserConnected,\n\tkatappult_core_isAnonConnected,\n\tisLoggedInAsUser,\n\tisLoggedInAsAnon,\n\tisNotLoggedIn,\n\tclientContainerId,\n\tgetContainerSetting,\n\tgetBooleanContainerSetting,\n\tgetApiRootURL,\n\tvalidateEmail,\n\tisServer,\n\tauthorizationCookie\n}\n\nfunction isServer (){\n\treturn !(\n\t\ttypeof window !== 'undefined' &&\n\t\twindow.document &&\n\t\twindow.document.createElement\n\t);\n}\n\nfunction getContainerSetting(containerSettingsRX, key){\n\tlet value = ''\n\tcontainerSettingsRX.map(setting => {\n\t\tif(setting.attributes.key === key){\n\t\t\tvalue = setting.attributes.value;\n\t\t}\n\t})\n\n\treturn value\n}\n\nfunction getBooleanContainerSetting(containerSettingsRX, key){\n\tlet result = this.getContainerSetting(containerSettingsRX, key);\n\tif(result === 'oui' || result === 'true' || result === 'yes' || result === '1'){\n\t\treturn true\n\t}\n\treturn false;\n}\n\nfunction clientContainerId(userContextRX){\n\treturn userContextRX.workingContainer.id\n}\n\nfunction hasAnyRole(userContextRX, roleNames){\n\tlet result = false;\n\tif(userContextRX.rolesInWorkingContainer){\n\t\tuserContextRX.rolesInWorkingContainer.map(role => {\n\t\t\tif(roleNames.includes(role.attributes.key)){\n\t\t\t\tresult = true;\n\t\t\t}\n\t\t})\n\t}\n\treturn result;\n}\n\nfunction hasRole(userContextRX, roleName){\n\tlet result = false;\n\tif(userContextRX.rolesInWorkingContainer){\n\t\tuserContextRX.rolesInWorkingContainer.map(role => {\n\t\t\tif(role.attributes.key === roleName){\n\t\t\t\tresult = true;\n\t\t\t\treturn true;\n\t\t\t}\n\t\t})\n\t}\n\n\treturn result;\n}\n\nfunction getSystemPreference(userContextRX, name){\n\tlet result;\n\tuserContextRX.systemPreferences.map(preference => {\n\t\tif(preference.attributes.key === name){\n\t\t\tresult = preference.attributes.value;\n\t\t}\n\t})\n\treturn result;\n}\n\nfunction getRootContainerId(userContextRX){\n\treturn userContextRX.applicationContainer?.id\n}\n\nfunction getWorkingContainerId(userContextRX){\n\treturn userContextRX.workingContainer?.id\n}\n\n/**\n * When fetched single result from remote server, this json object must be\n * parsed like this in order to read attributes on it.\n *\n * @param data\n * @returns JSON object\n */\nfunction toJSONObject(data){\n\tconst d = JSON.stringify(data);\n\tconst datason = JSON.parse(d);\n\treturn datason;\n}\nfunction clone(data){\n\tconst d = JSON.stringify(data);\n\tconst datason = JSON.parse(d);\n\treturn datason;\n}\n/**\n * Resolve attribute value on object.\n * Ex: Will read 'masterAttributes.name' on 'Obj'\n *\n * @param obj\n * @param propString\n * @returns\n */\nfunction getPropByString (obj, propString) {\n\tif (!propString) return \"-\";\n\n\tlet prop, props = propString.split('.');\n\tlet i = 0;\n\tfor (let iLen = props.length - 1; i < iLen; i++) {\n\t\tprop = props[i];\n\t\tlet candidate = obj[prop];\n\t\tif (candidate !== undefined) {\n\t\t\tobj = candidate;\n\t\t} else {\n\t\t\tbreak;\n\t\t}\n\t}\n\treturn obj && obj[props[i]] ? obj[props[i]] : '';\n}\n/**\n *\n * @param {*} attribute\n */\nfunction getInputType(attribute){\n\tswitch(attribute.type){\n\t\tcase 'string': return 'text';\n\t\tcase 'text': return 'text';\n\t\tcase 'textarea': return 'textarea';\n\t\tcase 'yesno': return 'yesno';\n\t\tcase 'bool': return 'checkbox';\n\t\tcase 'radio': return 'radio';\n\t\tcase 'checkbox': return 'checkbox';\n\t\tcase 'email': return 'email';\n\t\tcase 'tel': return 'tel';\n\t\tcase 'number': return 'number';\n\t\tcase 'select': return 'select';\n\t\tcase 'password': return 'password';\n\t\tcase 'date': return 'date';\n\t\tcase 'datetime': return 'datetime';\n\t\tcase 'file': return 'file';\n\t\tdefault: return 'text';\n\t}\n}\nfunction getAttributeViewer(attribute, value){\n\tconst type = attribute.type\n\tif( 'gender' === type){\n\t\treturn (\n\t\t\t<GenderViewer value={value}/>\n\t\t)\n\t}\n\telse if('bool' === type || 'yesno' === type){\n\t\treturn <React.Fragment>\n\t\t\t<input type='checkbox' disabled={true} defaultChecked={value} checked={value}/>\n\t\t</React.Fragment>\n\t}\n\telse if(attribute.staticValue){\n\t\treturn <Label className=\"control-value-view\">{attribute.staticValue}</Label>\n\t}\n\telse if(attribute.displayComponent){\n\t\treturn attribute.displayComponent(value)\n\t}\n\telse if(attribute.type === 'date' || attribute.type === 'datetime'){\n\t\tlet dateformat = attribute.dateFormat\n\t\tif(value === null || value === '') return <span></span>\n\n\t\tconst date = moment(value, 'YYYY-MM-DD HH:mm:ss S').format(dateformat);\n\t\treturn <Label className=\"control-value-view\">{date}</Label>\n\t}\n\telse {\n\t\treturn <Label className=\"control-value-view\">{String(value) === 'undefined' ? '' : String(value)}</Label>\n\t}\n}\n/**\n * Get the index of an item in given array.\n * Items arre compared by id\n */\nfunction indexOfItemInArray(item, array){\n\tlet index = -1\n\tlet i= 0\n\tarray.map(d => {\n\t\tif(d.id === item.id) index = i\n\t\ti++\n\t})\n\treturn index\n}\n\nfunction getWorkingContainerName(userContextRX){\n\treturn userContextRX.workingContainer.name\n}\n\nfunction getWorkingContainerPath(userContextRX){\n\treturn userContextRX.workingContainer.path\n}\n\nfunction getWorkingContainer(userContextRX){\n\treturn userContextRX.workingContainer.id;\n}\n\nfunction hasRoleAdmin(userContextRX){\n\tlet admin = hasAnyRole(userContextRX,['ROLE_ADMIN', 'ROLE_SUPERADMIN']) || hasRoleSuperAdmin(userContextRX);\n\treturn admin;\n}\n\nfunction hasRoleSuperAdmin(userContextRX){\n\tlet result = false;\n\tuserContextRX.rolesInApplicationContainer.map(role => {\n\t\tif(role.attributes.key === 'ROLE_SUPERADMIN'){\n\t\t\tresult = true;\n\t\t\treturn true;\n\t\t}\n\t})\n\n\treturn result;\n}\n\nfunction hasRoleReader(userContextRX){\n\tif(userContextRX.rolesInWorkingContainer.length === 0){\n\t\treturn true\n\t}\n\treturn hasRole(userContextRX, 'ROLE_READER')\n}\n\nfunction hasRoleUser(userContextRX){\n\tif(userContextRX.rolesInWorkingContainer.length === 0){\n\t\treturn false;\n\t}\n\treturn hasRole(userContextRX,'ROLE_USER')\n}\n\nfunction hasRoleAnon(userContextRX){\n\tif(userContextRX.rolesInWorkingContainer.length === 0){\n\t\treturn true\n\t}\n\treturn hasRole(userContextRX,'ROLE_ANON')\n}\n\n\n/**\n * Return true if current user is super admin\n * @returns\n */\nfunction isSuperAdministrator(userContextRX){\n\tif(userContextRX.rolesInWorkingContainer.length === 0){\n\t\treturn false\n\t}\n\treturn hasRole(userContextRX, 'ROLE_SUPERADMIN')\n}\n/**\n * @returns\n */\nfunction getCurrentUserAccountId(userContextRX){\n\treturn userContextRX.userAccount.id\n}\n/**\n * @returns\n */\nfunction getCurrentUserAccountOwnerId(userContextRX){\n\treturn userContextRX.userDetails.id\n}\nfunction getUrlVars() {\n\tlet lets = {};\n\treturn lets;\n}\nfunction arrayRemove(arr, value) {\n\treturn arr.filter(function(ele){\n\t\treturn ele != value;\n\t});\n}\n\nfunction sessionId(){\n\treturn getAuthorizationCookie();\n}\n\nfunction getCurrentUserAccountLogin(userContextRX){\n\treturn userContextRX.userAccount.nickName;\n}\n\nfunction katappult_core_logout() {\n\tdocument.cookie = 'Authorization=; Max-Age=0; Path=/';\n}\n\nfunction setSessionId(session_id){\n\tdocument.cookie =  'Authorization=' + session_id + '; Max-Age=365; path=/';\n}\n\nfunction katappult_core_loginSuccess(response) {\n\tconsole.log('response:: ' + JSON.stringify(response))\n\tlet links = response.data.links;\n\tlet userContext = {}\n\tuserContext.rolesInApplicationContainer  = links.rolesInApplicationContainer.data\n\tuserContext.rolesInWorkingContainer = links.rolesInWorkingContainer.data\n\tuserContext.userPreferences = links.userPreferences.data\n\tuserContext.systemPreferences = links.systemPreferences?.data\n\tuserContext.workingContainer = JSON.parse(links.workingContainer)\n\tuserContext.applicationContainer = JSON.parse(links.applicationContainer)\n\tuserContext.userAccount = JSON.parse(links.account)\n\tuserContext.userDetails = JSON.parse(links.user)\n\tuserContext.applicationCurrentEnvironmentName = links.applicationCurrentEnvironmentName\n\tuserContext.applicationFriendlyName = links.applicationFriendlyName\n\n\tlet isanon = userContext.userAccount.nickName === 'epanon';\n\tlet isepadmin = userContext.userAccount.nickName === 'epadmin';\n\tif(isanon) {\n\t\tuserContext.rolesInWorkingContainer = [{attributes:{key: 'ROLE_ANON'}}]\n\t}\n\telse if(isepadmin){\n\t\tuserContext.rolesInWorkingContainer = [{attributes:{key: 'ROLE_ADMIN'}}, {attributes:{key: 'ROLE_USER'}}]\n\t}\n\treturn userContext;\n}\n\nfunction katappult_core_loginError(){\n}\n\nfunction katappult_core_isUserConnected (userContextRX) {\n\tlet sessionId = getAuthorizationCookie(),\n\t\tsession_valid = sessionId !== undefined && sessionId != null;\n\treturn session_valid && userContextRX.userAccount.nickName !== 'epanon';\n}\n\nfunction katappult_core_isAnonConnected(userContextRX){\n\tlet result = userContextRX.userAccount.nickName === 'epanon'\n\treturn result;\n}\n\nfunction isNotLoggedIn(userContextRX){\n\treturn !katappult_core_isUserConnected(userContextRX)\n}\n\nfunction isLoggedIn(userContextRX){\n\treturn katappult_core_isUserConnected(userContextRX) || commons.katappult_core_isAnonConnected(userContextRX);\n}\n\nfunction isLoggedInAsUser(userContextRX){\n\treturn katappult_core_isUserConnected(userContextRX) && !commons.katappult_core_isAnonConnected(userContextRX);\n}\n\nfunction isLoggedInAsAnon(userContextRX){\n\treturn commons.katappult_core_isAnonConnected(userContextRX);\n}\n\nfunction validateEmail(email){\n\tif (!/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/.test(email)){\n\t\treturn false\n\t}\n\treturn true\n}\n\nfunction getApiRootURL(){\n\tconst backendRootContext = process.env.REACT_APP_CONTEXT_ROOT;\n\tconst hostname = window && window.location && window.location.hostname;\n\tconst port = window && window.location && window.location.port;\n\tconst origin = window && window.location && window.location.origin;\n\tconst proxyURL = process.env.REACT_APP_PROXY_URL\n\n\tlet API_ROOTV;\n\tif(proxyURL){\n\t\tAPI_ROOTV = proxyURL;\n\t}\n\telse {\n\t\tif (/^localhost/.test(hostname) && port && (port === '3000' || port === '3001')) {\n\t\t\tAPI_ROOTV = `http://${hostname}:8080/${backendRootContext}`;\n\t\t} else {\n\t\t\tAPI_ROOTV = `${origin}/${backendRootContext}`;\n\t\t}\n\t}\n\treturn API_ROOTV;\n}\n\nfunction isRequestError(response){\n\treturn !response || response.status === 'error'\n\t\t||  response.status === 500 ||  response.status === '500'\n\t\t||  response.status === 404 ||  response.status === '404'\n\t\t||  response.status === 400 ||  response.status === '400'\n\t\t||  response.status === 401 ||  response.status === '401'\n}\n\nfunction isRequestSuccess(response){\n\treturn !isRequestError(response);\n}\n\nfunction getRestErrorMessage(response) {\n\treturn response ? response.message : 'Erreur interne, veuillez contacter le support';\n}\n\nfunction toastError(response) {\n\treturn <div>\n\t\t<div style={{'font-size':\"13px\",'font-weight':'bold'}}>\n\t\t\t<span>{response.errorFamily}</span>\n\t\t\t{response.errorCode ? <span> - {response.errorCode}</span> : ''}\n\t\t</div>\n\t\t<div style={{'display': 'flex','margin':'0.6rem'}}>\n\t\t\t<i className={'fa fa-exclamation-triangle fa-lg'} style={{'margin-top':'0.5rem'}}></i>\n\t\t\t<div style={{'font-size':\"13px\",'margin-left':'1rem'}}>{response.message}</div>\n\t\t</div>\n\t</div>\n}\n\nfunction toastSuccess(textInfo) {\n\tconst content = <div className={'toast-info'}>\n\t\t<i className={'fa fa-check-circle fa-md'}></i>\n\t\t<div className={'message'}>{textInfo}</div>\n\t</div>\n\n\treturn content;\n}\n\nfunction getValueFromUrl (token)  {\n\tconst href = window.location.href\n\tif(href.split('?').length > 0){\n\t\tconst urlParams  = queryString.parse(\"?\" + href.split('?')[1])\n\t\treturn urlParams[token] ? urlParams[token] : ''\n\t}\n\n\treturn '';\n}\n\nfunction getStatusesFromUrl ()  {\n\tconst href = window.location.href\n\tlet statuses = []\n\tif(href.split('?').length > 0){\n\t\tconst urlParams  = queryString.parse(\"?\" + href.split('?')[1])\n\t\tconst statusesFromUrl = urlParams[\"status[]\"]\n\t\tif(!Array.isArray(statusesFromUrl) && statusesFromUrl){\n\t\t\tstatuses.push(statusesFromUrl)\n\t\t}\n\t\telse {\n\t\t\tstatuses = statusesFromUrl\n\t\t}\n\t}\n\n\treturn statuses ? statuses : [];\n}\n\nfunction authorizationCookie(){\n\treturn getAuthorizationCookie();\n}\n\nfunction getAuthorizationCookie(){\n\tconst cookieValue = document.cookie\n\t\t.split('; ')\n\t\t.find((row) => row.startsWith('Authorization'))\n\t\t?.split('=')[1];\n\n\treturn cookieValue ? cookieValue : '';\n}\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport './DataTableHeader.css';\n\nconst propTypes = {\n\tcolumns: PropTypes.array,\n};\n\nconst defaultProps = {\n\tcolumns:[],\n};\n\n/**\n * Header of simple data table\n */\nclass DataTableHeader extends Component {\n\n\tconstructor(props){\n\t\tsuper(props);\n\t}\n\n\ttoHeader(columns){\n\t\treturn columns.map(col => {\n\t\t\tlet className = col.headerClass ? col.headerClass : '';\n\t\t\tclassName = col.headerClassName ? col.headerClassName : className\n\t\t\treturn <th scope=\"col\" className={className}>{col.name}</th>\n\t\t});\n\t}\n\n\trender() {\n\t\tif(this.props.hideTableHeader === 'true'){\n\t\t\treturn <></>\n\t\t}\n\n\t\tconst {columns, ...attributes } = this.props;\n\t\treturn (\n\t\t\t<React.Fragment>\n\t\t\t\t<thead>\n\t\t\t\t<tr>\n\t\t\t\t\t{this.toHeader(columns)}\n\t\t\t\t</tr>\n\t\t\t\t</thead>\n\t\t\t</React.Fragment>\n\t\t);\n\t}\n}\n\nDataTableHeader.propTypes = propTypes;\nDataTableHeader.defaultProps = defaultProps;\n\nexport default DataTableHeader;\n\n\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport {commons} from '_helpers/commons.js';\nimport moment from 'moment'\nimport localization from 'moment/locale/fr';\nimport './DataTableRow.css';\n\nconst propTypes = {\n\tcolumns: PropTypes.array,\n};\n\nconst defaultProps = {\n\tcolumns:[],\n};\n\n/**\n * Simple Datatable Row\n */\nclass DataTableRow extends Component {\n\n\tconstructor(props){\n\t\tsuper(props);\n\t}\n\n\ttoRow(columns, item) {\n\t\tconst cells = [];\n\t\tcolumns.map(col => {\n\t\t\tconst className = col.className ? col.className : 'dt-center'\n\t\t\tconst type = col.type;\n\t\t\tif(this.isDateCol(col)){\n\t\t\t\tconst dateFormat = col.dateFormat;\n\t\t\t\tconst field = col.dataField;\n\t\t\t\tconst d = commons.getPropByString(item, field);\n\n\t\t\t\tif(d && d !== ''){\n\t\t\t\t\tconst date = moment(d,  'YYYY-MM-DD hh:mm:ss S').locale('fr', localization).format(dateFormat);\n\t\t\t\t\tcells.push(this.dateRow(date, className));\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tcells.push(<td className={className}></td>);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if(this.isDisplayableCol(col)){\n\t\t\t\tlet field = col.dataField;\n\t\t\t\tlet val = commons.getPropByString(item, field);\n\t\t\t\tif(col.dataField){\n\t\t\t\t\tcells.push(col.displayComponent(val, item));\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tcells.push(col.displayComponent(val, item));\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if(col.enumProvider){\n\t\t\t\tlet val = commons.getPropByString(item, col.dataField);\n\t\t\t\tval = val ? val.split(';') : []\n\t\t\t\tlet selectValue = []\n\t\t\t\tcol.enumProvider().map(value => {\n\t\t\t\t\tif(val.includes(value.key)) {\n\t\t\t\t\t\tselectValue.push(value.value)\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\tcells.push(<td className={className}>{selectValue}</td>);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tlet field = col.dataField;\n\t\t\t\tconst value = commons.getPropByString(item, field);\n\t\t\t\tif(type === 'yesno'){\n\t\t\t\t\tif(String(value) === \"true\"){\n\t\t\t\t\t\tcells.push(<td className={col.className ? col.className : \"dt-center\"}>\n\t\t\t\t\t\t\t\t<input type={'checkbox'} checked disabled/>\n\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t\telse{\n\t\t\t\t\t\tcells.push(<td className={col.className ? col.className : \"dt-center\"}>\n\t\t\t\t\t\t\t\t<input type={'checkbox'} disabled/>\n\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tcells.push(this.stringRow(item, field, col));\n\t\t\t\t}\n\n\t\t\t}\n\t\t});\n\n\t\treturn cells;\n\t}\n\n\tisDateCol(col){\n\t\treturn col.dateFormat !== undefined;\n\t}\n\n\tisDisplayableCol(col) {\n\t\treturn col.displayComponent !== undefined;\n\t}\n\n\tdateRow(value, classname){\n\t\tconst colclass = classname ? classname : 'dt-center'\n\t\treturn <td className={colclass}>{value}</td>\n\t}\n\n\tstringRow(item, field, col) {\n\t\tlet suffix = col.suffix ? col.suffix : ''\n\t\treturn <td className={col.className ? col.className : \"dt-center\"}>\n\t\t\t{col.contentClassName && <span className={'col.contentClassName'}>{String(commons.getPropByString(item, field))}{suffix}</span>}\n\t\t\t{!col.contentClassName && <>{String(commons.getPropByString(item, field))}{suffix}</>}\n\t\t</td>\n\t}\n\n\trender() {\n\t\tconst item = this.props.item;\n\t\tconst { columns, ...attributes } = this.props;\n\t\tconst row = this.toRow(columns, item);\n\n\t\tlet id;\n\t\tif(item.attributes){\n\t\t\tid = item.attributes.id.toString()\n\t\t}\n\t\telse {\n\t\t\tid = item.id.toString()\n\t\t}\n\n\t\tif(this.props.tableConfig.onRowClick){\n\t\t\treturn (\n\t\t\t\t<React.Fragment>\n\t\t\t\t\t<tr key={id} className={this.props.rowClassName}\n\t\t\t\t\t\tonClick={(e ) => this.props.tableConfig.onRowClick(e, id, item)}>\n\t\t\t\t\t\t{row}\n\t\t\t\t\t</tr>\n\t\t\t\t</React.Fragment>\n\t\t\t);\n\t\t}\n\n\t\treturn (\n\t\t\t<React.Fragment>\n\t\t\t\t<tr key={id} className={this.props.rowClassName}>\n\t\t\t\t\t{row}\n\t\t\t\t</tr>\n\t\t\t</React.Fragment>\n\t\t);\n\t}\n}\n\nDataTableRow.propTypes = propTypes;\nDataTableRow.defaultProps = defaultProps;\n\nexport default DataTableRow;\n","import React, { Component} from 'react';\nimport { ListGroup, CardFooter, Card, Col, Pagination, PaginationItem, PaginationLink, Row } from 'reactstrap';\nimport PropTypes from 'prop-types';\nimport { EmptyPane } from '_components/_common';\n\nconst propTypes = {\n    tableConfig: PropTypes.array,\n    items: PropTypes.any,\n    metaData: PropTypes.any,\n    tableClassName: PropTypes.string,\n    paginate: PropTypes.bool,\n};\n\nconst defaultProps = {\n    tableConfig:[], \n    items:'',\n    metaData: '',\n    tableClassName: 'katappultsimple-table',\n    paginate: true,\n};\n\n/**\n * Simple ListGroupDataTable\n */\nclass ListGroupDataTable extends Component {\n    \n\tpopulatePagination() {\n\t\tlet index = 0;\n\t\tconst pitem = [];\n        let pagination;\n\n        if(this.props.paginate === true) {\n\n            const metaData = JSON.parse(this.props.metaData);\n            let hasPreviousPage = !metaData.hasPreviousPage;\n            let hasNextPage = !metaData.hasNextPage;\n            \n            pitem.push(<PaginationItem disabled={hasPreviousPage}>\n                <PaginationLink previous tag=\"button\">Prev</PaginationLink>\n            </PaginationItem>);\n        \n            for(let i = index; i < metaData.totalPages; i++) {\n                pitem.push(<PaginationItem active={metaData.pageNumber === i}>\n                    <PaginationLink tag=\"button\">{++index}</PaginationLink>\n                    </PaginationItem>);\n            }\n\n            pitem.push(<PaginationItem disabled={hasNextPage}>\n                    <PaginationLink next tag=\"button\">Next</PaginationLink>\n                </PaginationItem>);\n\n            pagination = <CardFooter className=\"katappultsimple-table-footer\">\n                <Row>\n                    <Col md=\"6\"></Col>\n                    <Col md=\"6\">\n                        <div className=\"float-right\">\n                            <Pagination aria-label=\"Page navigation\" size={this.props.tableConfig.paginationSize}>{pitem}</Pagination>\n                        </div>\n                    </Col>\n                </Row>    \n            </CardFooter>\n        }\n        else {\n            pagination = <div></div>\n        }\n        \n\t\treturn pagination;\n    }\n    \n\tloading = () => <div className=\"animated fadeIn pt-1 text-center\">Loading...</div>\n    \n\trender() {\n        const metaData = JSON.parse(this.props.metaData);\n\t\tif(metaData.totalElements > 0){\n\t\t\tconst rows = this.props.rows;\n\t\t\tconst pagination = this.populatePagination();\n            \n\t\t\tlet title\n\t\t\tif(this.props.tableConfig.displayHeader === true){\n\t\t\t\ttitle = <Row>\n\t\t                <Col xs=\"12\" lg=\"12\">\n\t\t            \t<div className=\"katappult-table-header\">\n\t\t                    <h3 className=\"float-left, katappult-table-title\">{this.props.tableConfig.title}</h3>\n\t\t                </div>\n\t\t            </Col>\n\t\t        </Row>\n\t\t\t}\n            \n\t\t\treturn (\n\t\t\t    <div>\n                    {title}\n\t\t            <Row>\n                        <Col xs=\"12\" lg=\"12\" xl=\"12\">\n                            <ListGroup>{rows}</ListGroup>    \n                            {pagination}\n                        </Col>\n                    </Row>\n\t\t\t   </div>\n\t\t  );\n\t\t}\n\t\telse {\n            return emptyTableContent(this.props.tableConfig.emptyMessageTitle, \n                this.props.tableConfig.emptyMessageDescription, \n                this.props.tableConfig.emptyMessageSubDescription,\n                this.props.tableConfig.emptyActions)\n\t\t}\n  }\n}\n\nconst emptyTableContent = (title, description, subDescription, emptyActions) => {\n\tlet emptyActionsDisplay\n\tif(emptyActions){\n\t\temptyActionsDisplay = emptyActions()\n\t}\n\t\n\treturn (\n        <div className=\"flex-row align-items-center\">\n                <Row className=\"justify-content-center\">\n                    <Col xs=\"12\" sm=\"12\" md=\"12\" lg=\"12\" xl=\"10\">\n                        <Card className=\"card-accent-warning\">\n                        \t<EmptyPane Pane mainMessage={title} secondaryMessage={description} actions={emptyActionsDisplay}/>\n                        </Card>\n                    </Col>\n                </Row>\n        </div>\n  )\n}\n\n\nListGroupDataTable.propTypes = propTypes;\nListGroupDataTable.defaultProps = defaultProps;\n\nexport default ListGroupDataTable;\n","import React from 'react';\nimport './ContextualMenu.css';\n\n/**\n * Displays ellipsis on table\n */\nclass ContextualMenu extends React.Component {\n    render() {\n\t    return (\n\t      <React.Fragment> \n\t      \t\t<td><i className=\"cui-options icons font-xl\"></i></td>\n\t\t   </React.Fragment>\n\t    );\n\t }\n}\n\nexport default ContextualMenu;\n","import React, {Component} from 'react';\nimport {Table} from 'reactstrap';\nimport {DataTableHeader, DataTableRow} from '../index';\n\nclass AutoScrollDataTable extends Component {\n\n    constructor(props) {\n        super(props)\n\n        let maxPage= 1,\n            metaData = null,\n            currentPage = 0,\n            hasPrevious = false,\n            hasNext = false,\n            pageElements= 0,\n            totalElements = 0;\n\n        if (this.props.metaData) {\n            metaData = JSON.parse(this.props.metaData)\n            if (metaData) {\n                maxPage = metaData.totalPages\n                currentPage = metaData.pageNumber\n                hasPrevious = metaData.hasPreviousPage\n                hasNext = metaData.hasNextPage\n                totalElements = metaData.totalElements\n                pageElements = metaData.pageElements ? metaData.pageElements : 0;\n            }\n        }\n\n        this.state = {\n            currentPage: currentPage,\n            maxPage: maxPage,\n            metaData: metaData,\n            hasPrevious: hasPrevious,\n            hasNext: hasNext,\n            totalElements: totalElements,\n            pageElements: pageElements,\n            isLoading: false,\n            items: this.props.items !== null ? JSON.parse(this.props.items) : [],\n        }\n\n        this.handlePagination = this.handlePagination.bind(this)\n        this.onScroll = this.onScroll.bind(this)\n    }\n\n    onScroll() {\n        let scroll = window.innerHeight + document.documentElement.scrollTop !== document.documentElement.offsetHeight\n            && !this.state.isLoading;\n\n        if (scroll) {\n            let canGoNext = this.state.hasNext === true && this.props.goToPage;\n            if (canGoNext) {\n                this.goNextPage();\n            }\n        }\n    }\n\n    componentDidMount() {\n        window.addEventListener('scroll', this.onScroll, false);\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener('scroll', this.onScroll, false);\n    }\n\n    handlePagination(e, i) {\n        if (e) e.preventDefault();\n        if (this.props.goToPage) {\n            this._doGoToPage(e.target.name)\n        }\n    }\n\n    goNextPage(e) {\n        if (e) e.preventDefault();\n        if (this.state.hasNext === true && this.props.goToPage) {\n            let pc = ++this.state.currentPage\n            if (pc > this.state.maxPage) {\n                this._doGoToPage(0)\n            } else {\n                this._doGoToPage(pc)\n            }\n\n        }\n    }\n\n    goPreviousPage(e) {\n        if (e) e.preventDefault();\n        if (this.state.hasPrevious === true && this.props.goToPage) {\n            let pc = --this.state.currentPage\n            if (pc < 0) {\n                this._doGoToPage(0)\n            } else {\n                this._doGoToPage(pc)\n            }\n\n        }\n    }\n\n    _doGoToPage(i) {\n        if (this.props.goToPage) {\n            this.props.goToPage(i)\n        }\n        this.setState({isLoading: true})\n    }\n\n    populateHeaderPagination() {\n        const {metaData} = this.state;\n        let pagination = <div className=\"float-right autoscroll-pagination\">\n            <p className=\"table-total-element\">{this.state.pageElements}/{metaData.totalElements} Element(s)</p>\n        </div>\n        return pagination;\n    }\n\n    populateFooterPagination() {\n        const {metaData} = this.state;\n        let pagination = <div className=\"float-right autoscroll-pagination\">\n            <p className=\"table-total-element\">{this.state.pageElements}/{metaData.totalElements} Element(s)</p>\n        </div>\n        return pagination;\n    }\n\n    loading = () => <div className=\"animated fadeIn pt-1 text-center\">Loading...</div>\n\n    populateRows() {\n        const rows = [];\n        const items = this.state.items;\n        items.map((item) => {\n            rows.push(\n                <DataTableRow  {...this.props} item={item} columns={this.props.tableConfig.columnsConfig}/>\n            );\n        });\n\n        return rows;\n    }\n\n    componentWillUpdate(nextProps, prevState) {\n        if (this.state.metaData && nextProps.metaData !== JSON.stringify(this.state.metaData)) {\n            let metaData = JSON.parse(nextProps.metaData);\n            let currItems = this.state.items.slice();\n            currItems.concat(JSON.parse(nextProps.items));\n\n            //console.log('nextProps.metaData : ' + nextProps.metaData)\n            let pageElements;\n            if (metaData.totalPages > 1) {\n                pageElements = this.state.pageElements + metaData.pageElements\n            } else {\n                pageElements = metaData.totalElements\n            }\n\n            this.setState({\n                metaData: metaData,\n                items: JSON.parse(nextProps.items),\n                currentPage: metaData.pageNumber,\n                maxPage: metaData.totalPages,\n                hasPrevious: metaData.hasPreviousPage,\n                hasNext: metaData.hasNextPage,\n                totalElements: metaData.totalElements,\n                pageElements: pageElements,\n                isLoading: false\n            })\n        }\n    }\n\n    render() {\n        if (this.props.totalElements > 0 || this.props.items !== null) {\n            const rows = this.populateRows();\n            const headerPagination = this.populateHeaderPagination();\n            const footerPagination = this.populateFooterPagination();\n\n            return (\n                <React.Fragment>\n                    {headerPagination}\n                    <Table hover={this.props.hover} responsive\n                           size={this.props.size} id={this.props.tableId}\n                           className={this.props.tableClassName} striped={this.props.striped}\n                           bordered={this.props.bordered}>\n\n                        <DataTableHeader {...this.props}\n                                         hideTableHeader={this.props.tableConfig.hideTableHeader}\n                                         columns={this.props.tableConfig.columnsConfig}/>\n                        <tbody>{rows}</tbody>\n                    </Table>\n                    {footerPagination}\n                </React.Fragment>\n            );\n        }\n    }\n}\n\n\nexport default AutoScrollDataTable;\n","import React, {useEffect, useState} from 'react';\nimport {Pagination, PaginationItem, PaginationLink} from \"reactstrap\";\n\nfunction DatatablePagination(props) {\n\n    const [maxPage, setMaxPage] = useState(props.metaData.totalPages)\n    const [hasPrevious, setHasPrevious] = useState(props.metaData.hasPreviousPage)\n    const [hasNext, setHasNext] = useState(props.metaData.hasNextPage)\n    const [currentPage, setCurrentPage] = useState(props.metaData.pageNumber)\n    const [totalElements, setTotalElements] = useState(props.metaData.totalElements)\n\n    useEffect(() => {\n        setMaxPage(props.metaData.totalPages)\n        setHasPrevious(props.metaData.hasPreviousPage)\n        setHasNext(props.metaData.hasNextPage)\n        setCurrentPage(props.metaData.pageNumber)\n        setTotalElements(props.metaData.totalElements)\n\n    }, [props.metaData])\n\n    const goNextPage = (e) =>{\n        e.preventDefault();\n        if(hasNext === true){\n            let pc = currentPage + 1;\n            if(pc > maxPage){\n                _doGoToPage(0)\n            }\n            else {\n                _doGoToPage(pc)\n            }\n        }\n    }\n\n    const goPreviousPage = (e) => {\n        e.preventDefault();\n        if(hasPrevious === true){\n            let pc = currentPage - 1;\n            if(pc < 0){\n                _doGoToPage(0);\n            }\n            else {\n                _doGoToPage(pc)\n            }\n        }\n    }\n\n    const handlePagination = (e, i) => {\n        e.preventDefault();\n        _doGoToPage(i);\n    }\n\n    const _doGoToPage = (i)  => {\n        if (props.goToPage) {\n            props.goToPage(i)\n        }\n    }\n\n    let pagination, index = 0;\n    const pitem = [];\n\n    let displayTotalElements = props.displayTotalElements === true;\n    const paginationSize = props.tableConfig ? props.tableConfig.paginationSize : paginationSize;\n\n    if(props.paginate === true) {\n        pitem.push(<PaginationItem disabled={!hasPrevious} >\n            <PaginationLink previous tag=\"button\" onClick={e => goPreviousPage(e)}>Prev</PaginationLink>\n        </PaginationItem>);\n\n        for(let i = index; i < maxPage; i++) {\n            let pageIndex = i;\n            let active = currentPage === pageIndex\n            let elem = <PaginationItem active={active} key={i}>\n                <PaginationLink tag=\"button\" name={pageIndex} href={pageIndex} onClick={e => handlePagination(e, pageIndex)}>{++index}</PaginationLink>\n            </PaginationItem>\n\n            pitem.push(elem);\n        }\n\n        pitem.push(<PaginationItem disabled={!hasNext}>\n            <PaginationLink next tag=\"button\" onClick={e => goNextPage(e)}>Next</PaginationLink>\n        </PaginationItem>);\n\n        let totalElements;\n        if(displayTotalElements){\n            totalElements = <div className=\"items-number\">\n                <p>Page {currentPage + 1} of {maxPage} - {props.metaData.totalElements} Element(s)</p>\n            </div>\n        }\n\n        pagination = <div className=\"table-footer\">\n            {maxPage > 1 &&\n              <Pagination aria-label=\"Page navigation\" className=\"pagination\" size={paginationSize}>{pitem}</Pagination>\n            }\n            <div className=\"table-total-elements\">{totalElements}</div>\n        </div>\n    }\n    else {\n        pagination = <div></div>\n    }\n\n    return pagination;\n\n}\n\nexport default DatatablePagination;\n","import React, { Component } from 'react';\nimport { Table } from 'reactstrap';\nimport { DataTableHeader, DataTableRow } from '../index';\nimport PropTypes from 'prop-types';\nimport {EmptyPane} from '_components/_common';\nimport DatatablePagination from \"_components/_common/DataTable/Table/DatatablePagination\";\n\nconst propTypes = {\n    tableConfig: PropTypes.array,\n    items: PropTypes.any,\n    metaData: PropTypes.any,\n    tableClassName: PropTypes.string,\n    paginate: PropTypes.bool,\n    goToPage: PropTypes.func,\n};\nconst defaultProps = {\n    tableConfig:[],\n    items:'',\n    metaData: '',\n    paginate: true,\n};\n/**\n * Simple DataTable\n */\nclass DataTable extends Component {\n\n\tconstructor(props){\n\t\tsuper(props)\n\n\t\tlet maxPage = 1,\n\t\tmetaData = null, currentPage = 0,\n\t\thasPrevious =false,\n\t\thasNext = false, totalElements = 0;\n\n\t\tif(this.props.metaData){\n\t\t\tmetaData = JSON.parse(this.props.metaData)\n\t\t\tif(metaData){\n\t\t\t\tmaxPage = metaData.totalPages\n\t\t\t\tcurrentPage= metaData.pageNumber\n\t\t\t\thasPrevious= metaData.hasPreviousPage\n\t\t\t\thasNext= metaData.hasNextPage\n\t\t\t\ttotalElements = metaData.totalElements\n\t\t\t}\n\t\t}\n\n\t\tthis.state ={\n\t\t\tcurrentPage: currentPage,\n\t\t\tmaxPage: maxPage,\n\t\t\thasPrevious: hasPrevious,\n\t\t\thasNext: hasNext,\n\t\t\ttotalElements: totalElements,\n\n\t\t\tmetaData: metaData,\n\t\t\titems: this.props.items !== null ? JSON.parse(this.props.items) : [],\n\t\t}\n\t}\n\n\tloading = () => <div className=\"animated fadeIn pt-1 text-center\">Loading...</div>\n\n    populateRows() {\n        const rows = [];\n        const itms = JSON.parse(this.props.items);\n\t\titms.map((item) => {\n            rows.push(\n             <DataTableRow  {...this.props}\n\t\t\t\t\t\t\titem={item}\n\t\t\t\t\t\t\ttableConfig={this.props.tableConfig}\n\t\t\t\t\t\t\tcolumns={this.props.tableConfig.columnsConfig}/>\n            );\n\t\t });\n\t\t return rows;\n\t}\n\n    componentWillUpdate(nextProps, prevState){\n    \t//console.log('>>>>>>>>>> nextProps : ' + nextProps.metaData)\n    \t//console.log('>>>>>>>>>> this.state : ' + JSON.stringify(this.state.metaData))\n    \tif(this.state.metaData && nextProps.metaData !== JSON.stringify(this.state.metaData)){\n    \t\tlet metaData = JSON.parse(nextProps.metaData);\n    \t\tthis.setState({\n    \t\t\tmetaData: metaData,\n    \t\t\titems: JSON.parse(nextProps.items),\n    \t\t\tcurrentPage: metaData.pageNumber,\n    \t\t\tmaxPage : metaData.totalPages,\n\t\t\t\thasPrevious: metaData.hasPreviousPage,\n\t\t\t\thasNext: metaData.hasNextPage,\n\t\t\t\ttotalElements: metaData.totalElements\n    \t\t})\n    \t}\n    }\n\n\trender() {\n\n\t\tif(this.props.totalElements > 0 || this.props.items ){\n\t\t\tconst rows = this.populateRows();\n            const title = this.props.tableTitle ? this.props.tableTitle :\n            \tthis.props.tableConfig.title? this.props.tableConfig.title : '';\n\n            const titleDisplay = title ? (\n                  <div className=\"katappult-table-header\">\n                      <h3>{title}</h3>\n                  </div>\n            ): ''\n\n\t\t\tconst metaData = this.props.metaData ? JSON.parse(this.props.metaData) : {}\n\n\t\t\treturn (\n\t\t\t\t<React.Fragment>\n                  {titleDisplay}\n                  <Table hover={this.props.hover} responsive\n                  \tsize={this.props.size} id={this.props.tableId}\n                  \tclassName={this.props.tableClassName} striped={this.props.striped}\n                  \tbordered={this.props.bordered}>\n\n\t\t\t\t\t  <DataTableHeader {...this.props}\n\t\t\t\t\t\t\thideTableHeader={this.props.tableConfig.hideTableHeader}\n\t\t\t\t\t\t\tcolumns={this.props.tableConfig.columnsConfig}/>\n\t\t\t\t\t  <tbody>{rows}</tbody>\n                  </Table>\n\t\t\t\t  <DatatablePagination {...this.props} metaData={metaData}/>\n          </React.Fragment>\n\t\t  );\n\t\t}\n\t\telse {\n            return emptyTableContent(this.props.tableConfig.emptyMessageTitle,\n                this.props.tableConfig.emptyMessageDescription,\n                this.props.tableConfig.emptyMessageSubDescription,\n                this.props.tableConfig.emptyActions);\n\t\t}\n  }\n}\n\nconst emptyTableContent = (title, description, subDescription, emptyActions) => {\n\tlet emptyActionsDisplay\n\tif(emptyActions){\n\t\temptyActionsDisplay = emptyActions()\n\t}\n\n\treturn (\n        <div className=\"empty-table-pane\">\n              <EmptyPane Pane mainMessage={title} secondaryMessage={description} actions={emptyActionsDisplay}/>\n        </div>\n  )\n}\n\n\nDataTable.propTypes = propTypes;\nDataTable.defaultProps = defaultProps;\n\nexport default DataTable;\n","import React, { Component } from 'react';\nimport {\n\tAttributeListGroup,\n} from '_components/_common';\n\nclass AttributesGroup extends Component {\n\n    render() {\n        const d = [];\n        this.props.attributesGroup.items.map(config => {\n            let view = <AttributeListGroup {...this.props} attributesListConfig={config} />\n            d.push(view);\n        });\n\n        return (\n            <React.Fragment>{d}</React.Fragment>\n        )\n    }\n}\n\nexport default AttributesGroup;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport AttributeListGroup from '_components/_common/AttributeListGroup';\n\nconst propTypes = {\n    attributesSchema: PropTypes.array,\n    displayActions: PropTypes.bool,\n};\n\nconst defaultProps = {\n    displayActions: true,\n};\n/**\n * Displays work infos panel for Workable/Revision controlled entities\n */\nclass WorkInfo extends Component {\n\n    constructor(props){\n        super(props)\n    }\n\n\trender() {\n\t\tconst item = this.props.data;\n        const versionedSchema = {\n            attributes: [\n                {name: 'Version number',  dataField: 'versionInfo.versionId', type: 'number'},\n                {name: 'Iteration number',  dataField: 'iterationInfo.iterationNumber', type: 'number'},\n                {name: 'Latest',  dataField: 'iterationInfo.isLatestIteration', type: 'bool'},\n                {name: 'Locked by',  dataField: 'workInfo.lockedBy', type: 'text'},\n                {name: 'Locked since',  dataField: 'workInfo.lockedSince', type: 'date',  dateFormat: 'DD/MM/YYYY HH:mm'},\n                {name: 'Working copy',  dataField: 'workInfo.isWorkingCopy', type: 'bool'},\n            ],\n        }\n\n        const iteratedSchema = {\n            attributes: [\n                {name: 'Iteration number',  dataField: 'iterationInfo.iterationNumber', type: 'number'},\n                {name: 'Latest',  dataField: 'iterationInfo.isLatestIteration', type: 'bool'},\n                {name: 'Locked by',  dataField: 'workInfo.lockedBy', type: 'text'},\n                {name: 'Locked since',  dataField: 'workInfo.lockedSince', type: 'date',  dateFormat: 'DD/MM/YYYY HH:mm'},\n                {name: 'Working copy',  dataField: 'workInfo.isWorkingCopy', type: 'bool'},\n            ],\n        }\n\n        const schemas = this.props.versioned ? versionedSchema : iteratedSchema;\n\n\t\tconst d = [];\n            let view = <AttributeListGroup {...this.props}\n                attributesListConfig={schemas}\n                data={item}\n                orientation=\"horizontal\"\n                displayHeader={this.props.displayHeader}\n                cardClassName={this.props.cardClassName}/>\n\n\t\treturn <React.Fragment>{view}</React.Fragment>\n\t}\n}\n\nWorkInfo.propTypes = propTypes;\nWorkInfo.defaultProps = defaultProps;\n\nexport default WorkInfo;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport AttributeListGroup from '_components/_common/AttributeListGroup';\n/**\n * Default attributes list\n */\nconst persistenceInfoAttributesSchema = {\n    items: [\n        {\n            attributes: [\n            \t{name: 'Créé par',  dataField: 'attributes.createdBy'},\n                {name: 'Créé le',  dataField: 'attributes.createDate',  dateFormat: 'DD/MM/YYYY HH:mm:ss', type: 'date'},\n            \t{name: 'Modifié par',  dataField: 'attributes.lastModifiedBy'},\n                {name: 'Modifié le',  dataField: 'attributes.lastModifiedDate',  dateFormat: 'DD/MM/YYYY HH:mm:ss', type: 'date'},\n            ]\n        },\n    ],\n};\n\nconst propTypes = {\n    attributesSchema: PropTypes.array,\n    orientation: PropTypes.string,\n};\n\nconst defaultProps = {\n    attributesSchema: persistenceInfoAttributesSchema,\n    orientation: 'horizontal'\n};\n/**\n * Persistnce informations of all entities\n */\nclass PersistenceInfo extends Component {\n\trender(){\n\t\tconst schema = this.props.attributesSchema;\n\t\tconst item = this.props.data;\n\n\t\tconst d = [];\n\t\tschema.items.map(config => {\n            let view = <AttributeListGroup {...this.props}\n                             attributesListConfig={config} data={item}\n                             cardClassName={this.props.cardClassName}/>\n\t        d.push(view);\n        });\n\n\t\treturn (<div className={'attribute-list'}>{d}</div>)\n\t}\n}\n\nPersistenceInfo.propTypes = propTypes;\nPersistenceInfo.defaultProps = defaultProps;\n\nexport default PersistenceInfo;\n","import React, {Component} from 'react'\nimport {Button} from 'reactstrap'\n\nclass ContentFileSelector extends Component {\n\n    constructor(props) {\n        super(props)\n        this.handleClick = this.handleClick.bind(this)\n    }\n\n    handleClick() {\n        this.refs.fileUploader.click()\n    }\n\n    render() {\n        return (<>\n            <Button onClick={this.handleClick}\n                    hidden={this.props.hidden}>\n                <i className=\"fa fa-upload fa-md\"></i>\n                &nbsp;{this.props.uploadLabel}\n            </Button>\n\n            <input type=\"file\" id=\"file\" style={{display: 'none'}}\n                   accept={this.props.accept}\n                   ref='fileUploader' onChange={this.props.onChangeFile}/>\n        </>)\n    }\n}\n\nexport default ContentFileSelector\n","import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\nimport FileSaver from 'file-saver';\nimport {contentHolderService} from '_services/contentHolder.services';\nimport ContentFileSelector from './ContentFileSelector.js';\nimport Button from 'react-bootstrap/Button'\nimport {toast} from 'react-toastify';\nimport {commons} from \"_helpers/commons\";\n\nconst propTypes = {\n    contentHolderId: PropTypes.string.isRequired,\n    canDelete: PropTypes.bool,\n    canUpdload: PropTypes.bool,\n    canDownload: PropTypes.bool,\n    canView: PropTypes.bool,\n}\n\nconst defaultProps = {\n    canDelete: false,\n    canUpdload: true,\n    canDownload: true,\n    canView: true,\n}\n\n/**\n * Download/Upload, view content action on a content holder\n */\nclass ContentHolderPrimaryAction extends Component {\n\n    constructor(props) {\n        super(props)\n        this.downloadPrimaryContent = this.downloadPrimaryContent.bind(this)\n        this.viewPrimaryContent = this.viewPrimaryContent.bind(this)\n        this.onChangeFile = this.onChangeFile.bind(this)\n        this.deletePrimaryContent = this.deletePrimaryContent.bind(this)\n    }\n\n    onChangeFile(e) {\n        e.preventDefault();\n        let file = e.target.files[0];\n        let formData = new FormData();\n        formData.append('file', file);\n\n        contentHolderService.setPrimaryContentFile(this.props.contentHolderId, formData, this.props.containerId).then(response => {\n            if (commons.isRequestError(response)) {\n                toast(commons.toastError(response));\n            } else {\n                toast(commons.toastSuccess('Le contenu primaire a été téléversé'));\n                if (this.props.onUploadSuccess) {\n                    this.props.onUploadSuccess()\n                }\n            }\n        })\n    }\n\n    async deletePrimaryContent() {\n        contentHolderService.deletePrimaryContent(this.props.contentHolderId, this.props.containerId).then(response => {\n            if (!commons.isRequestError(response)) {\n                toast(commons.toastSuccess(\"Le contenu a été supprimé\"));\n                if (this.props.onUploadSuccess) {\n                    this.props.onUploadSuccess()\n                }\n            } else {\n                toast.error(\"Impossible de supprimer le contenu\");\n            }\n        })\n    }\n\n    async downloadPrimaryContent(e) {\n        e.preventDefault();\n        const downloadedFileName = this.props.downloadedFileName ? this.props.downloadedFileName : 'primary-content.txt';\n        contentHolderService.downloadPrimaryContent(this.props.contentHolderId, this.props.containerId).then(blob => {\n            const blobObject = new Blob([blob], {type: \"text/plain;charset=utf-8\"});\n            FileSaver.saveAs(blobObject, downloadedFileName);\n        })\n    }\n\n    async viewPrimaryContent(e) {\n        e.preventDefault()\n        contentHolderService.downloadPrimaryContent(this.props.contentHolderId, this.props.containerId).then(response => {\n            let blob = new Blob([response], {type: \"plain/text;charset=UTF-8\"});\n            let blobUrl = URL.createObjectURL(blob);\n            window.open(blobUrl)\n        })\n    }\n\n    render() {\n        const canUpload = this.props.canUpload ? this.props.canUpload : false;\n        const hasContent = !this.props.noContent;\n        const canDelete = !this.props.canDelete ? false: true;\n\n        const downloadLabel = this.props.downloadLabel ? this.props.downloadLabel : 'Télécharger';\n        const uploadLabel = this.props.uploadLabel ? this.props.uploadLabel : 'Téléverser contenu';\n\n        if (canUpload) {\n            return <div className={'btn-toolbar btn-toolbar-right'}>\n                {hasContent && <Button onClick={this.downloadPrimaryContent}\n                                       hidden={!this.props.canDownload}>\n                    <i className=\"fa fa-download fa-sm\"></i>&nbsp;{downloadLabel}\n                </Button>\n                }\n\n                <ContentFileSelector hidden={!this.props.canUpdload}\n                                     accept={this.props.accept}\n                                     uploadLabel={uploadLabel}\n                                     onChangeFile={this.onChangeFile}/>\n\n                {hasContent && canDelete &&\n                <Button onClick={this.deletePrimaryContent}>\n                    <i className=\"fa fa-trash fa-md\"></i>\n                </Button>\n                }\n            </div>\n        } else {\n            return <div className={'btn-toolbar btn-toolbar-right'}>\n                <Button onClick={this.downloadPrimaryContent}\n                        hidden={!this.props.canDownload}>\n                    <i className=\"fa fa-download fa-sm\"></i>&nbsp;{downloadLabel}\n                </Button>\n            </div>\n        }\n    }\n}\n\nContentHolderPrimaryAction.propTypes = propTypes;\nContentHolderPrimaryAction.defaultProps = defaultProps;\n\nexport default ContentHolderPrimaryAction;\n","import React, {useEffect, useState} from 'react';\nimport PropTypes from 'prop-types';\nimport {contentHolderService} from '_services/contentHolder.services';\nimport ContentHolderPrimaryAction from '_components/_common/ContentHolder/ContentHolderAction'\n\nconst propTypes = {\n    contentHolderId: PropTypes.string.isRequired\n}\n\nconst defaultProps = {}\n\nfunction ContentHolderPrimaryInfo(props) {\n\n    const [primaryContent, setPrimaryContent] = useState();\n\n    useEffect(() => {\n        let contentHolderId = props.contentHolderId\n        contentHolderService.contentInfos(contentHolderId, 'primary', props.containerId).then(ci => {\n            setPrimaryContent(ci.data)\n        })\n    }, [props.contentHolderId])\n\n    const onUploadSuccess = () => {\n        let contentHolderId = props.contentHolderId\n        contentHolderService.contentInfos(contentHolderId, 'primary', props.containerId).then(ci => {\n            setPrimaryContent(ci.data)\n        })\n    }\n\n    if (primaryContent && primaryContent.length > 0) {\n        let item = primaryContent[0]\n        let displayContentSize = props.displayContentSize ? props.displayContentSize : false\n        let mime = item.attributes.contentFormat ? item.attributes.contentFormat.mimeType : '',\n            fileName = props.contentHolderFileName ? props.contentHolderFileName : 'Contenu primaire'\n\n        return <div className=\"content-holder-primary-info\" style={{display: 'flex', justifyContent: 'space-between'}}>\n            <div>\n                <div>{fileName}</div>\n                <div>{mime}</div>\n                {displayContentSize && <div>{item.attributes.contentSize} octet(s)</div>}\n            </div>\n            <div>\n                <ContentHolderPrimaryAction\n                    onUploadSuccess={onUploadSuccess}\n                    containerId={props.containerId}\n                    contentHolderId={props.contentHolderId}\n                    canUpload={props.canUpload}/>\n            </div>\n        </div>\n    } else {\n        return <div className=\"content-holder-primary-info\" style={{display: 'flex', justifyContent: 'space-between'}}>\n            <p>Pas de contenu primaire</p>\n            <ContentHolderPrimaryAction\n                onUploadSuccess={onUploadSuccess}\n                noContent={true}\n                containerId={props.containerId}\n                contentHolderId={props.contentHolderId}\n                canUpload={props.canUpload}/>\n        </div>\n    }\n}\n\nContentHolderPrimaryInfo.propTypes = propTypes;\nContentHolderPrimaryInfo.defaultProps = defaultProps;\n\nexport default ContentHolderPrimaryInfo;\n","import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\nimport {contentHolderService} from '_services/contentHolder.services';\n\nconst propTypes = {\n    contentHolderId: PropTypes.string.isRequired\n}\n\nconst defaultProps = {}\n\n/**\n * Displays Attachments content infos\n */\nclass ContentHolderAttachmentsInfo extends Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            attachments: [],\n        }\n    }\n\n    componentDidMount() {\n        let contentHolderId = this.props.contentHolderId\n        contentHolderService.contentInfos(contentHolderId, 'attachements', this.props.containerId)\n            .then(ci => {\n            })\n    }\n\n    render() {\n        let header = (\n            <label className=\"katappult-form-title-level-1\">Attachements</label>\n        )\n\n        if (this.state.attachments.length === 0) {\n            return (\n                <React.Fragment>\n                    <div>\n                        {header}\n                        <strong>Pas de contenu</strong>\n                    </div>\n                </React.Fragment>\n            )\n        }\n    }\n}\n\nContentHolderAttachmentsInfo.propTypes = propTypes;\nContentHolderAttachmentsInfo.defaultProps = defaultProps;\n\nexport default ContentHolderAttachmentsInfo;\n","import React, {Component} from 'react';\nimport {Col, Row} from 'reactstrap';\nimport PropTypes from 'prop-types';\nimport ContentHolderPrimaryInfo from './ContentHolderPrimaryInfo.js';\nimport ContentHolderAttachmentsInfo from './ContentHolderAttachmentsInfo.js'\n\nconst propTypes = {\n    contentHolderId: PropTypes.string.isRequired\n}\n\nconst defaultProps = {}\n\n/**\n * Displays primary/attachments content infos\n */\nclass ContentHolderInfo extends Component {\n\n    render() {\n\n        return (\n            <React.Fragment>\n                <div className=\"spacer-20\"></div>\n                <Row>\n                    <Col>\n                        <h3><label className=\"form-title-level-0\">Contenu</label></h3>\n                    </Col>\n                </Row>\n                <table width=\"100%\">\n                    <tr className=\"noBorder\">\n                        <td>\n                            <ContentHolderPrimaryInfo contentHolderId={this.props.contentHolderId}\n                                                      canUpload={this.props.canUpload}/>\n                        </td>\n                    </tr>\n                    <tr className=\"noBorder\">\n                        <td>\n                            <div className=\"spacer-10\">&nbsp;</div>\n                        </td>\n                    </tr>\n                    <tr className=\"noBorder\">\n                        <td>\n                            <ContentHolderAttachmentsInfo contentHolderId={this.props.contentHolderId}\n                                                          canUpload={this.props.canUpload}/>\n                        </td>\n                    </tr>\n                </table>\n                <div className=\"spacer-10\"></div>\n            </React.Fragment>\n        )\n    }\n}\n\nContentHolderInfo.propTypes = propTypes;\nContentHolderInfo.defaultProps = defaultProps;\n\nexport default ContentHolderInfo;\n","import React, { Component } from 'react';\nimport { Form, \n\tFormGroup, Label, \n\tInput, FormText, \n\tCol, Row, \n\tListGroup, ListGroupItem,\n\tCardBody, Button,Card\n} from 'reactstrap';\nimport PropTypes from 'prop-types';\n\nconst propTypes = {\n\titem: PropTypes.any,\n};\n\nconst defaultProps = {\n\titem: {}, \n};\n\nclass ViewDefinition extends Component {\n    render(){\n        return (\n            <React.Fragment>\n                    <Row>\n                        <Col md=\"12\">\n                            <Card>\n                            <CardBody>\n                                <Form action=\"\" method=\"post\">\n                                    <FormGroup row>\n                                        <Col md=\"3\">\n                                            <Label htmlFor=\"email-input\">Identifier</Label>\n                                        </Col>\n                                        <Col xs=\"12\" md=\"12\">\n                                            <Input type=\"text\" id=\"view-id\" name=\"view-id\" placeholder=\"View identifier\"/>\n                                            <FormText className=\"help-block\">The unique identifier of the view. Avoid special characters.</FormText>\n                                            <FormText className=\"help-block\">This identifier is used to query views associated to this type.</FormText>\n                                        </Col>\n                                        <Col xs=\"12\" md=\"12\">\n                                            <Button  color=\"danger\" className=\"float-right\">Update</Button>\n                                        </Col>\n                                    </FormGroup>\n                                </Form>\n                            </CardBody>\n                            </Card>\n                        </Col>\n                    </Row>\n                    <Row>\n                        <Col md=\"12\">\n                            <ListGroup>\n                                <ListGroupItem className=\"justify-content-between\">UI Schema definition<Button  color=\"danger\" className=\"float-right\">View</Button></ListGroupItem>\n                                <ListGroupItem className=\"justify-content-between\">Web UI<Button  color=\"primary\" className=\"float-right\">View</Button></ListGroupItem>\n                                <ListGroupItem className=\"justify-content-between\">Mobile UI<Button  color=\"primary\" className=\"float-right\">View</Button></ListGroupItem>\n                                <ListGroupItem className=\"justify-content-between\">Desktop UI<Button  color=\"primary\" className=\"float-right\">View</Button></ListGroupItem>\n                            </ListGroup>\n                        </Col>\n                </Row>\n            \n        </React.Fragment>\n        )\n    }    \n}\n\nViewDefinition.propTypes = propTypes;\nViewDefinition.defaultProps = defaultProps;\n\nexport default ViewDefinition;\n\n\n","import { _doGet, buildURLQuery, _doPut, API_ROOT } from './utils/services.config';\n/**\n * Default Export\n */\nexport const contactableService = {\n\tgetWebContacts,\n\tgetTelecomContacts,\n\tgetPostalContacts,\n\tupdateWebContacts,\n\tupdateTelecomContacts,\n\tupdatePostalContacts,\n\tgetAllContacts,\n\tgetContactableContactMechanismByRole\n};\n\nasync function getContactableContactMechanismByRole(contactableId, role, containerId){\n\tconst uri = '/api/secured/v1/katappult/contactable/contacts/byRole?role=' + role + '&containerId=' + containerId + '&contactableId=' + contactableId;\n\tconst url = `${API_ROOT}` + uri;\n    return _doGet(url);\n}\n\n/**\n */\nasync function getAllContacts(contactableId, containerId){\n\tconst uri = '/api/secured/v1/katappult/contactable/contacts?containerId=' + containerId + '&contactableId=' + contactableId;\n\tconst url = `${API_ROOT}` + uri;\n    return _doGet(url);\n}\n/**\n */\nasync function updatePostalContacts(contactableId, contactMecId, payload, containerId){\n\tconst uri = '/api/secured/v1/katappult/contactable/contacts/postal?containerId=' + containerId + '&contactableId=' + contactableId + '&contactMechanismId=' + contactMecId;\n\tconst url = `${API_ROOT}` + uri;\n    return _doPut(url, payload);\n}\n/**\n */\nasync function updateTelecomContacts(contactableId, contactMecId, payload, containerId){\n\tconst uri = '/api/secured/v1/katappult/contactable/contacts/telecom?containerId=' + containerId + '&contactableId=' + contactableId + '&contactMechanismId=' + contactMecId;\n\tconst url = `${API_ROOT}` + uri;\n    return _doPut(url, payload);\n}\n/**\n */\nasync function updateWebContacts(contactableId, contactMecId, payload, containerId){\n\tconst uri = '/api/secured/v1/katappult/contactable/contacts/web?add=false&containerId=' + containerId + '&contactableId=' + contactableId + '&contactMechanismId=' + contactMecId;\n\tconst url = `${API_ROOT}` + uri;\n    return _doPut(url, payload);\n}\n/**\n */\nasync function getPostalContacts(contactableId, contactMecId, containerId){\n\tconst uri = '/api/secured/v1/katappult/contactable/contacts/?containerId=' + containerId + '&contactableId=' + contactableId + '&contactMechanismId=' + contactMecId;\n\tconst url = `${API_ROOT}` + uri;\n    return _doGet(url);\n}\n/**\n */\nasync function getTelecomContacts(contactableId, contactMecId, containerId){\n\tconst uri = '/api/secured/v1/katappult/contactable/contacts?containerId=' + containerId + '&contactableId=' + contactableId + '&contactMechanismId=' + contactMecId;\n\tconst url = `${API_ROOT}` + uri;\n    return _doGet(url);\n}\n/**\n */\nasync function getWebContacts(contactableId, contactMecId, containerId){\n\tconst uri = '/api/secured/v1/katappult/contactable/contacts?containerId=' + containerId + '&contactableId=' + contactableId + '&contactMechanismId=' + contactMecId;\n\tconst url = `${API_ROOT}` + uri;\n    return _doGet(url);\n}\n","import React, {Component} from 'react';\nimport {AttributeListGroup,} from '_components/_common';\nimport {Button, ButtonToolbar} from 'reactstrap';\nimport PropTypes from 'prop-types';\nimport {commons} from '_helpers/commons.js';\nimport {contactableService} from '_services/contactable.services';\nimport {toast} from 'react-toastify';\nimport Badge from 'react-bootstrap/Badge'\nimport moment from 'moment';\n\nconst propTypes = {\n    businessId: PropTypes.string.isRequired,\n};\nconst defaultProps = {\n    businessId: ''\n};\n\n/**\n * Contactable component\n */\nclass Contactable extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            contacts: {},\n            contactMecId: '',\n            allContacts: []\n        }\n\n        this.updateWebContactsSuccess = this.updateWebContactsSuccess.bind(this)\n        this.reloadContacts = this.reloadContacts.bind(this)\n    }\n\n    /**\n     * Update the web contacts array\n     */\n    updateWebContacts(formData) {\n        let form = \"{\\\"webAddresses\\\":\".concat(JSON.stringify(formData)).concat('}')\n        contactableService\n            .updateWebContacts(this.props.businessId,\n                this.state.contactMecId,\n                JSON.parse(form), this.props.containerId)\n            .then(response => {\n                this.updateWebContactsSuccess()\n            })\n            .catch(error => {\n                toast.error('Error occurs updating web contacts')\n                console.error(error)\n            });\n    }\n\n    updateWebContactsSuccess() {\n    }\n\n    /**\n     * Update telecom contacts array\n     */\n    updateTelecomContacts(formData) {\n        let form = \"{\\\"telecomAddresses\\\":\".concat(JSON.stringify(formData)).concat('}')\n        contactableService\n            .updateTelecomContacts(this.props.businessId,\n                this.state.contactMecId,\n                JSON.parse(form), this.props.containerId)\n            .then(response => {\n                this.updateTelecomContactsSuccess()\n            })\n            .catch(error => {\n                toast.error('Error occurs updating web contacts')\n                console.error(error)\n            });\n    }\n\n    updateTelecomContactsSuccess() {\n    }\n\n    /**\n     * Update of postal address\n     */\n    updatePostalContact(formData) {\n        return contactableService.updatePostalContacts(this.props.businessId, this.state.contactMecId, formData, this.props.containerId).then(response => {\n                this.updatePostalContactSuccess()\n                return true;\n            }).catch(error => {\n                toast.error('Error occurs updating web contacts')\n                console.error(error)\n                return false;\n            });\n    }\n\n    updatePostalContactSuccess() {\n        this.reloadContacts()\n    }\n\n    /**\n     * Title of postal address section\n     */\n    postalAddressTitle = (data, config) => {\n        let value = commons.getPropByString(data, 'label');\n        return value;\n    }\n\n    async componentDidMount() {\n        this.reloadContacts()\n    }\n\n    async reloadContacts() {\n        contactableService.getAllContacts(this.props.businessId, this.props.containerId).then(response => {\n            if (commons.isRequestSuccess(response) && response.data.length > 0) {\n                const firstItem = response.data[0].attributes.lastModifiedDate;\n                const secondItem = response.data.length > 1 ? response.data[1].attributes.lastModifiedDate : null;\n                let finalItem =  response.data[0];\n\n                if(secondItem) {\n                    let firstItemLastModification = moment(firstItem, \"YYYY-MM-DDD hh:mm:ss\").toDate();\n                    let secondItemLastModification = moment(secondItem, \"YYYY-MM-DDD hh:mm:ss\").toDate();\n                    if(secondItemLastModification >= firstItemLastModification){\n                        finalItem =  response.data[1];\n                    }\n                }\n\n                this.setState({\n                    metaData: response.metaData,\n                    contactMecIndex: 0,\n                    contacts: finalItem,\n                    contactMecId: finalItem.attributes.id,\n                    allContacts: response.data\n                })\n            } else {\n                this.setState({\n                    metaData: undefined,\n                    contacts: undefined,\n                    contactMecId: undefined\n                })\n            }\n        })\n    }\n\n    fullContactView() {\n        /**\n         * Attributes list configuration\n         * objectarray\n         * stringarray\n         */\n        const webAttributesList = {\n            formId: 'webAttributesList_form',\n            onSubmit: (formData) => this.updateWebContacts(formData),\n            borderLess: true,\n            attributes: [\n                {\n                    title: 'Email et réseaux sociaux',\n                    type: 'editableLabelObjectarray',\n                    dataField: 'webAddress',\n                    items: {\n                        attributes: [\n                            {name: 'Titre', dataField: 'title', type: 'text'},\n                            {name: 'Valeur', dataField: 'webAddress', type: 'text'},\n                        ]\n                    },\n                },\n            ],\n        };\n\n        /**\n         * Attributes list configuration\n         * objectarray\n         * stringarray\n         */\n        const phonesAttributesList = {\n            formId: 'phonesAttributesList_form',\n            onSubmit: (formData) => this.updateTelecomContacts(formData),\n            borderLess: true,\n            attributes: [\n                {\n                    title: 'Coordonnées Téléphoniques',\n                    type: 'editableLabelObjectarray',\n                    dataField: 'telecomAddress',\n                    items: {\n                        attributes: [\n                            {name: \"Titre\", type: 'text', dataField: 'title'},\n                            {name: \"Code pays\", type: 'text', dataField: 'countryCode'},\n                            {name: \"Numéro\", type: 'tel', dataField: 'telecomNumber'},\n                        ],\n                    },\n                },\n            ],\n        };\n\n        const postalAddressAttributesList = {\n            arrayTitleProvider: (data) => this.postalAddressTitle(data, this),\n            onSubmit: (formData) => this.updatePostalContact(formData),\n            attributes: [\n                {name: 'Rue', dataField: 'address1', type: 'text'},\n                {name: '(Rue 1)', dataField: 'address2', type: 'text'},\n                {name: '(Rue 2)', dataField: 'address3', type: 'text'},\n                {name: 'Code postale', dataField: 'postalCode', type: 'text'},\n                {name: 'Ville', dataField: 'city', type: 'text'},\n                {name: 'Pays', dataField: 'country', type: 'text'},\n            ],\n        }\n\n        if (this.state.contacts && this.state.contacts.attributes) {\n\n            let additionalAttributesDisplay\n            if (this.props.additionalAttributesDisplay) {\n                additionalAttributesDisplay = this.props.additionalAttributesDisplay(this.state.contacts.links, this.state.contacts.attributes.id)\n            }\n\n            const postalAddress = {attributes: this.state.contacts.attributes.postalAddress}\n            return (\n                <React.Fragment>\n                    <div>\n                        {additionalAttributesDisplay}\n                        <AttributeListGroup {...this.props}\n                                            attributesListConfig={postalAddressAttributesList}\n                                            data={postalAddress}\n                                            displayHeader='true'\n                                            canEdit={this.props.canEdit}\n                                            standardFooterActions=\"true\"\n                                            newObjectFormData={newPostalAddressFormData}/>\n\n                        {this.props.hideMobileContacts !== true && <AttributeListGroup {...this.props}\n                                                                                       attributesListConfig={webAttributesList}\n                                                                                       data={this.state.contacts.attributes}\n                                                                                       canEdit={this.props.canEdit}\n                                                                                       firstRowLabel='false'\n                                                                                       newObjectFormData={newWebFormData}/>\n                        }\n\n                        {this.props.hideMobileContacts !== true && <AttributeListGroup {...this.props}\n                                                                                       attributesListConfig={phonesAttributesList}\n                                                                                       data={this.state.contacts.attributes}\n                                                                                       firstRowLabel='true'\n                                                                                       canEdit={this.props.canEdit}\n                                                                                       newObjectFormData={newPhoneFormData}/>\n                        }\n                    </div>\n                </React.Fragment>\n            )\n        }\n        if (this.props.emptyContacts) {\n            return <div>\n                {this.props.emptyContacts()}\n            </div>\n        }\n        return <></>\n    }\n\n    summaryContactView() {\n        if (this.state.contacts && this.state.contacts.attributes) {\n            let postal = this.state.contacts.attributes.postalAddress;\n\n            let additionalAttributesDisplay\n            if (this.props.additionalAttributesDisplay) {\n                additionalAttributesDisplay = this.props.additionalAttributesDisplay(this.state.contacts.links, this.state.contacts.attributes.id)\n            }\n\n            return <div>\n                {additionalAttributesDisplay}\n                <p><span>{postal.address1} </span> <span>{postal.address2} </span></p>\n                <p><span>{postal.postalCode}, </span> <span>{postal.city}. </span></p>\n                <p><span>{postal.country}</span></p>\n            </div>\n        }\n        if (this.props.emptyContacts) {\n            return <div>\n                {this.props.emptyContacts()}\n            </div>\n        }\n\n        return <></>\n    }\n\n    async selectNextContactMecView(e) {\n        if (e) e.preventDefault();\n        let index = this.state.contactMecIndex + 1;\n        if (index >= this.state.allContacts.length) {\n            index = 0;\n        }\n\n        let contact = this.state.allContacts[index];\n        this.setState({\n            contactMecIndex: index,\n            contacts: contact,\n            contactMecId: contact.attributes.id,\n        })\n    }\n\n    render() {\n        if (this.props.viewMode === 'summary') {\n            return this.summaryContactView()\n        } else {\n\n            let badge = <>&nbsp;&nbsp;&nbsp;</>;\n            if (this.state.allContacts.length > 0) {\n                badge = <Badge pill variant=\"warning\">{this.state.allContacts.length}</Badge>\n            }\n\n            return <>\n                <div>\n                    {this.state.allContacts.length > 1 && this.props.canSwitch &&\n                    <ButtonToolbar className=\"justify-content-start mb-4\">\n                        <Button onClick={e => this.selectNextContactMecView(e)}>\n                            {badge}&nbsp;SUIVANT &nbsp;\n                            <i className=\"fa fa-angle-right fa-lg\"></i>\n                        </Button>\n                    </ButtonToolbar>\n                    }\n                </div>\n                <div>\n                    {this.fullContactView()}\n                </div>\n            </>\n        }\n    }\n}\n\n\nconst newWebFormData = {\n    'label': '', 'value': ''\n}\nconst newPhoneFormData = {\n    'label': '', 'number': '', 'country': ''\n}\nconst newPostalAddressFormData = {\n    'id': '', 'label': 'New postal address', 'street': '', 'code': '', 'county': ''\n}\n\nconst postalAddressUIConfig = {\n    'role': {\n        'enumKey': 'contactMechanismRole',\n        'ui:widget': 'select'\n    },\n    'country': {\n        'enumLoader': 'loadCountries()',\n        'ui:widget': 'select'\n    }\n}\n\n\nContactable.propTypes = propTypes;\nContactable.defaultProps = defaultProps;\n\n\nexport default Contactable;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { accountService } from '_services/account.services';\nimport { toast } from 'react-toastify';\nimport { WizardConfirm, ProcessingModal } from '_components/_common';\nimport Form from 'react-bootstrap/Form'\n\nconst propTypes = {\n\taccountId: PropTypes.string.isRequired,\n}\n\nconst defaultProps = {\n}\n\n/**\n * Reset password modal\n */\nclass ResetPassword extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n\t  modal: false,\n\t  accountId: props.accountId,\n\t  form:{\n\t  \tnotify: true,\n\t  \tpassword:''\n\t  }\n    };\n\n\tthis.toggle = this.toggle.bind(this);\n\tthis.doResetPassword = this.doResetPassword.bind(this);\n\tthis.dialogContent = this.dialogContent.bind(this);\n\tthis.handleChange = this.handleChange.bind(this);\n  }\n  /**\n   * Toogle the modal\n   */\n  toggle() {\n    this.setState(prevState => ({\n      modal: !prevState.modal\n    }));\n  }\n  /**\n   * Do reset password\n   */\n  doResetPassword(){\n  \tthis.toggle();\n\n\taccountService\n\t.resetPassword(this.state.accountId, this.props.containerId)\n\t.then(response => {\n\t\tthis.resetSuccess()\n\t})\n\t.catch(error => {\n\t\tthis.toggle();\n\t\ttoast.error('Error when reseting user password!')\n\t\tconsole.error(error)\n\t});\n  }\n\n  handleChange(e){\n  \tlet form = {...this.state.form}\n  \tif(e.target.name === 'password'){\n  \t\tform.password = e.target.value\n  \t}\n\n  \tif(e.target.name === 'notify'){\n  \t\tform.notify = e.target.checked\n  \t}\n\n  \tthis.setState({form: form})\n  }\n\n  dialogContent(){\n  \treturn <>\n  \t</>\n  }\n\n  dialogContent2(){\n  \treturn <>\n\t\t<Form>\n\t\t  <Form.Group controlId=\"formBasicEmail\">\n\t\t    <Form.Control\n\t\t    \tname=\"password\"\n\t\t    \ttype=\"text\"\n\t\t    \tvalue={this.state.password}\n\t\t    \tonChange={this.handleChange}\n\t\t    \tplaceholder=\"Nouveau mot de passe\" />\n\t\t  </Form.Group>\n\n\t\t  <Form.Group controlId=\"formBasicCheckbox\">\n\t\t    <Form.Check\n\t\t    \tname=\"notify\"\n\t\t    \ttype=\"checkbox\"\n\t\t    \tchecked=\"true\"\n\t\t    \tvalue={this.state.notify}\n\t\t    \tonChange={this.handleChange}\n\t\t    \tlabel=\"Notifier utilisateur\" />\n\t\t  </Form.Group>\n\t\t</Form>\n  \t</>\n  }\n\n  resetSuccess(){\n\t  try {\n\t\t  this.toggle();\n\t\t  toast.success('Password reset success');\n\n\t\t  if(this.props.afterUpdate){\n\t\t  \tthis.props.afterUpdate(true);\n\t\t  }\n\t  }\n\t  catch(error) {\n\t\t  console.error(error);\n\t  }\n  }\n  /**\n   * React render\n   */\n  render() {\n    return (<>\n    \t<ProcessingModal show={this.state.modal}/>\n    \t<WizardConfirm\n    \t\tbuttonTitle={\"Réinitialiser mot de passe\".toUpperCase()}\n\t\t\tonConfirm={() => this.doResetPassword()}\n\t\t\tdialogContent={() => this.dialogContent()}\n\t\t\tdialogMessage=\"Réinitialiser mot de passe?\"\n\t\t\tdialogTitle={\"Réinitialiser mot de passe\".toUpperCase()}/>\n\t\t<div className=\"mr-3\"></div>\n    </>);\n  }\n}\n\nResetPassword.propTypes = propTypes;\nResetPassword.defaultProps = defaultProps;\n\nexport default ResetPassword;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { accountService } from '_services/account.services';\nimport { toast } from 'react-toastify';\nimport * as actions from '_actions/actions';\nimport { WizardConfirm } from '_components/_common';\n\nconst propTypes = {\n\taccountId: PropTypes.string.isRequired,\n}\n\nconst defaultProps = {\n}\n\nconst mapStateToProps = store => ({\n})\n\nconst mapDispatchToProps = (disptach) => ({\n\tonAccountLocked: (payload) => disptach(actions.userAccountLocked(payload)),\n});\n\n/**\n * Lock user component\n */\nclass LockUser extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n\t  modal: false,\n\t  accountId: props.accountId\n    };\n\n\tthis.toggle = this.toggle.bind(this)\n\tthis.doLockUser = this.doLockUser.bind(this)\n\tthis.lockSuccess = this.lockSuccess.bind(this)\n  }\n  /**\n   * Toogle the modal\n   */\n  toggle() {\n    \tthis.setState(prevState => ({\n      \t\tmodal: !prevState.modal\n\t\t})\n\t)\n  }\n  /**\n   * Lock the user\n   */\n  doLockUser(){\n\taccountService\n\t.lock(this.state.accountId, this.props.containerId)\n\t.then(response => {\n\t\tthis.lockSuccess()\n\t})\n\t.catch(error => {\n\t\tthis.toggle();\n\t\ttoast.error('Error occurs when locking user!')\n\t\tconsole.error(error)\n\t});\n  }\n\n  lockSuccess(){\n\t  try {\n\t\t  this.toggle()\n\t\t  toast.success('Lock success')\n\t\t  const payload = {'locked': true}\n\n\t\t  this.props.onAccountLocked(payload);\n\t\t  if(this.props.afterUpdate){\n\t\t  \tthis.props.afterUpdate(true);\n\t\t  }\n\t  }\n\t  catch(error) {console.error(error);}\n  }\n\n  render() {\n    return (\n    \t<WizardConfirm\n    \t\tbuttonColor='secondary'\n    \t\tbuttonTitle={\"Bloquer utilisateur\".toUpperCase()}\n\t\t\tonConfirm={() => this.doLockUser()}\n\t\t\tdialogMessage=\"Les utilisateurs blockés ne peuvent pas se connecter au système.\"\n\t\t\tdialogTitle={\"Bloquer utilisateur\".toUpperCase()}/>\n    );\n  }\n}\n\nLockUser.propTypes = propTypes;\nLockUser.defaultProps = defaultProps;\n\nexport default connect(mapStateToProps, mapDispatchToProps) (LockUser);\n","/* eslint react/no-multi-comp: 0, react/prop-types: 0 */\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { accountService } from '_services/account.services';\nimport { toast } from 'react-toastify';\nimport * as actions from '_actions/actions';\nimport { WizardConfirm } from '_components/_common';\n\nconst propTypes = {\n\taccountId: PropTypes.string.isRequired,\n};\n\nconst defaultProps = {\n};\nconst mapStateToProps = store => ({\n})\nconst mapDispatchToProps = (disptach) => ({\n\tonAccountUnLocked: (payload) => disptach(actions.userAccountUnLocked(payload)),\n});\n\n/**\n * Unlock user\n */\nclass UnLockUser extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n\t  modal: false,\n\t  accountId: props.accountId\n    };\n\n\tthis.toggle = this.toggle.bind(this);\n\tthis.doUnlockUser = this.doUnlockUser.bind(this);\n\tthis.unlockSuccess = this.unlockSuccess.bind(this)\n  }\n  /**\n   * Toggle the modal\n   */\n  toggle() {\n    this.setState(prevState => ({\n      modal: !prevState.modal\n    }));\n  }\n  /**\n   * Unlock user\n   */\n  doUnlockUser(){\n\taccountService\n\t.unlock(this.state.accountId, '', this.props.containerId)\n\t.then(response => {\n\t\tthis.unlockSuccess()\n\t})\n\t.catch(error => {\n\t\tthis.toggle();\n\t\ttoast.error('Error occurs when locking user!')\n\t\tconsole.error(error)\n\t});\n  }\n  /**\n   *\n   */\n  unlockSuccess(){\n\t  try {\n\t\t  this.toggle()\n\t\t  toast.success('Unlock success')\n\n\t\t  const payload = {'locked': false}\n\t\t  this.props.onAccountUnLocked(payload);\n\n\t\t  if(this.props.afterUpdate){\n\t\t  \tthis.props.afterUpdate(true);\n\t\t  }\n\t  }\n\t  catch(error) {\n\t\t  console.error(error);\n\t  }\n  }\n  /**\n   * Render\n   */\n  render() {\n    return (<div>\n    \t<WizardConfirm\n    \t\tbuttonSize=\"sm\"\n    \t\tbuttonColor='secondary'\n    \t\tbuttonTitle={\"Débloquer utilisateur\".toUpperCase()}\n\t\t\tonConfirm={() => this.doUnlockUser()}\n\t\t\tdialogMessage=\"Débloquer utilisateur?\"\n\t\t\tdialogTitle={\"Débloquer utilisateur\".toUpperCase()}/>\n      </div>\n    );\n  }\n}\n\nUnLockUser.propTypes = propTypes;\nUnLockUser.defaultProps = defaultProps;\n\nexport default connect(mapStateToProps, mapDispatchToProps) (UnLockUser);\n","/* eslint react/no-multi-comp: 0, react/prop-types: 0 */\nimport React from 'react';\nimport {\n    Col,\n    Form,\n    Input,\n    InputGroup,\n    InputGroupAddon,\n    InputGroupText,\n    Label,\n    Modal,\n    ModalBody,\n    ModalFooter,\n    ModalHeader,\n    Row\n} from 'reactstrap';\nimport PropTypes from 'prop-types';\nimport {connect} from 'react-redux';\nimport {accountService} from '_services/account.services';\nimport * as actions from '_actions/actions';\nimport {toast} from 'react-toastify';\nimport {loginService} from '_services/login.services';\nimport {commons} from '_helpers/commons';\nimport Spinner from 'react-bootstrap/Spinner'\nimport {coreUri} from \"_helpers/CoreUri\";\n\nconst propTypes = {\n    accountId: PropTypes.string.isRequired,\n};\n\nconst defaultProps = {};\n\nconst mapStateToProps = store => ({})\n\nconst mapDispatchToProps = (disptach) => ({\n    onUserAccountUpdatePass: (payload) => disptach(actions.userAccountUpdatePass(payload)),\n});\n\nclass UpdatePassword extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n\n            modal: false,\n            accountId: props.accountId,\n            formData: {\n                oldPassword: '',\n                newPassword: '',\n                newPasswordValidation: '',\n            },\n\n            processing: false,\n            formError: '',\n            canUpdate: false\n        };\n\n        this.toggle = this.toggle.bind(this);\n        this.doUpdatePassword = this.doUpdatePassword.bind(this);\n        this.handleFormChange = this.handleFormChange.bind(this)\n        this.updateSuccess = this.updateSuccess.bind(this)\n        this.backHome = this.backHome.bind(this)\n        this.userPostLogin = this.userPostLogin.bind(this)\n    }\n\n    backHome() {\n        window.location.href = coreUri.clientSideRenderedURL('/');\n    }\n\n    handleFormChange(event) {\n        let formadata = JSON.parse(JSON.stringify(this.state.formData))\n        formadata[event.target.name] = event.target.value;\n\n        let emptypass = formadata.newPassword === ''\n            || formadata.newPasswordValidation === ''\n            || formadata.newPassword === '';\n\n        let samePass = JSON.stringify(formadata.newPasswordValidation) === JSON.stringify(formadata.newPassword)\n        let canUpdate, formError = '';\n        if (emptypass) {\n            formError = 'Passwords can not be empty!';\n            canUpdate = false;\n        } else if (!samePass) {\n            formError = 'Passwords are not same!';\n            canUpdate = false;\n        } else if (formadata.newPasswordValidation.length < 6) {\n            formError = 'Too short';\n            canUpdate = false;\n        } else {\n            formError = '';\n            canUpdate = true;\n        }\n\n        this.setState({\n            formData: formadata,\n            formError: formError,\n            canUpdate: canUpdate\n        })\n    }\n\n    toggle() {\n        this.setState(prevState => ({\n            modal: !prevState.modal\n        }));\n    }\n\n    doResetPassword(e) {\n        let token = this.props.match.params.lockToken;\n        if (token) {\n\n            this.setState({processing: true})\n            accountService\n                .updateLostPasswordByUser(token, this.state.formData, this.props.containerId)\n                .then(response => {\n                    if (response && response.status === 200) {\n                        let json = response.json();\n                        return json;\n                    }\n                    return null;\n                })\n                .then(response => {\n                    if (response && response.data) {\n                        if (response.data.attributes.updated === 'ok') {\n                            let userEmail = response.data.attributes.userEmail;\n                            this.updateSuccess2(userEmail);\n                        } else {\n                            this.updateError();\n                        }\n                    } else {\n                        this.updateError();\n                    }\n                })\n                .catch(error => {\n                    toast.error('Error when updating password!')\n                    console.error(error)\n                });\n        }\n    }\n\n    async updateSuccess2(userEmail) {\n        if (!userEmail) {\n            return\n        }\n\n        try {\n            let formData = {};\n            formData.login = userEmail;\n            formData.password = this.state.formData.newPassword;\n\n            let response = await loginService\n                .login(formData)\n                .then(response => {\n                    return response;\n                })\n\n            if (!response) {\n                this.updateError();\n                return;\n            }\n\n            let authorization = await response.text();\n            if (!authorization) {\n                this.updateError();\n            } else {\n                commons.setSessionId(authorization);\n                this.userPostLogin(authorization);\n            }\n        } catch (error) {\n            alert(error);\n        }\n    }\n\n    userPostLogin(authorization) {\n        if (authorization) {\n            loginService.postLogin(authorization)\n                .then(json => {\n                    return json;\n                })\n                .then(json => {\n                    commons.katappult_core_loginSuccess(json);\n\n                    let account = JSON.parse(json.data.links.account)\n                    let active = account.active;\n                    if (active) {\n                        this.props.history.push('/home')\n                    } else {\n                        let login = account.nickName;\n                        window.location.href = coreUri.clientSideRenderedURL('/activateAccount');\n                    }\n                });\n        }\n    }\n\n    doUpdatePassword(e) {\n        accountService\n            .updatePassword(this.state.accountId, this.state.formData, this.props.containerId)\n            .then(response => {\n                if (response.status === 200) {\n                    this.updateSuccess();\n                } else {\n                    this.updateError();\n                }\n            })\n            .catch(error => {\n                this.toggle();\n                toast.error('Error when updating password!')\n                console.error(error)\n            });\n    }\n\n    updateSuccess() {\n        try {\n            this.toggle()\n            toast.success('Password update success.')\n        } catch (error) {\n            console.error(error);\n        }\n    }\n\n    updateError() {\n        this.setState({\n            formError: 'Incorrect or invalid passwords',\n            processing: false\n        })\n    }\n\n    reinitLostPass() {\n        return <Form>\n            <Row>\n                <Col md=\"12\" lg=\"12\" xl=\"12\">\n                    <Label className=\"form-error\">{this.state.formError}</Label>\n                </Col>\n            </Row>\n            <InputGroup className=\"mb-3\">\n                <InputGroupAddon addonType=\"prepend\">\n                </InputGroupAddon>\n                <Input type=\"password\" name=\"newPassword\" placeholder=\"New password\" autoComplete=\"new-password\"\n                       onChange={(e) => this.handleFormChange(e)}/>\n            </InputGroup>\n            <InputGroup className=\"mb-4\">\n                <InputGroupAddon addonType=\"prepend\">\n                </InputGroupAddon>\n                <Input type=\"password\" name=\"newPasswordValidation\" placeholder=\"Repeat password\"\n                       autoComplete=\"new-password\" onChange={(e) => this.handleFormChange(e)}/>\n            </InputGroup>\n            <div className={'btn-toolbar'}>\n                {!this.state.processing && <button disabled={!this.state.canUpdate} block\n                                                   color=\"secondary\"\n                                                   onClick={(e) => this.doResetPassword(e)}>\n                    Changer mot de passe\n                </button>\n                }\n\n                {this.state.processing &&\n                <Spinner animation=\"border\" variant=\"primary\"/>\n                }\n\n            </div>\n        </Form>\n    }\n\n    formContent() {\n        return <Form>\n            <InputGroup className=\"mb-3\">\n                <InputGroupAddon addonType=\"prepend\">\n                    <InputGroupText>\n                        <i className=\"icon-lock\"></i>\n                    </InputGroupText>\n                </InputGroupAddon>\n                <Input type=\"password\" name=\"oldPassword\" placeholder=\"Old password\" autoComplete=\"new-password\"\n                       onChange={(e) => this.handleFormChange(e)}/>\n            </InputGroup>\n            <InputGroup className=\"mb-3\">\n                <InputGroupAddon addonType=\"prepend\">\n                    <InputGroupText>\n                        <i className=\"icon-lock\"></i>\n                    </InputGroupText>\n                </InputGroupAddon>\n                <Input type=\"password\" name=\"newPassword\" placeholder=\"New password\" autoComplete=\"new-password\"\n                       onChange={(e) => this.handleFormChange(e)}/>\n            </InputGroup>\n            <InputGroup className=\"mb-4\">\n                <InputGroupAddon addonType=\"prepend\">\n                    <InputGroupText>\n                        <i className=\"icon-lock\"></i>\n                    </InputGroupText>\n                </InputGroupAddon>\n                <Input type=\"password\" name=\"newPasswordValidation\" placeholder=\"Repeat password\"\n                       autoComplete=\"new-password\" onChange={(e) => this.handleFormChange(e)}/>\n            </InputGroup>\n        </Form>\n    }\n\n    modalUpdatePassWord() {\n\n        return <div>\n            <button className=\"ml-1 mr-1\" onClick={this.toggle} size=\"sm\">CHANGER MOT DE PASSE</button>\n            <Modal isOpen={this.state.modal} toggle={this.toggle} centered>\n                <ModalHeader toggle={this.toggle}>Changer mot de passe</ModalHeader>\n                <div className=\"border-bottom\"/>\n\n                <ModalBody>\n                    <Label className=\"form-error\">{this.state.formError}</Label>\n                    <div className=\"\">\n                        {this.formContent()}\n                    </div>\n                </ModalBody>\n\n                <ModalFooter>\n                    <button color=\"primary\" onClick={(e) => this.doUpdatePassword(e)}>Mettre à jour</button>{' '}\n                    <button color=\"secondary\" onClick={this.toggle}>Annuler</button>\n                </ModalFooter>\n            </Modal>\n        </div>\n    }\n\n    render() {\n        if (this.props.reinitLostPass === true) {\n            return <div className={'reinit-password-page'}>\n                {this.reinitLostPass()}\n            </div>\n        }\n\n        return this.modalUpdatePassWord();\n    }\n}\n\nUpdatePassword.propTypes = propTypes;\nUpdatePassword.defaultProps = defaultProps;\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UpdatePassword);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {Label} from 'reactstrap';\n\nconst propTypes = {\n\tvalue: PropTypes.number,\n}\n\nconst defaultProps = {\n\tvalue: 0\n}\n/**\n * \n */\nclass GenderViewer extends React.Component {\n\n\trender() {\n\t\tif(0 === this.props.value){\n\t\t\treturn (\n\t\t\t\t<React.Fragment>\n\t\t\t\t\t<Label>M</Label>\n\t\t\t\t</React.Fragment>\t\n\t\t\t)\n\t\t}\n\t\telse {\n\t\t\treturn (\n\t\t\t\t<React.Fragment>\n\t\t\t\t\t<Label>F</Label>\n\t\t\t\t</React.Fragment>\t\n\t\t\t)\n\t\t}\n\t}\n}\n\nGenderViewer.propTypes = propTypes;\nGenderViewer.defaultProps = defaultProps;\n\nexport default GenderViewer;\n","/* eslint react/no-multi-comp: 0, react/prop-types: 0 */\nimport React from 'react';\nimport { Button,\n\tModal,\n\tModalHeader,\n\tModalBody,\n\tModalFooter ,\n\tLabel,\n\tForm, Input,\n\tInputGroup, InputGroupAddon,\n\tInputGroupText\n}\nfrom 'reactstrap';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { accountService } from '_services/account.services';\nimport { toast } from 'react-toastify';\n\nconst propTypes = {\n\taccountId: PropTypes.string.isRequired,\n};\n\nconst defaultProps = {\n};\n\nconst mapStateToProps = store => ({\n})\n\nconst mapDispatchToProps = (disptach) => ({\n\n});\n/**\n *\n */\nclass ActivatePassword extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n\t  modal: false,\n\t  accountId: props.accountId,\n\t  formData: {\n\t\t  newPassword: '',\n\t\t  newPasswordValidation: '',\n\t  },\n\t  formError: ''\n    };\n\n\tthis.doActivateAccount = this.doActivateAccount.bind(this);\n\tthis.handleFormChange = this.handleFormChange.bind(this)\n\tthis.updateSuccess = this.updateSuccess.bind(this)\n  }\n\n  handleFormChange(event) {\n\tlet formadata = JSON.parse(JSON.stringify(this.state.formData))\n\tformadata[event.target.name] = event.target.value\n\tlet emptypass = this.state.formData.newPassword === ''\n\t\t|| this.state.formData.newPasswordValidation === ''\n\n\tlet samePass = this.state.formData.newPasswordValidation === this.state.formData.newPassword\n\tlet formError = ''\n\tif(emptypass) {\n\t\tformError = 'Le mot de passe est obligatoire!'\n\t}\n\telse if(!samePass) {\n\t\tformError = 'Les mots de passe ne sont pas identiques!'\n\t}\n\telse {\n\t\tformError = '--'\n\t}\n\n\tthis.setState({\n\t\tformData: formadata,\n\t\tformError: formError\n\t})\n  }\n\n  doActivatePassword(e) {\n\te.preventDefault()\n\taccountService\n\t.activatePassword(this.state.accountId, this.state.formData, this.props.containerId)\n\t.then(response => {\n\t\tthis.updateSuccess()\n\t})\n\t.catch(error => {\n\t\tthis.toggle();\n\t\tconsole.error(error)\n\t});\n  }\n\n  updateSuccess(){\n\t  try {\n\t\t  this.toggle()\n\t\t  toast.info('Le mot de passe a été mis à jour.')\n\t  }\n\t  catch(error) {\n\t\t  console.error(error);\n\t  }\n  }\n\n  render() {\n    return (\n      <div>\n        <Button className=\"activate-pass-modal\" onClick={this.toggle}>Modifier mot de passe</Button>\n        <Modal isOpen={this.state.modal} toggle={this.toggle}>\n\t\t\t<ModalHeader toggle={this.toggle}>Modifier mot de passe</ModalHeader>\n          \t<ModalBody>\n\n\t\t\t\t<Label className=\"form-error\">{this.state.formError}</Label>\n\n\t\t\t\t<Form>\n\t\t\t\t\t  <h1>Veuiller fournir un mot de passe pour activer votre compte</h1>\n\t\t\t\t\t  <InputGroup>\n\t\t\t\t\t\t\t<InputGroupAddon addonType=\"prepend\">\n\t\t\t\t\t\t\t\t  <InputGroupText>\n\t\t\t\t\t\t\t\t\t\t<i className=\"icon-lock\"></i>\n\t\t\t\t\t\t\t\t  </InputGroupText>\n\t\t\t\t\t\t\t</InputGroupAddon>\n\t\t\t\t\t\t\t<Input type=\"password\" name=\"newPassword\" placeholder=\"New password\" autoComplete=\"new-password\" onChange={(e) => this.handleFormChange(e)}/>\n\t\t\t\t\t  </InputGroup>\n\t\t\t\t\t  <InputGroup>\n\t\t\t\t\t\t\t<InputGroupAddon addonType=\"prepend\">\n\t\t\t\t\t\t\t\t\t  <InputGroupText>\n\t\t\t\t\t\t\t\t\t\t<i className=\"icon-lock\"></i>\n\t\t\t\t\t\t\t\t\t  </InputGroupText>\n\t\t\t\t\t\t\t</InputGroupAddon>\n\t\t\t\t\t\t\t<Input type=\"password\" name=\"newPasswordValidation\" placeholder=\"Repeat password\" autoComplete=\"new-password\" onChange={(e) => this.handleFormChange(e)}/>\n\t\t\t\t\t  </InputGroup>\n\t\t\t\t</Form>\n\n\t      </ModalBody>\n          <ModalFooter>\n            <Button onClick={(e) => this.doActivatePassword(e)}>Modifier</Button>{' '}\n            <Button onClick={this.toggle}>Annuler</Button>\n          </ModalFooter>\n        </Modal>\n      </div>\n    );\n  }\n}\n\nActivatePassword.propTypes = propTypes;\nActivatePassword.defaultProps = defaultProps;\n\nexport default connect(mapStateToProps, mapDispatchToProps) (ActivatePassword);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { workableService } from '_services/workable.services';\nimport { WizardConfirm } from '_components/_common';\nimport Button from 'react-bootstrap/Button'\nimport {commons} from \"_helpers/commons\";\nimport {toast} from \"react-toastify\";\n\nconst propTypes = {\n\tworkInfo: PropTypes.object,\n\tworkableId: PropTypes.string,\n\tcanCheckin: PropTypes.bool,\n\tcanCheckout: PropTypes.bool,\n\tcanUndoCheckout: PropTypes.bool,\n\ttoWcCallBack: PropTypes.func,\n}\nconst defaultProps = {\n\tcanCheckin: false,\n\tcanCheckout: false,\n\tcanUndoCheckout: false,\n\ttoWcCallBack: null\n}\n/**\n * Actions for workable\n */\nclass WorkableAction extends Component {\n\n\tconstructor(props){\n\t\tsuper(props)\n\t\tthis.state = {\n\t\t}\n\n\t\tthis.checkin = this.checkin.bind(this)\n\t\tthis.checkout = this.checkout.bind(this)\n\t\tthis.undoCheckout = this.undoCheckout.bind(this)\n\t\tthis.toWorkingCopy = this.toWorkingCopy.bind(this)\n\t\tthis.toOriginalCopy = this.toOriginalCopy.bind(this)\n\t}\n\n\tcomponentDidUpdate(prevProps){\n\t\tif(prevProps.workableId !== this.props.workableId){\n\t\t\tthis.setState({\n\t\t\t\twc: this.props.workInfo.isWorkingCopy,\n\t\t\t\tlocked: this.props.workInfo.lockedBy !== '' && !this.props.workInfo.isWorkingCopy,\n\t\t\t\tworkableId: this.props.workableId\n\t\t\t})\n\t\t}\n\t}\n\n\tasync toOriginalCopy(e){\n\t\tif(e) e.preventDefault()\n\t\tif(this.props.setLoading) this.props.setLoading();\n\t\tconst idOnly = this.props.idOnly ? this.props.idOnly : false;\n\t\tworkableService.originalCopy(this.props.workableId, idOnly, this.props.containerId).then(response => {\n\t\t\tif(commons.isRequestError(response)){\n\t\t\t\ttoast.error(commons.toastError(response))\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.props.loadDatas(response.data.attributes.id, false);\n\t\t\t}\n\t\t})\n\t}\n\t/**\n\t * toWorkingCopy\n\t */\n\tasync toWorkingCopy(e, id){\n\t\tif(e)e.preventDefault();\n\t\tif(this.props.setLoading) this.props.setLoading();\n\t\tconst idOnly = this.props.idOnly ? this.props.idOnly : false;\n\t\tworkableService.workingCopy(id ? id : this.props.workableId, idOnly, this.props.containerId).then(response => {\n\t\t\tif(commons.isRequestError(response)){\n\t\t\t\ttoast.error(commons.toastError(response))\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.props.loadDatas(response.data.attributes.id, false);\n\t\t\t}\n\t\t})\n\t}\n\t/**\n\t * Checkin\n\t */\n\tasync checkin(e){\n\t\tif(e)e.preventDefault();\n\t\tif(this.props.setLoading) this.props.setLoading();\n\n\t\tworkableService.checkin(this.props.workableId, '', this.props.containerId).then(response => {\n\t\t\tif(commons.isRequestError(response)){\n\t\t\t\ttoast.error(commons.toastError(response))\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.props.loadDatas(this.props.workableId, false);\n\t\t\t\tif(this.props.refreshListView){\n\t\t\t\t\tthis.props.refreshListView('viewDetails');\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\t}\n\t/**\n\t * Checkout\n\t */\n\tasync checkout(e){\n\t\tif(e)e.preventDefault();\n\t\tif(this.props.setLoading) this.props.setLoading();\n\n\t\tconst idOnly = this.props.idOnly ? this.props.idOnly : false;\n\t\tworkableService.checkout(this.props.workableId, idOnly,'', this.props.containerId).then(response => {\n\t\t\tif(commons.isRequestError(response)){\n\t\t\t\ttoast.error(commons.toastError(response))\n\t\t\t}\n\t\t\telse {\n\t\t\t\tconst wcid = response.data.attributes.id\n\t\t\t\tthis.props.loadDatas(wcid, false);\n\t\t\t}\n\t\t})\n\t}\n\t/**\n\t * Undo checkout\n\t */\n\tasync undoCheckout(e){\n\t\tif(e)e.preventDefault();\n\t\tif(this.props.setLoading) this.props.setLoading();\n\t\tconst idOnly = this.props.idOnly ? this.props.idOnly : false;\n\t\tworkableService.originalCopy(this.props.workableId, idOnly, this.props.containerId).then(response => {\n\t\t\tif(commons.isRequestError(response)){\n\t\t\t\ttoast.error(commons.toastError(response))\n\t\t\t}\n\t\t\telse {\n\t\t\t\tconst original = response.data.attributes.id;\n\t\t\t\tworkableService.undoCheckout(this.props.workableId, '', this.props.containerId).then((res) => {\n\t\t\t\t\tif(commons.isRequestError(res)){\n\t\t\t\t\t\ttoast.error(commons.toastError(res))\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tif(this.props.loadDatas){\n\t\t\t\t\t\t\tthis.props.loadDatas(original);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif(this.props.refreshListView){\n\t\t\t\t\t\t\tthis.props.refreshListView();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t}\n\t\t})\n\t}\n\n\tworkingCopyActions(){\n\t\tlet VALIDATE_LABEL = this.props.VALIDATE_LABEL ? this.props.VALIDATE_LABEL :  'Valider';\n\t\tlet DELETE_WC_LABEL = this.props.DELETE_WC_LABEL ? this.props.DELETE_WC_LABEL :  'Supprimer';\n\t\tconst validateIcon = this.props.validateIcon ? this.props.validateIcon : 'fa fa-check fa-md';\n\t\tconst deleteIcon = this.props.deleteIcon ? this.props.deleteIcon : 'fa fa-md fa-trash';\n\n\t\treturn <>\n\t\t\t<WizardConfirm\n\t\t\t\tbuttonIcon={validateIcon}\n\t\t\t\tbuttonTitle={VALIDATE_LABEL}\n\t\t\t\tonConfirm={() => this.checkin()}\n\t\t\t\tdialogMessage=\"Validater toutes les modifications?\"\n\t\t\t\tdialogTitle={VALIDATE_LABEL}/>\n\n\t\t\t<WizardConfirm\n\t\t\t\tbuttonIcon={deleteIcon}\n\t\t\t\tbuttonTitle={DELETE_WC_LABEL}\n\t\t\t\tonConfirm={() => this.undoCheckout()}\n\t\t\t\tdialogMessage=\"Annuler toutes les modifications?\"\n\t\t\t\tdialogTitle={DELETE_WC_LABEL}/>\n\t\t</>\n\t}\n\t/**\n\t * Workable actions\n\t */\n\tworkabaleActions() {\n\t\tlet workingCopy = this.props.workInfo.isWorkingCopy === true;\n\n\t\tlet hasWorkingCopy = this.props.workInfo.lockedSince !== null &&\n\t\t\tthis.props.workInfo.lockedSince !== undefined &&\n\t\t\tthis.props.workInfo.lockedSince !== '';\n\n\t\tlet canForwardToWc = hasWorkingCopy && !workingCopy;\n\t\tlet canForwardToOriginalCopy = hasWorkingCopy && workingCopy;\n\n\t\tlet canCheckout = false;\n\t\tif(this.props.iterationInfo.isLatestIteration === true && !hasWorkingCopy){\n\t\t\tcanCheckout = true;\n\t\t}\n\n\t\tif(this.props.versionInfo && !this.props.versionInfo.isLatestVersion){\n\t\t\tcanCheckout = false;\n\t\t}\n\n\t\tlet actions = [];\n\t\tlet CLONE_LABEL= this.props.CLONE_LABEL ? this.props.CLONE_LABEL :  'CLONE';\n\t\tconst cloneIcon = this.props.cloneIcon ?  this.props.cloneIcon : 'fa fa-md fa-clone';\n\t\tif(canCheckout){\n\t\t\tactions.push(\n\t\t\t\t<WizardConfirm\n\t\t\t\t\tbuttonIcon={cloneIcon}\n\t\t\t\t\tbuttonTitle={CLONE_LABEL}\n\t\t\t\t\tonConfirm={() => this.checkout()}\n\t\t\t\t\tdialogMessage=\"Créer une copie de travail?\"\n\t\t\t\t\tdialogTitle={CLONE_LABEL}/>\n\t\t\t)\n\t\t}\n\n\t\tif(workingCopy){\n\t\t\tactions.push(this.workingCopyActions());\n\t\t}\n\n\t\tlet WC_LABEL = this.props.WC_LABEL ? this.props.WC_LABEL :  'WORKING COPY'\n\t\tlet OC_LABEL = this.props.WC_LABEL ? this.props.OC_LABEL :  'ORIGINAL COPY'\n\n\t\treturn (\n\t\t\t<React.Fragment>\n\t\t\t\t{actions}\n\t\t\t\t<Button hidden={!canForwardToWc}  onClick={this.toWorkingCopy}>\n\t\t\t\t\t<i className=\"fa fa-forward fa-md\"></i>&nbsp;{WC_LABEL}</Button>\n\t\t\t\t<Button hidden={!canForwardToOriginalCopy}  onClick={this.toOriginalCopy}>\n\t\t\t\t\t<i className=\"fa fa-forward fa-md\"></i>&nbsp;{OC_LABEL}</Button>\n\t\t\t</React.Fragment>\n\t\t)\n\t}\n\n\trender(){\n\t\treturn (<div>{this.workabaleActions()}</div>)\n\t}\n}\n\nWorkableAction.propTypes = propTypes;\nWorkableAction.defaultProps = defaultProps;\n\n\nexport default WorkableAction;\n","import {_doGet, buildURLQuery, API_ROOT, _doPost} from './utils/services.config';\n\n/**\n * Rev controlled\n */\nexport const revControlledService = {\n    allIterationsOf,\n\tallIterationsOfversion,\n    allVersionsOf,\n    exactIterationAndVersion,\n\texactIterationAndVersionIdOnly,\n    latestIterationOf,\n\tlatestIterationOfIdOnly,\n\trevise,\n}\nfunction revise(revControlledId, containerId){\n\tconst uri = '/api/secured/v1/katappult/rc/revise?containerId=' + containerId + \"&revControlledId=\" + revControlledId;\n\tconst url = `${API_ROOT}` + uri;\n\treturn _doPost(url);\n}\n/**\n * All iterations of a revision controlled.\n *\n * @param revControlledId\n * @returns\n */\nasync function allIterationsOf(revControlledId, containerId) {\n\tconst uri = '/api/secured/v1/katappult/rc/iterations?' + 'containerId=' + containerId + '&revControlledId=' + revControlledId;\n\tconst url = `${API_ROOT}` + uri;\n\treturn _doGet(url);\n}\nasync function allIterationsOfversion(revControlledId, versionId, containerId) {\n\tconst uri = '/api/secured/v1/katappult/rc/iterationsOfVersion?' + 'containerId=' + containerId + '&revControlledId=' + revControlledId + '&versionNumber=' +versionId;\n\tconst url = `${API_ROOT}` + uri;\n\treturn _doGet(url);\n}\n\n/**\n * All versions of a revision controlled.\n *\n * @param revControlledId\n * @returns\n */\nasync function allVersionsOf(revControlledId, containerId) {\n\tconst uri = '/api/secured/v1/katappult/rc/versions?' + 'containerId=' + containerId + '&revControlledId=' + revControlledId;\n\tconst url = `${API_ROOT}` + uri;\n\treturn _doGet(url);\n}\nasync function exactIterationAndVersion(revControlledId, version, iteration, containerId){\n\tconst uri = '/api/secured/v1/katappult/rc/exactVersion/exactIteration?containerId=' + containerId + '&revControlledId=' + revControlledId + '&versionNumber=' + version + '&iterationNumber=' + iteration + \"&idOnly=false\";\n\tconst url = `${API_ROOT}` + uri;\n\treturn _doGet(url);\n}\nasync function latestIterationOf(revControlledId, containerId){\n\tconst uri = '/api/secured/v1/katappult/rc/latest?' + 'containerId=' + containerId + '&revControlledId=' + revControlledId + \"&idOnly=false\";\n\tconst url = `${API_ROOT}` + uri;\n\treturn _doGet(url);\n}\n\nasync function exactIterationAndVersionIdOnly(revControlledId, version, iteration, containerId){\n\tconst uri = '/api/secured/v1/katappult/rc/exactVersion/exactIteration?containerId=' + containerId + '&revControlledId=' + revControlledId + '&versionNumber=' + version + '&iterationNumber=' + iteration + \"&idOnly=true\";\n\tconst url = `${API_ROOT}` + uri;\n\treturn _doGet(url);\n}\nasync function latestIterationOfIdOnly(revControlledId, containerId){\n\tconst uri = '/api/secured/v1/katappult/rc/latest?' + 'containerId=' + containerId + '&revControlledId=' + revControlledId + \"&idOnly=true\";\n\tconst url = `${API_ROOT}` + uri;\n\treturn _doGet(url);\n}\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { revControlledService } from '_services/revcontrolled.services';\nimport Button from 'react-bootstrap/Button'\nimport {WizardConfirm} from \"_components/_common\";\nimport {commons} from \"_helpers/commons\";\nimport {toast} from \"react-toastify\";\n\nconst propTypes = {\n\tversionInfo: PropTypes.string,\n\titerationInfo: PropTypes.string,\n\trevControlledId: PropTypes.string,\n}\nconst defaultProps = {\n}\n/**\n * Actions for revision controlled\n */\nclass RevControlledAction extends Component {\n\n\tconstructor(props){\n\t\tsuper(props);\n\n\t\tthis.revise = this.revise.bind(this);\n\t\tthis.getNextIteration = this.getNextIteration.bind(this);\n\t\tthis.getPreviousIteration = this.getPreviousIteration.bind(this);\n\t\tthis.getLatestIteration = this.getLatestIteration.bind(this);\n\t\tthis.onAllIterationsSelected = this.onAllIterationsSelected.bind(this);\n\t}\n\n\tasync onAllIterationsSelected() {\n\t\tif(this.props.onAllIterationsSelected){\n\t\t\tthis.props.onAllIterationsSelected()\n\t\t}\n\t}\n\n\tasync revise(){\n\t\tlet revControlledId = this.props.revControlledId;\n\t\trevControlledService.revise(revControlledId, this.props.containerId).then(response => {\n\t\t\tconst error = commons.isRequestError(response)\n\t\t\tif(error){\n\t\t\t\ttoast.error(commons.toastError(response));\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif(this.props.loadDatas) this.props.loadDatas(response.data.attributes.id);\n\t\t\t\tif(this.props.refreshListView) this.props.refreshListView();\n\t\t\t}\n\t\t})\n\t}\n\n\tasync getNextIteration(){\n\t\tlet currentIteration = this.props.iterationInfo.iterationNumber,\n\t\t\tnextIteration = currentIteration + 1;\n\n\t\tlet version = this.props.versionInfo ? this.props.versionInfo.versionId : 'not_versioned';\n\t\tlet revControlledId = this.props.revControlledId;\n\t\trevControlledService.exactIterationAndVersionIdOnly(revControlledId, version, nextIteration, this.props.containerId).then(response => {\n\t\t\tconst error = commons.isRequestError(response)\n\t\t\tif(!error){\n\t\t\t\tthis.props.loadDatas(response.data.attributes.id);\n\t\t\t}\n\t\t})\n\t}\n\n\tasync getPreviousIteration(){\n\t\tlet currentIteration = this.props.iterationInfo.iterationNumber,\n\t\t\tpreviousIteration = currentIteration - 1;\n\n\t\tlet version = this.props.versionInfo ? this.props.versionInfo.versionId : 'not_versioned';\n\t\tif(previousIteration >= 1){\n\t\t\tlet revControlledId = this.props.revControlledId;\n\t\t\tif(revControlledId){\n\t\t\t\trevControlledService.exactIterationAndVersionIdOnly(revControlledId, version, previousIteration, this.props.containerId).then(response => {\n\t\t\t\t\tconst error = commons.isRequestError(response)\n\t\t\t\t\tif(!error){\n\t\t\t\t\t\tthis.props.loadDatas(response.data.attributes.id);\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t}\n\t\t}\n\t}\n\n\tasync getLatestIteration(){\n\t\tlet revControlledId = this.props.revControlledId;\n\t\trevControlledService.latestIterationOfIdOnly(revControlledId, this.props.containerId).then(response => {\n\t\t\tconst error = commons.isRequestError(response)\n\t\t\tif(!error){\n\t\t\t\tthis.props.loadDatas(response.data.attributes.id);\n\t\t\t}\n\t\t})\n\t}\n\n\trcActions() {\n\t\tlet isLatestIteration = this.props.iterationInfo.isLatestIteration === true;\n\t\tlet firstIndex = this.props.iterationInfo.iterationNumber === 1;\n\t\tconst canRevise = this.props.iterationInfo.isLatestIteration && this.props.versionInfo\n\t\t\t&& this.props.versionInfo.isLatestVersion\n\t\t\t&& this.props.canRevise;\n\t\tlet isLatestVersion = isLatestIteration\n\n\t\tif(this.props.versionInfo){\n\t\t\tisLatestVersion = isLatestIteration && this.props.versionInfo.isLatestVersion\n\t\t}\n\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t{this.props.onAllIterationsSelected && <Button onClick={this.onAllIterationsSelected}><i className=\"fa fa-list fa-sm\"></i></Button>}\n\t\t\t\t<Button disabled={firstIndex}  onClick={this.getPreviousIteration}><i className=\"fa fa-backward fa-sm\"></i></Button>\n\t\t\t\t<Button disabled={isLatestVersion} onClick={this.getLatestIteration}><i className=\"fa fa-sm\"></i>&nbsp;DERNIÈRE VERSION</Button>\n\t\t\t\t<Button disabled={isLatestIteration} onClick={this.getNextIteration}><i className=\"fa fa-forward fa-sm\"></i></Button>\n\t\t\t\t{this.props.versionInfo && canRevise && <WizardConfirm\n\t\t\t\t\tbuttonTitle='Nouvelle version'\n\t\t\t\t\tonConfirm={() => this.revise()}\n\t\t\t\t\tdialogMessage=\"Créer une nouvelle version?\"\n\t\t\t\t\tdialogTitle='Nouvelle version'/>\n\t\t\t\t}\n\t\t\t</div>\n\t\t)\n\t}\n\n\trender(){\n\t\treturn (\n\t\t\t<div>{this.rcActions()}</div>\n\t\t)\n\t}\n}\n\nRevControlledAction.propTypes = propTypes;\nRevControlledAction.defaultProps = defaultProps;\n\n\nexport default RevControlledAction;\n","import React, { Component } from 'react';\n\nclass ThumbInfo extends Component {\n\n    constructor(props){\n        super(props)\n        this.state = {\n\n        }\n    }\n\n    render() {\n        let host = window.location.host;\n        let pathname = window.location.pathname;\n        let productId = this.props.productId ? this.props.productId.split('/').join('_') : 'no-img'\n        let imageName = this.props.imageName ? this.props.imageName : 'main.jpg'\n        let rootUrl;\n        if(host.includes('localhost')){\n            rootUrl = \"http://localhost:8080/\" + process.env.REACT_APP_CONTEXT_ROOT\n        }\n        else {\n            rootUrl = `${'http://'  + host  + '/' + process.env.REACT_APP_CONTEXT_ROOT }`\n        }\n\n        return (\n            <React.Fragment>\n                <div id=\"cardimg-wrapper\" className={this.props.className ? this.props.className : \"card-image\"}\n                     style={{backgroundImage: `url(${rootUrl + '/' + productId + '/' + imageName})`}}>\n                </div>\n            </React.Fragment>\n        )\n    }\n}\n\nexport default ThumbInfo;\n","import React, { Component } from 'react';\n\nclass WaitingPane extends Component {\n\n\tconstructor(props){\n\t\tsuper(props)\n\t}\n\n\trender() {\n\t\tlet waitingMessage = 'Veuillez patienter...';\n\t\tif(this.props.waitingMessage){\n\t\t\twaitingMessage = this.props.waitingMessage;\n\t\t}\n\n\t\tlet className, notbordered = this.props.bordered === false || this.props.bordered === null || this.props.bordered === undefined;\n\t\treturn  <div className=\"waiting-pane\">\n\t\t\t<div className={'app-loading'}>\n\t\t\t\t<div className=\"lds-facebook\">\n\t\t\t\t\t<div></div>\n\t\t\t\t\t<div></div>\n\t\t\t\t\t<div></div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\n\t}\n}\n\nexport default WaitingPane;\n","import React from 'react';\nimport {commons} from '_helpers/commons';\n\nclass TotalElements extends React.Component{\n\trender(){\n\t\tlet currentContainerName = commons.getWorkingContainerName(this.props.userContext);\n\t\treturn (\n\t\t\t<div className='total-elements'>\n\t\t\t\t<p className=\"\"><center><i>{currentContainerName}</i></center></p>\n\t\t\t\t<p className=\"search-results\">\n\t\t\t\t\t<center>{this.props.totalElements} Element(s)</center>\n\t\t\t\t</p>\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nexport default TotalElements;\n\n","import React, { Component } from 'react';\nimport { fadeIn } from 'react-animations'\nimport Radium, {StyleRoot} from 'radium';\n\nconst styles = {\n\tfadeIn: {\n\t\tanimation: 'x 500ms',\n\t\tanimationName: Radium.keyframes(fadeIn, 'fadeIn')\n\t}\n}\n\nclass EmptyPane extends Component {\n\n\tconstructor(props){\n\t\tsuper(props)\n\t}\n\trender() {\n\t\tlet mainMessage = \"Pas d'éléments\";\n\t\tif(this.props.mainMessage){\n\t\t\tmainMessage = this.props.mainMessage;\n\t\t}\n\n\t\tlet className = \"admin-list-nocontent\";\n\t\tif(this.props.className){\n\t\t\tclassName = this.props.className\n\t\t}\n\n\t\tlet secondaryMessage = \"Pas d'éléments\";\n\t\tif(this.props.secondaryMessage){\n\t\t\tsecondaryMessage = this.props.secondaryMessage;\n\t\t}\n\n\t\tlet rootClassName = this.props.className ? this.props.className + ' empty-pane' : 'empty-pane'\n\t\treturn  <div className={rootClassName}>\n\t\t\t<StyleRoot style={styles.fadeIn}>\n\t\t\t\t<p className='empty-pane-secondary-message'>{secondaryMessage}</p>\n\t\t\t</StyleRoot>\n\t\t</div>\n\t}\n}\n\n\nexport default EmptyPane;\n","import React, { Component } from 'react';\nimport {Navbar} from 'react-bootstrap'\n\n/**\n * Default footer\n */\nclass DefaultFooter extends Component {\n\trender() {\n\t\tlet buildVersion = process.env.REACT_APP_BUILD_VERSION;\n\t\tif(!buildVersion){\n\t\t\tbuildVersion = process.env.REACT_APP_VERSION\n\t\t}\n\n\t\treturn (<>\n\t\t\t\t<Navbar fixed=\"bottom\" className=\"app-footer default-footer\">\n\t\t\t\t\t{/*<div><a rel=\"license\" href=\"http://creativecommons.org/licenses/by-nc-sa/4.0/\">\n\t\t\t\t\t\t<img alt=\"Licence Creative Commons\" style={{'border-width':0}}\n\t\t\t\t\t\t\t src=\"https://i.creativecommons.org/l/by-nc-sa/4.0/88x31.png\" />\n\t\t\t\t\t</a></div>\n\t\t\t\t\t<Nav>\n\t\t            \t\t<center className=\"d-flex flex-column mx-auto\">\n\t\t\t\t\t\t\t\t<div className=\"mb-1\"><a href=\"https://nexitia.com\">&nbsp;&copy;</a>&nbsp;2021 All rights reserved</div>\n\t\t\t            \t\t<a href=\"https://nexitia.com\">Designed and developed by NEXITIA TECHNOLOGIES&nbsp;&copy;&nbsp;</a>\n\t\t\t            \t</center>\n\t\t            \t</Nav>\n\t\t\t\t\t<div className=\"default-footer-version\"><span>Designed and Developed by NEXITIA TECHNOLOGIES</span></div>\n\t\t\t\t\t*/}\n\t\t\t\t</Navbar>\n\n\t\t\t</>\n\t\t);\n\t}\n}\n\nexport default DefaultFooter;\n","import React from 'react';\nimport Modal from 'react-bootstrap/Modal'\n\nclass Wizard extends React.Component{\n\n\tconstructor(props){\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tmodalShow: false,\n\t\t}\n\t\tthis.hideWizard = this.hideWizard.bind(this);\n\t\tthis.setModalShow = this.setModalShow.bind(this);\n\t}\n\n\tsetModalShow(val){\n\t\tif(val === false){\n\t\t\tthis.hideWizard()\n\t\t}\n\n\t\tthis.setState({\n\t\t\tmodalShow: val\n\t\t})\n\t}\n\n\thideWizard(){\n\t\tif(this.props.onWizardHide){\n\t\t\tthis.props.onWizardHide()\n\t\t}\n\t}\n\tmodal(){\n\n\t}\n\trender(){\n\t\tlet buttonIconComp = this.props.buttonIconComp ? this.props.buttonIconComp : <i className={this.props.buttonIcon}>&nbsp;</i>\n\t\treturn (\n\t\t\t<>\n\t\t\t\t<button\n\t\t\t\t\tdisabled={this.props.disabled}\n\t\t\t\t\tblock={this.props.buttonBlock}\n\t\t\t\t\thidden={this.props.hideButtonIf}\n\t\t\t\t\tclassName={this.props.buttonClassName}\n\t\t\t\t\tonClick={() => this.setModalShow(true)}>\n\t\t\t\t\t{buttonIconComp}\n\t\t\t\t\t{this.props.buttonTitle}\n\t\t\t\t</button>\n\n\t\t\t\t<MyVerticallyCenteredModal\n\t\t\t\t\t{...this.props}\n\t\t\t\t\tshow={this.state.modalShow}\n\t\t\t\t\tonHide={() => this.setModalShow(false)}/>\n\t\t\t</>\n\t\t);\n\t}\n}\n\nexport default Wizard;\n\nfunction MyVerticallyCenteredModal(props) {\n\tlet content = '<p>Pas de contenu</p>'\n\tlet size = props.dialogSize ? props.dialogSize : 'lg'\n\tlet hideFooter = props.hideFooter === true;\n\tlet hideHeader = props.hideHeader === true;\n\n\tif(props.dialogContentProvider){\n\t\tcontent = props.dialogContentProvider(props.onHide, props.additionalParams)\n\t}\n\n\treturn (\n\t\t<Modal\n\t\t\t{...props}\n\t\t\tcentered\n\t\t\tsize={size}\n\t\t\tdialogClassName={props.dialogClassName}\n\t\t\taria-labelledby=\"contained-modal-title-vcenter\"\n\t\t\tscrollable=\"true\">\n\n\t\t\t<Modal.Header className={'wizard-header'} closeButton>\n\t\t\t\t<h3>{props.dialogTitle}</h3>\n\t\t\t</Modal.Header>\n\n\t\t\t<Modal.Body>{content}</Modal.Body>\n\n\t\t\t{!hideFooter && <Modal.Footer className={'btn-toolbar-right'}>\n\t\t\t\t<button block onClick={props.onHide}>Fermer</button>\n\t\t\t</Modal.Footer>\n\t\t\t}\n\t\t</Modal>\n\t);\n}\n","import React from 'react';\nimport {Modal} from 'react-bootstrap'\nimport Button from 'react-bootstrap/Button'\n\nclass WizardConfirm extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            modalShow: false,\n        }\n\n        this.setModalShow = this.setModalShow.bind(this)\n    }\n\n    setModalShow(val) {\n        this.setState({\n            modalShow: val\n        })\n    }\n\n    onConfirm() {\n        if (this.props.onConfirm) {\n            this.props.onConfirm()\n        }\n\n        if (this.props.onConfirmAndClose) {\n            const close = () =>  this.setModalShow(false)\n            this.props.onConfirmAndClose(close)\n        }\n        else {\n            this.setModalShow(false)\n        }\n    }\n\n    render() {\n        return <>\n            <Button\n                className={this.props.buttonClassName ? this.props.buttonClassName : ''}\n                disabled={this.props.disabled}\n                onClick={() => this.setModalShow(true)}>\n\n                {this.props.buttonIconComp ? this.props.buttonIconComp : <i className={this.props.buttonIcon}></i>}\n                {this.props.buttonTitle ? <>&nbsp;{this.props.buttonTitle}</> : ''}\n\n            </Button>\n\n            <Confirm\n                {...this.props}\n                show={this.state.modalShow}\n                onConfirm={() => this.onConfirm()}\n                onHide={() => this.setModalShow(false)}/>\n        </>\n    }\n}\n\nexport default WizardConfirm;\n\nfunction Confirm(props) {\n    let wizardButtonTitle = props.buttonTitle && props.buttonTitle.length > 0 ? props.buttonTitle : 'OUI';\n    let modalSize = props.modalSize ? props.modalSize : 'md';\n\n    return (\n        <Modal\n            {...props}\n            size={modalSize}\n            centered\n            aria-labelledby=\"contained-modal-title-vtop\">\n\n            <Modal.Header>\n                <h3>&nbsp;&nbsp;&nbsp;</h3>\n            </Modal.Header>\n\n            <Modal.Body>\n                <div className={props.bodyClassName ? props.bodyClassName : 'display-6'}>\n                    {props.dialogMessage}\n                    {props.dialogContent ? props.dialogContent() : ''}\n                </div>\n            </Modal.Body>\n\n            <Modal.Footer>\n                <div className=\"btn-toolbar\">\n                    <Button onClick={props.onConfirm}>{wizardButtonTitle}</Button>\n                    <Button variant=\"secondary\" size=\"md\" onClick={props.onHide}>ANNULER</Button>\n                </div>\n            </Modal.Footer>\n        </Modal>\n    );\n}\n","import { _doGet, buildURLQuery, API_ROOT } from './utils/services.config';\n\n/**\n * Export\n */\nexport const listValuesService = {\n\tnames,\n\tlistvalues,\n\tnoLocale,\n\tdetails\n};\nasync function listvalues(formData) {\n\tlet p = buildURLQuery(formData);\n\tconst uri = '/api/secured/v1/katappult/listvalues?containerId=:containerId&'.concat(p);\n\tconst url = `${API_ROOT}` + uri;\n\treturn _doGet(url);\n}\nasync function names(containerId) {\n\tconst uri = '/api/secured/v1/katappult/listvalues/names?containerId=' + containerId;\n\tconst url = `${API_ROOT}` + uri;\n\treturn _doGet(url);\n}\nasync function noLocale(formData, containerId) {\n\tlet p = buildURLQuery(formData);\n\tconst uri = '/api/secured/v1/katappult/listvalues/noLocale?containerId=' + containerId + '&'.concat(p);\n\tconst url = `${API_ROOT}` + uri;\n\treturn _doGet(url);\n}\nasync function details(id, containerId) {\n\tconst uri = '/api/secured/v1/katappult/listvalues/details?containerId=' + containerId + '&id=' + id;\n\tconst url = `${API_ROOT}` + uri;\n\treturn _doGet(url);\n}\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { listValuesService } from '_services/listvalues.services';\nimport {ListGroup, ListGroupItem} from 'reactstrap';\nimport { Link } from 'react-router-dom';\nimport { DataTable, EmptyPane} from '_components/_common';\nimport * as actions from '_actions/actions';\n\nconst mapStateToProps = store => ({\n\tselectedItem: store.enumerations,\n})\nconst mapDispatchToProps = (disptach) => ({\n\tupdateEnumerationsSelection: (e) => disptach(actions.updateEnumerationsSelection(e)),\n})\nclass Enumerations extends Component {\n\n\tconstructor(props){\n\t\tsuper(props)\n\t\tthis.state = {\n\t\t\tnames :[],\n\t\t\tselectedItem: this.props.selectedItem ? this.props.selectedItem : null,\n\t\t\t'en': this.props.selectedItem.fr ? this.props.selectedItem.en : [],\n\t\t\t'fr': this.props.selectedItem.en ? this.props.selectedItem.fr : [],\n\t\t}\n\t\tthis.selectItem = this.selectItem.bind(this)\n\t}\n\n\tcomponentDidMount() {\n\t\tlistValuesService.names(this.props.containerId)\n\t\t.then(names => {\n\t\t\tif(names && names.data){\n\t\t\t\tthis.setState({\n\t\t\t\t\tnames: names.data\n\t\t\t\t})\n\t\t\t}\n\t\t})\n\t}\n\t selectItem(e, item){\n        e.preventDefault();\n        //const cursel = this.state.selectedItem;\n        let source = e.target || e.srcElement;\n        //if(cursel) cursel.activate = false;\n        source.activate = true;\n\n\t\tlet formData  = new FormData()\n        formData['name'] = item\n\n        if(source !== this.state.selectedItem) {\n\t        listValuesService.noLocale(formData, this.props.containerId)\n\t\t\t.then(names => {\n\t\t\t\tlet en = [], fr = []\n\t\t\t\tnames.data.map(i => {\n\t\t\t\t\tif(i.attributes.locale === 'en'){\n\t\t\t\t\t\ten.push(i)\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tfr.push(i)\n\t\t\t\t\t}\n\t\t\t\t})\n\n\t\t\t\tlet payload = []\n\t\t\t\tpayload.push(en)\n\t\t\t\tpayload.push(fr)\n\n\t\t\t\tthis.props.updateEnumerationsSelection(payload)\n\t\t\t\tthis.setState({\n\t\t\t\t\tselectedItem: source,\n\t\t\t\t\t'en': en,\n\t\t\t\t\t'fr': fr,\n\t\t\t\t})\n\t\t\t})\n        }\n\t }\n\n\t render() {\n\t\t const navs = [];\n         this.state.names.map((item) => {\n             navs.push(\n                 <ListGroupItem tag=\"a\" href=\"#\" onClick={(e) => this.selectItem(e, item)} action>\n                         {item}<i className=\"fa fa-angle-right icons font-lg float-right\"></i>\n                 </ListGroupItem>\n             );\n         });\n\n         if(this.state.names.length === 0){\n        \t navs.push(<EmptyPane />)\n         }\n\n         let en, fr, noSelection, hasEnum = false\n         if(this.state.en && this.state.en.length > 0){\n        \thasEnum = true\n        \ten = (\n        \t\t<div className=\"no-radius\">\n        \t\t\t<div className=\"\"><h3 className=\"\">English</h3></div>\n\t        \t\t<DataTable items={JSON.stringify(this.state.en)}\n\t        \t\t\ttotalElements='2'\n\t        \t\t\tpaginate={false}\n\t\t\t\t\t\ttableConfig={tableConfig}/>\n\t            </div>\n        \t)\n         }\n\n         if(this.state.fr && this.state.fr.length > 0){\n        \t hasEnum = true\n        \t fr = (\n        \t\t<div>\n        \t\t\t\t<div className=\"\"><h3 className=\"\">Français</h3></div>\n        \t\t\t \t<DataTable items={JSON.stringify(this.state.fr)}\n\t\t\t\t\t\t\ttotalElements='2'\n\t\t\t\t\t\t\tpaginate={false}\n\t\t\t\t\t\t\ttableConfig={tableConfig}/>\n        \t\t</div>\n        \t )\n         }\n\n         if(!hasEnum){\n\t         noSelection  = <EmptyPane mainMessage=\"No item selected\" secondaryMessage=\"Please select an item\"/>\n         }\n\n         return (<div className={'enumerations'}>\n\t\t\t <div className=\"admin-middle-pane types-list\">\n\t\t\t\t <div className={'bordered-panel left'}><ListGroup>{navs}</ListGroup></div>\n\t\t\t\t <div className=\"type-details right\">\n\t\t\t \t\t\t<div>{noSelection}</div>\n\t \t\t\t\t\t<div>{fr}</div>\n\t\t\t\t\t <div>{en}</div>\n\t\t\t\t </div>\n\t\t\t </div>\n     \t\t</div>)\n\t  }\n}\n\nconst tableConfig = {\n\t\tcolumnsConfig: [\n\t\t\t{ name: 'Affiché',  displayComponent: (v, i) => LinkTo(v, i)},\n\t\t\t{ name: 'Valeur', dataField: 'attributes.savedValue', },\n\t\t    { name: 'Nom', dataField: 'attributes.name' },\n\t\t    { name: 'Locale', dataField: 'attributes.locale'},\n\t\t    { displayComponent: (v, i) => angleRight(i)},\n\t\t],\n}\n/**\n * Generates an angle right icon\n */\nconst angleRight = (v, item) => {\n\tconst link = `/admin/p/enumerations/${v.attributes.id}`\n\treturn <td><Link to={link}><i className=\"fa fa-angle-right fa-lg\"></i></Link></td>\n}\n\n/**\n * Generates an angle right icon\n */\nconst LinkTo = (v, i) => {\n\tconst link = `/admin/p/enumerations/${i.attributes.id}`\n\treturn <td><Link to={link}>{i.attributes.value}</Link></td>\n}\n\n\nexport default connect(mapStateToProps, mapDispatchToProps) (Enumerations)\n","import React, { Component } from 'react';\nimport { AttributeListGroup} from '_components/_common';\nimport { accountService } from '_services/account.services';\nimport { loginService } from '_services/login.services';\nimport { commons } from '_helpers/commons';\nimport {toast} from \"react-toastify\";\nimport {coreUri} from \"_helpers/CoreUri\";\n\n/**\n * Register new org.\n */\nclass AddOrg extends Component {\n\n\tconstructor(props) {\n\t\tsuper(props)\n\t\tthis.state = {\n\t\t\tformData: {\n\t\t\t\tcontainer: this.getRegisteringContainer(),\n\t\t\t\twithAccount: true,\n\t\t\t\tsimpleUserForm: true,\n\t\t\t\tname: '',\n\t\t\t},\n\t\t\tloading: false,\n\t\t\terrors:[]\n\t\t}\n\n\t\tthis.registerAttributesList = this.registerAttributesList.bind(this)\n\t\tthis.registerUser = this.registerUser.bind(this);\n\t\tthis.handleResponse = this.handleResponse.bind(this)\n\t\tthis.onFormChange = this.onFormChange.bind(this)\n\t\tthis.formValidity = this.formValidity.bind(this)\n\t}\n\n\tonFormChange(form){\n\t\tthis.setState({formData: form})\n\t}\n\n\tgetRegisteringContainer(){\n\t\tif(this.props.registeringContainer){\n\t\t\treturn this.props.registeringContainer;\n\t\t}\n\t\treturn this.props.containerId;\n\t}\n\n\t_handleRegister(formData){\n\t\tformData.container = this.getRegisteringContainer();\n\t\tformData.orgType = \"com.katappult.people.Party/Organization\";\n\t\tformData.withAccount = 'true'\n\n\t\tif(this.props.handleRegister){\n\t\t\tthis.props.handleRegister(formData)\n\t\t}\n\t\telse {\n\t\t\tthis.registerUser(formData)\n\t\t}\n\t}\n\n\tregisterUser(formData) {\n\t\tthis.setState({\n\t\t\tloading:true,\n\t\t\tformData: formData\n\t\t})\n\n\t\tthis.setPropsProcessing(true)\n\t\tif(this.props.fromConnectedUser){\n\t\t\taccountService.registerOrgWithAccount(formData).then(response => {\n\t\t\t\tthis.handleResponse(response, formData);\n\t\t\t\ttoast(commons.toastSuccess(\"Le compte utilisateur a été créé\"));\n\t\t\t}).catch(error => {\n\t\t\t\tconsole.error(error);\n\t\t\t\tthis.setState({loading: false})\n\t\t\t\tthis.setPropsProcessing(false)\n\t\t\t});\n\t\t}\n\t\telse {\n\t\t\taccountService.registerOrgWithAccountAnon(formData).then(response => {\n\t\t\t\tthis.handleResponse(response, formData)\n\t\t\t}).catch(error => {\n\t\t\t\tthis.setState({loading: false})\n\t\t\t\tthis.setPropsProcessing(false)\n\t\t\t});\n\n\t\t}\n\t}\n\n\tsetPropsProcessing(value){\n\t\tif(this.props.onProcessing){\n\t\t\tthis.props.onProcessing(true)\n\t\t}\n\t}\n\n\t/**\n\t * Handle save response.\n\t */\n\tasync handleResponse(response, formData){\n\t\tthis.setPropsProcessing(false);\n\n\t\tif(commons.isRequestError(response)){\n\t\t\tthis.props.onError(response.message)\n\t\t\tthis.setState({\n\t\t\t\tloading: false,\n\t\t\t\tformData: formData,\n\t\t\t\terrors: [response.message],\n\t\t\t})\n\t\t}\n\t\telse {\n\t\t\tif(!this.props.fromConnectedUser){\n\t\t\t\tlet loginForm = {};\n\t\t\t\tloginForm.login = formData.accountEmail;\n\t\t\t\tloginForm.password = formData.accountPassword;\n\n\t\t\t\tlet response = await loginService.login(loginForm).then(response => {\n\t\t\t\t\treturn response;\n\t\t\t\t});\n\n\t\t\t\tlet authorization = await response.text();\n\t\t\t\tcommons.setSessionId(authorization)\n\t\t\t\tif(authorization) this.handleLoginSuccess(authorization);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.setPropsProcessing(false)\n\t\t\t\tif(this.props.onCreatePeopleSuccess){\n\t\t\t\t\tthis.props.onCreatePeopleSuccess()\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tasync handleLoginSuccess(authorization){\n\t\tloginService.postLogin(authorization).then(json => {\n\t\t\tcommons.katappult_core_loginSuccess(json);\n\n\t\t\tlet account = JSON.parse(json.data.links.account)\n\t\t\tlet active = account.active;\n\t\t\tif(active) {\n\t\t\t\twindow.location.href = coreUri.clientSideRenderedURL('/');\n\t\t\t}\n\t\t\telse {\n\t\t\t\twindow.location.href = coreUri.clientSideRenderedURL('/activateAccount');\n\t\t\t}\n\t\t});\n\t}\n\n\tformValidity(form) {\n\t\tconst {name, accountEmail, accountPassword} = form;\n\t\tconst newErrors = {}\n\n\t\tif (!name || name === '') newErrors.name = 'Champs invalide';\n\t\tif (!accountEmail || accountEmail === '') newErrors.accountEmail = 'Champs invalide';\n\t\tif (!accountPassword || accountPassword === '') newErrors.accountPassword = 'Champs invalide';\n\n\t\tif (!commons.validateEmail(accountEmail)){\n\t\t\tnewErrors.accountEmail = 'Champs invalide';\n\t\t}\n\t\treturn newErrors;\n\t}\n\n\tregisterAttributesList() {\n\t\tconst buttonTitle = this.props.createButtonTitle ?  this.props.createButtonTitle : 'Créer un compte'\n\t\tconst profileAttributesList = {\n\t\t\tsaveButtonTitle: buttonTitle,\n\t\t\tsaveButtonClassName: this.props.createButtonClassName,\n\t\t\tformValidity: (formData) => this.formValidity(formData)\t,\n\t\t\tonSubmit: (formData) => this._handleRegister(formData),\n\t\t\tattributes: [\n\t\t\t\t{name: 'Name', dataField: 'name',required:true,  placeHolder: 'Organization name'},\n\t\t\t\t{name: 'Email', dataField: 'accountEmail', type:'email', required: true, placeHolder: 'Email'},\n\t\t\t\t{name: 'Password', dataField: 'accountPassword', type:'password', required: true, placeHolder: 'Password'},\n\t\t\t]\n\t\t}\n\n\t\treturn profileAttributesList;\n\t}\n\n\trender() {\n\t\tlet form = {...this.state.formData}\n\t\tif(this.props.initialData){\n\t\t\tform = {\n\t\t\t\tattributes : {\n\t\t\t\t\tname: this.props.initialData.name,\n\t\t\t\t\taccountEmail: this.props.initialData.accountEmail\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn <div className={'add-people'}>\n\t\t\t{this.state.loading !== true && <AttributeListGroup\n\t\t\t\tattributesListConfig={this.registerAttributesList()}\n\t\t\t\tadditionalWizardLeftActions={this.props.additionalWizardLeftActions}\n\t\t\t\tdata={form}\n\t\t\t\tstandardFooterActions=\"true\"\n\t\t\t\tformMode='create_object'/>\n\t\t\t}\n\t\t</div>\n\t}\n}\n\nexport default AddOrg;\n","import React, { Component } from 'react';\nimport { AddOrg, AddPerson, WaitingPane } from '_components/_common';\nimport { Form } from 'react-bootstrap'\nimport { RiCheckboxCircleLine } from \"react-icons/ri\";\n\nclass AddPeople extends Component {\n\n\tconstructor(props) {\n\t\tsuper(props)\n\n\t\tlet initialFormData = this.props.initialData\n\t\tlet peopleSimpleType = this.props.peopleMode === 'b2c' || this.props.peopleMode === 'b2bAndB2c' ? '0' : '2'\n\t\tif(initialFormData){\n\t\t\tconst orgType = initialFormData.orgType\n\t\t\tif(orgType){\n\t\t\t\tpeopleSimpleType = '2'\n\t\t\t}\n\t\t}\n\n\t\tthis.state = {\n\t\t\tgender: '0',\n\t\t\tstep: 0,\n\t\t\terrors: [],\n\t\t\tprocessing: false,\n\t\t\tsuccess: false,\n\t\t\tpeopleSimpleType: peopleSimpleType\n\t\t}\n\n\t\tthis.handleSelectTypeChange = this.handleSelectTypeChange.bind(this)\n\t\tthis.processing = this.processing.bind(this)\n\t\tthis.onError = this.onError.bind(this)\n\t\tthis.onSuccess = this.onSuccess.bind(this)\n\t}\n\n\tprocessing(value){\n\t\tthis.setState({processing: value})\n\t}\n\n\thandleSelectTypeChange(event){\n\t\tthis.setState({peopleSimpleType: event.target.value})\n\t}\n\n\tnext(){\n\t\tthis.setState({step: 1})\n\t}\n\n\tgetStepContent(){\n\t\tlet content;\n\t\tif(this.state.peopleSimpleType === '0' || this.state.peopleSimpleType === '1'){\n\t\t\tcontent = <AddPerson\n\t\t\t\t{...this.props}\n\t\t\t\tonProcessing={this.processing}\n\t\t\t\tonError={this.onError}\n\t\t\t\tonCreatePeopleSuccess={this.onSuccess}\n\t\t\t\tgender={this.state.gender}\n\t\t\t\tdisplayHeader={false}/>\n\t\t}\n\t\telse {\n\t\t\tcontent = <AddOrg\n\t\t\t\t{...this.props}\n\t\t\t\tonError={this.onError}\n\t\t\t\tonCreatePeopleSuccess={this.onSuccess}\n\t\t\t\tonProcessing={this.processing}\n\t\t\t\tgender={this.state.gender}\n\t\t\t\tdisplayHeader={false}/>\n\t\t}\n\n\t\treturn content;\n\t}\n\n\tonError(error){\n\t\tlet errors = []\n\t\terrors.push(error)\n\t\tthis.setState({\n\t\t\terrors: errors,\n\t\t\tprocessing: false,\n\t\t})\n\t}\n\n\tonSuccess(){\n\t\tthis.setState({success: true})\n\t\tthis.props.onCreatePeopleSuccess()\n\t}\n\n\tpeopleCreationOption(){\n\t\tlet options = [];\n\n\t\tif(this.props.peopleMode === \"b2c\"){\n\t\t\toptions.push(<option value=\"0\">Mr</option>)\n\t\t\toptions.push(<option value=\"1\">Mme</option>)\n\t\t}\n\t\telse if(this.props.peopleMode === \"b2b\"){\n\t\t\toptions.push(<option value=\"2\">Société</option>)\n\t\t}\n\t\telse {\n\t\t\toptions.push(<option value=\"0\">Mr</option>)\n\t\t\toptions.push(<option value=\"1\">Mme</option>)\n\t\t\toptions.push(<option value=\"2\">Société</option>)\n\t\t}\n\n\t\treturn options\n\t}\n\n\trender() {\n\t\tlet homeUrl = \"/\";\n\t\tif(this.state.loading === true){\n\t\t\treturn <WaitingPane />\n\t\t}\n\n\t\tlet errors = [];\n\t\tif(this.state.errors.length > 0) {\n\t\t\tthis.state.errors.map(error => {\n\t\t\t\terrors.push(<p>{error}</p>)\n\t\t\t})\n\t\t}\n\n\t\tif(this.state.success){\n\t\t\treturn <div style={{'margin-left': '40%', 'margin-top':'2rem', 'margin-bottom':'2rem'}}>\n\t\t\t\t<RiCheckboxCircleLine color={\"green\"} size={'4rem'}/>\n\t\t\t</div>\n\t\t}\n\n\t\tlet row0 = <Form.Group controlId=\"createPeopleType\" className={'register-people-select'}>\n\t\t\t<Form.Label>Titre</Form.Label>\n\t\t\t<Form.Control as=\"select\"\n\t\t\t\t\t\t  value={this.state.peopleSimpleType}\n\t\t\t\t\t\t  onChange={this.handleSelectTypeChange}\n\t\t\t\t\t\t  name=\"peopleSimpleType\">\n\t\t\t\t{this.peopleCreationOption()}\n\t\t\t</Form.Control>\n\t\t</Form.Group>\n\n\t\treturn <div>\n\t\t\t<center id=\"form-errors-section\" className=\"form-error\">\n\t\t\t\t{errors}\n\t\t\t</center>\n\n\t\t\t{this.state.processing && <>\n\t\t\t\t<p><WaitingPane/></p>\n\t\t\t</>\n\t\t\t}\n\n\t\t\t{!this.state.processing && row0}\n\t\t\t{\t<>\n\t\t\t\t{this.getStepContent()}\n\t\t\t\t{!this.props.hideAgreements && <div className=\"footer-links\">\n\t\t\t\t\t<button onClick={e=>window.location.href = process.env.PUBLIC_URL}>Page d'accueil</button>\n\t\t\t\t\t<span>&nbsp;&nbsp;</span>\n\t\t\t\t\t<button onClick={e => this.props.history.replace('/login')}>Connexion</button>\n\t\t\t\t</div>\n\t\t\t\t}\n\t\t\t</>\n\t\t\t}\n\t\t</div>\n\t}\n}\n\nexport default AddPeople;\n","import React, { Component } from 'react';\nimport { AttributeListGroup} from '_components/_common';\nimport { accountService } from '_services/account.services'\nimport { loginService } from '_services/login.services';\nimport { commons } from '_helpers/commons';\nimport {toast} from \"react-toastify\";\nimport {coreUri} from \"_helpers/CoreUri\";\n\nclass AddPerson extends Component {\n\n\tconstructor(props) {\n\t\tsuper(props)\n\t\tthis.state = {\n\t\t\tformData: {\n\t\t\t\tcontainer: this.getRegisteringContainer(),\n\t\t\t\tgender: this.props.gender,\n\t\t\t\tlastName: '',\n\t\t\t\tfirstName: '',\n\t\t\t\tsimpleUserForm: true,\n\t\t\t\taccountEmail:'',\n\t\t\t\taccountPassword: '',\n\t\t\t},\n\n\t\t\tloading:false,\n\t\t\terrors:[]\n\t\t}\n\n\t\tthis.registerAttributesList = this.registerAttributesList.bind(this)\n\t\tthis.registerUser = this.registerUser.bind(this);\n\t\tthis.handleResponse = this.handleResponse.bind(this)\n\t\tthis.setPropsProcessing = this.setPropsProcessing.bind(this)\n\t\tthis.onFormChange = this.onFormChange.bind(this)\n\t\tthis.findFormErrors = this.findFormErrors.bind(this)\n\t}\n\n\tonFormChange(form){\n\t\tthis.setState({formData: form})\n\t}\n\n\tgetRegisteringContainer(){\n\t\treturn this.props.containerId;\n\t}\n\n\t_handleRegister(formData){\n\n\t\tformData.container = this.getRegisteringContainer();\n\t\tformData.gender = this.props.gender;\n\t\tformData.peopleType = 'com.katappult.people.Party/Person';\n\t\tformData.withAccount = true\n\n\t\tif(this.props.handleRegister){\n\t\t\tthis.props.handleRegister(formData)\n\t\t}\n\t\telse {\n\t\t\tthis.registerUser(formData)\n\t\t}\n\t}\n\n\tregisterUser(formData) {\n\t\tthis.setState({\n\t\t\tloading: true,\n\t\t\tformData: formData\n\t\t})\n\n\t\tthis.setPropsProcessing(true)\n\n\t\tif(this.props.fromConnectedUser){\n\t\t\taccountService.registerPersonWithAccount(formData).then(response => {\n\t\t\t\tthis.handleResponse(response, formData);\n\t\t\t\ttoast(commons.toastSuccess(\"Le compte utilisateur a été créé\"));\n\t\t\t}).catch(error => {\n\t\t\t\tthis.setState({\n\t\t\t\t\tloading: false,\n\t\t\t\t\terrors: ['Erreur interne']\n\t\t\t\t})\n\n\t\t\t\tthis.setPropsProcessing(false)\n\t\t\t});\n\t\t}\n\t\telse {\n\t\t\taccountService.registerPersonWithAccountAnon(formData).then(response => {\n\t\t\t\tthis.handleResponse(response, formData)\n\t\t\t}).catch(error => {\n\t\t\t\tthis.setState({loading: false})\n\t\t\t\tthis.setPropsProcessing(false)\n\t\t\t});\n\n\t\t}\n\t}\n\n\tsetPropsProcessing(value){\n\t\tif(this.props.onProcessing){\n\t\t\tthis.props.onProcessing(value)\n\t\t}\n\t}\n\n\t/**\n\t * Handle save response.\n\t */\n\tasync handleResponse(response, formData){\n\t\tlet errorStates = []\n\t\tif(commons.isRequestError(response)) {\n\t\t\tthis.props.onError(response.message)\n\t\t\tthis.setState({\n\t\t\t\tloading: false,\n\t\t\t\tformData: formData,\n\t\t\t\terrors: [response.message],\n\t\t\t})\n\t\t}\n\t\telse {\n\t\t\tif(!this.props.fromConnectedUser) {\n\t\t\t\tconst loginForm = {};\n\t\t\t\tloginForm.login = formData.accountEmail;\n\t\t\t\tloginForm.password = formData.accountPassword;\n\n\t\t\t\tconst response = await loginService.login(loginForm).then(response => {\n\t\t\t\t\treturn response;\n\t\t\t\t})\n\n\t\t\t\tconst authorization = await response.text();\n\t\t\t\tcommons.setSessionId(authorization)\n\t\t\t\tif(authorization) this.handleLoginSuccess(authorization);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.setPropsProcessing(false)\n\t\t\t\tif(this.props.onCreatePeopleSuccess){\n\t\t\t\t\tthis.props.onCreatePeopleSuccess()\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\thandleLoginSuccess(authorization){\n\t\tloginService.postLogin(authorization).then(json => {\n\t\t\tcommons.katappult_core_loginSuccess(json);\n\n\t\t\tconst account = JSON.parse(json.data.links.account)\n\t\t\tconst active = account.active;\n\t\t\tif(active) {\n\t\t\t\twindow.location.href = coreUri.clientSideRenderedURL('/');\n\t\t\t}\n\t\t\telse {\n\t\t\t\twindow.location.href = coreUri.clientSideRenderedURL('/activateAccount');\n\t\t\t}\n\t\t});\n\t}\n\n\tregisterAttributesList() {\n\t\tconst buttonTitle = this.props.createButtonTitle ?  this.props.createButtonTitle : 'Créer un compte'\n\t\tconst profileAttributesList = {\n\t\t\tsaveButtonTitle: buttonTitle,\n\t\t\tsaveButtonClassName: this.props.createButtonClassName,\n\t\t\tformValidity: (formData) => this.findFormErrors(formData)\t,\n\t\t\tonSubmit: (formData) => this._handleRegister(formData),\n\t\t\tattributes: [\n\t\t\t\t{name: 'Lastname', dataField: 'lastName', required: true, placeHolder: 'Last name'},\n\t\t\t\t{name: 'Firstname', dataField: 'firstName', required: true, placeHolder: 'First name'},\n\t\t\t\t{name: 'Email', dataField: 'accountEmail', type:'email', required: true, placeHolder: 'Email'},\n\t\t\t\t{name: 'Password', dataField: 'accountPassword', type:'password', required: true, placeHolder: 'Password'},\n\t\t\t]\n\t\t}\n\n\t\treturn profileAttributesList;\n\t}\n\n\tfindFormErrors(form) {\n\t\tconst {lastName, firstName, accountEmail, accountPassword} = form;\n\t\tconst newErrors = {}\n\n\t\tif (!lastName || lastName === '') newErrors.lastName = 'Champs invalide';\n\t\tif (!firstName || firstName === '') newErrors.firstName = 'Champs invalide';\n\t\tif (!accountEmail || accountEmail === '') newErrors.accountEmail = 'Champs invalide';\n\t\tif (!accountPassword || accountPassword === '') newErrors.accountPassword = 'Champs invalide';\n\n\t\tif (!commons.validateEmail(accountEmail)){\n\t\t\tnewErrors.accountEmail = 'Champs invalide';\n\t\t}\n\n\t\treturn newErrors;\n\t}\n\n\trender() {\n\t\tlet form = {...this.state.formData}\n\t\tif(this.props.initialData){\n\t\t\tform = {\n\t\t\t\tattributes :{\n\t\t\t\t\tlastName: this.props.initialData.lastName,\n\t\t\t\t\tfirstName: this.props.initialData.firstName,\n\t\t\t\t\taccountEmail: this.props.initialData.accountEmail,\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn <>\n\t\t\t{this.state.loading !== true &&  <AttributeListGroup\n\t\t\t\tattributesListConfig={this.registerAttributesList()}\n\t\t\t\tadditionalWizardLeftActions={this.props.additionalWizardLeftActions}\n\t\t\t\tdata={form}\n\t\t\t\tstandardFooterActions=\"true\"\n\t\t\t\tformMode='create_object'/>\n\t\t\t}\n\t\t</>\n\t}\n}\n\nexport default AddPerson;\n\n\nconst emptyString = (str) => {\n\treturn !str || str.trim().length === 0\n}\n","import {\n\t_doGet,\n\tbuildURLQuery,\n\tAPI_ROOT\n}\n\tfrom './utils/services.config';\n\n/**\n * Rev controlled\n */\nexport const searchService = {\n\tsearchUserByNameLikeInWholeApplication,\n\tsearchUserByLoginLikeInWholeApplication,\n\tsearchContainerMemberByNameLike,\n\tsearchContainerMemberByLoginLike,\n\tsearchContainerMemberByLoginLike2,\n\tsearchProductByNameLike,\n\tsearchProductByReferenceLike\n}\n/**\n * @param login\n * @returns\n */\nasync function searchProductByNameLike(name, containerId, params) {\n\tlet uri;\n\tif(params){\n\t\tlet p = buildURLQuery(params);\n\t\turi= '/v1/anon/api/products/search/byNameLike?'.concat(p + '&containerId=' + containerId);\n\t}\n\telse {\n\t\turi= '/v1/anon/api/products/search/byNameLike?name=' + name + '&containerId=' + containerId;\n\t}\n\n\tconst url = `${API_ROOT}` + uri;\n\treturn _doGet(url);\n}\n/**\n * @param login\n * @returnspr\n */\nasync function searchProductByReferenceLike(reference, containerId) {\n\tconst uri = '/v1/secured/api/product/byReferenceLike?reference=' + reference + '&containerId=' + containerId;\n\tconst url = `${API_ROOT}` + uri;\n\treturn _doGet(url);\n}\n/**\n * Get account by name like, will do search in whole application.\n * Should be called only when working container is /Unaffiliated.\n *\n * @param login\n * @returns\n */\nasync function searchUserByNameLikeInWholeApplication(name, containerId) {\n\tconst uri = '/v1/secured/api/account/byNameLike?name=' + name + '&containerId=' + containerId;\n\tconst url = `${API_ROOT}` + uri;\n\treturn _doGet(url);\n}\n/**\n * Get account by name like, will do search in whole application.\n * Should be called only when working container is /Unaffiliated.\n *\n * @param login\n * @returns\n */\nasync function searchUserByLoginLikeInWholeApplication(login, containerId) {\n\tconst uri = '/api/secured/v1/katappult/principals/accountByLogin?email=' + login + '&containerId=' + containerId;\n\tconst url = `${API_ROOT}` + uri;\n\treturn _doGet(url);\n}\n/**\n * Search given user in given container.\n * This function just query login not firstname/lastname because email\n * should be composed by person lastname/firstname.\n *\n * @returns\n */\nasync function searchContainerMemberByNameLike(name, containerId) {\n\tconst uri = '/api/secured/v1/katappult/principals/account/memberByLoginLikeInContainer/?name=' + name + '&containerId=' + containerId;\n\tconst url = `${API_ROOT}` + uri;\n\treturn _doGet(url);\n}\n/**\n * Search given user in given container.\n *\n * @returns\n */\nasync function searchContainerMemberByLoginLike(login, containerId) {\n\tconst uri = '/api/secured/v1/katappult/principals/account/memberByLoginLikeInContainer?login=' + login + '&containerId=' + containerId;\n\tconst url = `${API_ROOT}` + uri;\n\treturn _doGet(url);\n}\n\n/**\n * Search given user in given container.\n *\n * @returns\n */\nasync function searchContainerMemberByLoginLike2(queryParams, containerId) {\n\tlet p = buildURLQuery(queryParams);\n\tconst uri = '/api/secured/v1/katappult/principals/account/memberByLoginLike?'.concat(p + '&containerId=' + containerId);\n\tconst url = `${API_ROOT}` + uri;\n\treturn _doGet(url);\n}\n","import React, { Component } from 'react';\nimport {Input,} from 'reactstrap';\nimport {commons} from '_helpers/commons';\nimport { searchService } from '_services/search.services';\nimport { lifecycleService } from '_services/lifecycle.services';\nimport * as actions from '_actions/actions';\nimport { connect } from 'react-redux';\nimport { PeopleCard, DataTable, Wizard, AddPeople, PeopleDetails, EmptyPane } from '_components/_common';\nimport { HashRouter,  Link } from 'react-router-dom';\nimport Button from 'react-bootstrap/Button';\nimport { RiUserLine, RiRefreshLine, RiUser6Line } from \"react-icons/ri\";\nimport queryString from 'query-string';\nimport {coreUri} from '_helpers/CoreUri';\n\n\nconst mapStateToProps = store => ({\n\tsearchTerm: store.searchMembers.searchTerm,\n\tsearchBusinessClass: store.searchMembers.searchBusinessClass,\n\tsearchBusinessType: store.searchMembers.searchBusinessType,\n\tresults: store.searchMembers.searchResults,\n})\n\nconst mapDispatchToProps = (disptach) => ({\n\tupdateSearchTerm: (e) => disptach(actions.updateSearchMembersTerm(e)),\n\tupdateSearchResults: (e) => disptach(actions.updateSearchResults(e)),\n})\n\n/**\n * Container registered users\n */\nclass ManageContainerUsers extends Component {\n\n\tconstructor(props){\n\t\tsuper(props)\n\t\tthis.state ={\n\t\t\ttotalMembers: 0,\n\t\t\tmembers: [],\n\n\t\t\tloadingMembers: false,\n\t\t\tstatesFilter: [],\n\t\t\treachableStates:[],\n\n\t\t\tqueryFilters: {\n\t\t\t\tpage: 0,\n\t\t\t\tpageSize:20,\n\t\t\t\tincludeParentItems: false,\n\t\t\t\tlogin: '',\n\t\t\t\tstate: '',\n\t\t\t},\n\n\t\t\tviewMode: 'viewList'\n\t\t}\n\n\t\tthis.manageMembers = this.manageMembers.bind(this)\n\t\tthis.unsubscribe = this.unsubscribe.bind(this)\n\t\tthis.blockUser = this.blockUser.bind(this)\n\t\tthis.goToPage = this.goToPage.bind(this)\n\t\tthis.setLinkState = this.setLinkState.bind(this)\n\t\tthis.switchToView = this.switchToView.bind(this)\n\t\tthis.onPeopleDetailsChange = this.onPeopleDetailsChange.bind(this);\n\t\tthis.moreActions = this.moreActions.bind(this);\n\t\tthis.getRootObjectForDetailsId = this.getRootObjectForDetailsId.bind(this)\n\t\tthis.onCreatePeopleSuccess = this.onCreatePeopleSuccess.bind(this)\n\t}\n\n\tswitchToView(e, name){\n\t\tif(e) e.preventDefault()\n\t\tthis.setState({\n\t\t\tviewMode: name\n\t\t})\n\t}\n\n\tunsubscribe(userAccountId){\n\t\tlet newMembers = [];\n\t\tthis.state.members.map(m => {\n\t\t\tif(m.attributes.id !== userAccountId){\n\t\t\t\tnewMembers.push(m)\n\t\t\t}\n\t\t})\n\n\t\tthis.setState({\n\t\t\tmembers: newMembers\n\t\t})\n\t}\n\n\tblockUser(userAccountId){\n\t\tlet members = [...this.state.members],\n\t\t\tnewMembers = [];\n\t\tthis.state.members.map(m => {\n\t\t\tif(m.attributes.id !== userAccountId){\n\t\t\t\tnewMembers.push(m)\n\t\t\t}\n\t\t})\n\n\t\tthis.setState({members: newMembers})\n\t}\n\n\tnewPeople(wizardCloseFunction){\n\t\treturn <AddPeople\n\t\t\t{...this.props}\n\t\t\tpeopleMode={'b2bAndB2c'}\n\t\t\thideAgreements={true}\n\t\t\tfromConnectedUser={true}\n\t\t\tonCreatePeopleSuccess={(id) => this.onCreatePeopleSuccess(wizardCloseFunction, id)}/>\n\t}\n\n\tonCreatePeopleSuccess(wizardCloseFunction, id){\n\t\tthis.refreshView()\n\t\tif(wizardCloseFunction){\n\t\t\twizardCloseFunction();\n\t\t}\n\n\t\tthis.setState({\n\t\t\tselectedAccountId: id,\n\t\t\tshowSuccessAlert: true\n\t\t})\n\n\t}\n\n\tcomponentDidUpdate(prevProps, prevState){\n\t\tif(prevState.viewMode !== this.props.viewMode){\n\t\t\tthis.setState({viewMode: this.props.viewMode})\n\t\t}\n\t}\n\n\tgetRootObjectForDetailsId(currentItemIdParam){\n\t\tconst queryUrlParams = queryString.parse(this.props.location.search);\n\t\tlet objectforDetailsId = queryUrlParams.rootId;\n\t\treturn objectforDetailsId;\n\t}\n\n\trefreshView(){\n\t\tlet queryFilters = {...this.state.queryFilters};\n\t\tqueryFilters.login = '';\n\t\tthis.loadDatas(queryFilters)\n\t}\n\n\tmanageMembers(e){\n\t\te.preventDefault()\n\t}\n\n\tcomponentDidMount(){\n\t\tlet queryFilters = {...this.state.queryFilters}\n\t\tqueryFilters.state = 'REQUEST_IN_PROGRESS';\n\t\tthis.setState({\n\t\t\tqueryFilters: queryFilters,\n\t\t\tloadingMembers: true,\n\t\t})\n\n\t\tthis.loadDatas(queryFilters);\n\t}\n\n\tonPeopleDetailsChange(id, wasRemoved){\n\t\tlet queryFilters = {...this.state.queryFilters}\n\t\tif(wasRemoved === true){\n\t\t\tthis.setState({selectedAccountId: null});\n\t\t}\n\n\t\tthis.loadDatas(queryFilters);\n\t}\n\n\tshowDetailsView(){\n\t\treturn <div className=\"katappult-container\">\n\t\t\t<PeopleDetails\n\t\t\t\t{...this.props}\n\t\t\t\tpushBreadCrumb={this.props.pushBreadCrumb}\n\t\t\t\tupdatePeopleCallBack={(id, wasRemoved) => this.onPeopleDetailsChange(id, wasRemoved)}\n\t\t\t\taccountId={this.state.selectedAccountId} />\n\t\t</div>\n\t}\n\n\tloadDatas(queryFilters){\n\t\tthis.setState({loadingMembers: true, results: []})\n\t\tsearchService.searchContainerMemberByLoginLike2(queryFilters, this.props.containerId).then(response => {\n\t\t\tif(!commons.isRequestError(response)){\n\t\t\t\tthis.setState({\n\t\t\t\t\tresults: response.data,\n\t\t\t\t\tmetaData:response.metaData,\n\t\t\t\t\tloadingMembers: false,\n\t\t\t\t})\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.setState({\n\t\t\t\t\tresults: [],\n\t\t\t\t\tmetaData: null,\n\t\t\t\t\tloadingMembers: false,\n\t\t\t\t\treachableStates: []\n\t\t\t\t})\n\t\t\t}\n\t\t})\n\t}\n\tgoToPage(i){\n\t\tlet queryFilters = {...this.state.queryFilters}\n\t\tqueryFilters.page = i\n\n\t\tthis.setState({queryFilters: queryFilters})\n\t\tthis.loadDatas(queryFilters)\n\t}\n\n\tnameOf(res, item){\n\t\tlet owner = item.attributes.ownerSummary\n\t\tlet type = item.businessType.type\n\t\tif(type === 'person'){\n\t\t\treturn this.LinkToPeople(item.attributes, owner, \"person\")\n\t\t}\n\t\telse {\n\t\t\treturn this.LinkToPeople(item.attributes, owner, \"org\")\n\t\t}\n\t}\n\n\tmoreActions(val,item){\n\t\treturn <td className=\"td-left\">\n\t\t\t<div className=\"btn-toolbar\">\n\t\t\t\t<Button onClick={e=>this.selectPerson(e, val.id)}>\n\t\t\t\t\t<i className=\"fa fa-lg fa-eye\"></i>\n\t\t\t\t</Button>\n\t\t\t</div>\n\t\t</td>\n\t}\n\n\tlifecycleActions(v, i){\n\t\tlet actions = [], roleAid, roleBid,\n\t\t\tid = i.attributes.id;\n\n\t\troleAid = this.props.containerId;\n\t\troleBid = i.attributes.id;\n\t\tif(this.state.reachableStates.length > 0){\n\t\t\tthis.state.reachableStates.map(state => {\n\t\t\t\tif(state !== ''){\n\t\t\t\t\tactions.push(\n\t\t\t\t\t\t<div className=\"float-right\">\n\t\t\t\t\t\t\t<Button size=\"sm\" variant=\"outline-primary\"\n\t\t\t\t\t\t\t\t\tonClick={e =>this.setLinkState(roleAid, roleBid, state)}>{state}</Button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t)\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\n\t\treturn <td className=\"td-left\">\n\t\t\t{actions}\n\t\t</td>\n\t}\n\tsetLinkState(roleAid, roleBid, state){\n\t\tlet linkClass = 'com.katappult.core.api.composite.ContainerMembershipLink'\n\t\tthis.setState({\n\t\t\tloadingMembers: true\n\t\t})\n\n\t\tif(roleAid === undefined || roleBid === undefined ){\n\t\t\treturn;\n\t\t}\n\n\t\tlifecycleService\n\t\t\t.setLinkState(roleAid, roleBid, state, linkClass, this.props.containerId)\n\t\t\t.then(response => {\n\t\t\t\tlet queryFilters = {...this.state.queryFilters}\n\t\t\t\tthis.loadDatas(queryFilters)\n\t\t\t})\n\t}\n\tLinkToPeople(item, owner, type){\n\t\tlet route\n\t\tif(type !== \"org\"){\n\t\t\troute = <Link className=\"table-link\" onClick={e=>this.selectPerson(e, item.id)}>\n\t\t\t\t{owner}\n\t\t\t</Link>\n\t\t} else {\n\t\t\troute = <Link className=\"table-link\" onClick={e=>this.selectPerson(e, item.id)}>\n\t\t\t\t{owner}\n\t\t\t</Link>\n\t\t}\n\n\t\treturn (\n\t\t\t<td className=\"td-left\" width=\"30%\">\n\t\t\t\t<HashRouter >\n\t\t\t\t\t{route}\n\t\t\t\t</HashRouter>\n\t\t\t</td>\n\t\t)\n\t}\n\n\tselectPerson(e, id){\n\t\tif(e) e.preventDefault();\n\t\tconst url = coreUri.backOfficeViewURL(\"platform\", \"members\", [\"rootId=\" +  id]);\n\t\tthis.props.history.push(url);\n\t}\n\n\tmembersDatatable(){\n\t\tconst tableConfig = {\n\t\t\tcolumnsConfig: [\n\t\t\t\t{name:'Résumé', dataField: 'attributes', displayComponent: (v, i) => this.nameOf(v, i), headerClass: 'td-left'},\n\t\t\t\t{name:'Email', dataField: 'attributes.login', headerClass: 'td-left', className: 'td-left'},\n\t\t\t\t{name:'Mot de passe expire le', dataField: 'attributes.passwordExpirationDate', dateFormat: 'DD/MM/YYYY HH:mm', headerClass: 'td-left', className: 'td-left'},\n\t\t\t\t{name:'Modification', dataField: 'attributes.lastModifiedDate', dateFormat: 'DD/MM/YYYY', headerClass: 'td-left', className: 'td-left'},\n\t\t\t],\n\t\t}\n\n\t\treturn \t<DataTable tableClassName=\"data-table\"\n\t\t\t\t\t\t\t items={JSON.stringify(this.state.results)}\n\t\t\t\t\t\t\t metaData={JSON.stringify(this.state.metaData)}\n\t\t\t\t\t\t\t tableConfig={tableConfig}\n\t\t\t\t\t\t\t displayTotalElements={true}\n\t\t\t\t\t\t\t goToPage={this.goToPage}\n\t\t\t\t\t\t\t paginate={true}/>\n\t}\n\n\tsearchTermUpdated(e){\n\t\tlet queryFilters = {...this.state.queryFilters}\n\t\tqueryFilters.login = e.target.value\n\t\tthis.loadDatas(queryFilters)\n\t\tthis.setState({\n\t\t\tqueryFilters: queryFilters,\n\t\t\tloadingMembers: true,\n\t\t\tviewMode: 'viewList'\n\t\t})\n\t}\n\n\tsearchHeader(){\n\t\treturn <div className=\"admin-filters\">\n\t\t\t<Input type=\"text\"\n\t\t\t\t   className=\"admin-hover-input\"\n\t\t\t\t   name=\"search-email-2\"\n\t\t\t\t   placeholder=\"Email ou login\"\n\t\t\t\t   autoComplete=\"none\"\n\t\t\t\t//defaultValue={this.state.searchTerm}\n\t\t\t\t   onChange={(e) => this.searchTermUpdated(e)}/>\n\t\t</div>\n\t}\n\n\tupdateStates(e){\n\t\tlet queryFilters = {...this.state.queryFilters}\n\t\tqueryFilters.state = e.target.value\n\t\tthis.setState({\n\t\t\tqueryFilters: queryFilters,\n\t\t\tloadingMembers: true\n\t\t})\n\n\t\tthis.loadDatas(queryFilters)\n\t}\n\n\tgetStateFilterDisplay(){\n\t\tlet datas = []\n\t\tthis.state.statesFilter.map(m => {\n\t\t\tlet id = \"defaultCheck__\" + m;\n\t\t\tlet val = m.split(';')[0];\n\t\t\tlet key = m.split(';')[0]\n\t\t\tlet checked = this.state.queryFilters.state === key\n\t\t\tdatas.push(\n\t\t\t\t<div className=\"\">\n\t\t\t\t\t<input class=\"form-check-input\" checked={checked} type=\"radio\" value={key} id={id} onChange={e => this.updateStates(e)}/>\n\t\t\t\t\t<label class=\"form-check-label\" for={id}>\n\t\t\t\t\t\t{val}\n\t\t\t\t\t</label>\n\t\t\t\t</div>\n\t\t\t)\n\t\t})\n\t\treturn <div className=\"mx-4\">{datas}</div>\n\t}\n\n\trender() {\n\n\t\tlet rootObjectForDetailsId = this.getRootObjectForDetailsId()\n\t\tif(!rootObjectForDetailsId){\n\t\t\tlet datatable,\n\t\t\t\ttotal = this.state.metaData !== null && this.state.metaData !== undefined ? this.state.metaData.totalElements : 0;\n\n\t\t\tif(this.state.loadingMembers){\n\t\t\t\tdatatable = <> </>\n\t\t\t}\n\t\t\telse if(total > 0){\n\t\t\t\tdatatable = this.membersDatatable();\n\t\t\t}\n\t\t\telse {\n\t\t\t\tdatatable = <EmptyPane hideMainMessage={true}\n\t\t\t\t\t\t\t\t\t   secondaryMessage='Pas de membres' />\n\t\t\t}\n\n\t\t\tlet buttonIconComp = <RiUserLine size=\"1.2em\"/>\n\t\t\tlet headerActions = <>\n\t\t\t\t<Wizard buttonColor=\"secondary\"\n\t\t\t\t\t\tbuttonIconComp={buttonIconComp}\n\t\t\t\t\t\tdialogTitle=\"Nouveau membre\"\n\t\t\t\t\t\tbuttonTitle=\"Nouveau membre\"\n\t\t\t\t\t\thideFooter={true}\n\t\t\t\t\t\tdialogSize=\"md\"\n\t\t\t\t\t\tdialogContentProvider={(wizardCloseFunction)=>this.newPeople(wizardCloseFunction)}/>\n\t\t\t\t<Button className=\"\" size=\"sm\"\n\t\t\t\t\t\tvariant=\"link\"\n\t\t\t\t\t\tonClick={e=>this.refreshView()}>\n\t\t\t\t\t<RiRefreshLine size=\"1.2em\"/>\n\t\t\t\t\t&nbsp;Recharger\n\t\t\t\t</Button>\n\t\t\t</>\n\n\t\t\treturn <div className=\"portlet-box\">\n\t\t\t\t<div className=\"admin-filters-root\">\n\t\t\t\t\t{this.searchHeader()}\n\t\t\t\t\t<div className=\"btn-toolbar footer-btn-toolbar btn-toolbar-right\">{headerActions}</div>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"portlet-content\">{datatable}</div>\n\t\t\t</div>\n\t\t}\n\n\t\treturn this.showDetailsView();\n\t}\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps) (ManageContainerUsers);\n\n\nclass SearchMembersResult extends Component {\n\tconstructor(props){\n\t\tsuper(props)\n\t\tthis.orgDetailsLink = this.orgDetailsLink.bind(this)\n\t\tthis.personDetailsLink = this.personDetailsLink.bind(this)\n\t}\n\n\tsearchMembersResult(results){\n\t\tif(results && results.length > 0){\n\t\t\treturn this.populateResult(results);\n\t\t}\n\t}\n\n\torgDetailsLink(people, owner){\n\t\treturn LinkToOrg(people, owner)\n\t}\n\n\tpersonDetailsLink(people, owner){\n\t\treturn LinkToOrg(people, owner)\n\t}\n\n\tpopulateResult(results){\n\t\tlet views = []\n\t\tresults.map(res => {\n\t\t\tlet owner = res.links.owner\n\t\t\tviews.push(\n\t\t\t\t<PeopleCard\n\t\t\t\t\tunsubscribe={e => this.props.unsubscribe(e)}\n\t\t\t\t\tblockUser={e => this.props.blockUser(e)}\n\t\t\t\t\tpeopleType={res.businessType}\n\t\t\t\t\tpeople={res.links.owner}\n\t\t\t\t\taccount={res.attributes}\n\t\t\t\t\torgDetailsLink={e => this.orgDetailsLink(res.attributes, owner)}\n\t\t\t\t\tpersonDetailsLink={e => this.personDetailsLink(res.attributes, owner)}\n\t\t\t\t/>\n\t\t\t)\n\t\t})\n\n\t\treturn <div>\n\t\t\t{views}\n\t\t</div>\n\t}\n\trender(){\n\t\treturn this.searchMembersResult(this.props.results);\n\t}\n}\n\nconst LinkToPerson2 = (item, owner) => {\n\tconst link = `/admin/home/users/${item.id}`\n\treturn (\n\t\t<td className=\"td-left\" width=\"50%\">\n\t\t\t<div className=\"half-opacity\">\n\t\t\t\t{item.login}\n\t\t\t</div>\n\n\t\t\t<p align=\"left\">\n\t\t\t\t<HashRouter >\n\t\t\t\t\t<Link to={link} className=\"btn-square\">{owner.firstName} {owner.lastName}</Link>\n\t\t\t\t</HashRouter>\n\t\t\t</p>\n\t\t</td>\n\t)\n}\nconst LinkToOrg = (item, owner) => {\n\tconst link = `/admin/home/users/${item.id}`\n\treturn (\n\t\t<td className=\"td-left\" width=\"50%\">\n\t\t\t<div className=\"half-opacity\">\n\t\t\t\t{item.login}\n\t\t\t</div>\n\t\t\t<p align=\"left\">\n\t\t\t\t<HashRouter >\n\t\t\t\t\t<Link to={link} className=\"btn-square\">{owner.name}</Link>\n\t\t\t\t</HashRouter>\n\t\t\t</p>\n\t\t</td>\n\t)\n}\n\nconst enIcon = (val) => {\n\tif(val) return <td  className=\"td-left\">\n\t\t<RiUser6Line color=\"#EEEE\" size=\"1.3em\"/></td>\n\treturn <td></td>\n}\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { containerService } from '_services/container.services.js';\nimport { accountService } from '_services/account.services.js';\nimport { DataTable, EmptyPane} from '_components/_common';\nimport { commons } from '_helpers/commons.js';\nimport {Link} from \"react-router-dom\";\n\nconst mapStateToProps = store => ({\n\n})\n\nconst mapDispatchToProps = (disptach) => ({\n\n})\n\nclass ContainersMembership extends Component {\n\n\tconstructor(props){\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\titems: [],\n\t\t\tmetaData: '',\n\t\t\taccountId: this.props.accountId ? this.props.accountId : this.props.match.params.accountId,\n\t\t\tneedUpdate: false,\n\t\t\tmembershipStates:{}\n\t\t}\n\n\t\tthis.switchToParent = this.switchToParent.bind(this)\n\t\tthis.emptyTableActions = this.emptyTableActions.bind(this)\n\t\tthis.join = this.join.bind(this)\n\t}\n\n\tjoin(val){\n\t\tlet containerId = val.id\n\t\tlet isMember = this.state.membershipStates[val.name]\n\n\t\t//can not leave or join root and unaffiliated containers\n\t\tlet isUnleavable = val.path === '/Application' ||\n\t\t\tval.path === '/Application/Unaffiliated' ||\n\t\t\tval.path === '/'\n\n\t\tif(isUnleavable){\n\t\t\treturn (<td></td>)\n\t\t}\n\t\telse {\n\t\t\treturn (\n\t\t\t\t<td className=\"dt-center\">\n\t\t\t\t\t<div className=\"btn-toolbar-right\" style={{marginTop:'-0.3rem'}}>\n\t\t\t\t\t\t<button hidden={isMember}  onClick={() => this.addMemberToContainer(containerId, val.name)}>AJOUTER</button>\n\t\t\t\t\t\t<button hidden={!isMember} onClick={() => this.removeMemberFromContainer(containerId, val.name)}>SUPPRIMER</button>\n\t\t\t\t\t</div>\n\t\t\t\t</td>\n\t\t\t)\n\t\t}\n\t}\n\ttoChild(val){\n\t\tlet containerId = val.id\n\t\treturn <td className=\"dt-center\" width={'5%'}>\n\t\t\t<div className={'btn-toolbar'} style={{paddingTop:'1rem'}}>\n\t\t\t\t<Link  size=\"md\" color=\"light\" onClick={e => this.switchTo(e, containerId)}>\n\t\t\t\t\t<i className={'fa fa-chevron-right fa-lg'}></i>\n\t\t\t\t</Link>\n\t\t\t</div>\n\t\t</td>\n\t}\n\n\tremoveMemberFromContainer(containerId, containerName){\n\t\tlet accountId = this.state.accountId\n\t\tlet {membershipStates} = this.state\n\n\t\taccountService.removeContainerMembership(accountId, containerId).then(() => {\n\t\t\tmembershipStates[containerName] = false\n\t\t\tthis.setState({\n\t\t\t\tmembershipStates: membershipStates\n\t\t\t})\n\t\t})\n\t}\n\n\taddMemberToContainer(containerId, containerName){\n\t\tlet accountId = this.state.accountId\n\t\tlet {membershipStates} = this.state\n\n\t\taccountService.addContainerMembership(accountId, containerId).then(response => {\n\t\t\tmembershipStates[containerName] = true\n\t\t\tthis.setState({\n\t\t\t\tneedUpdate: true,\n\t\t\t\tmembershipStates: membershipStates\n\t\t\t})\n\t\t})\n\t}\n\n\tswitchTo(e, container) {\n\t\tif(e) e.preventDefault()\n\t\tthis.loadDatas(container)\n\t}\n\n\tswitchToParent(e){\n\t\tif(e) e.preventDefault()\n\t\tlet containerId = this.state.currentContainerId,\n\t\t\trootContainerId = commons.getRootContainerId(this.props.userContext)\n\n\t\tif(rootContainerId !== containerId){\n\t\t\tcontainerService.getParentContainer(containerId).then(json => {\n\t        \tlet parentId = json.data.attributes.id\n\t        \tthis.loadDatas(parentId)\n\t        })\n\t\t}\n\t}\n\n\temptyTableActions(){\n\t\treturn (\n\t\t\t<div className=\"btn-toolbar\">\n\t\t\t\t<button onClick={e => this.switchToParent(e)}>Parent</button>\n\t\t\t</div>\n\t\t)\n\t}\n\n\tcomponentDidMount(){\n\t\tthis.loadDatas(this.props.containerId)\n\t}\n\n\tasync loadDatas(parentContainerId){\n\t\tcontainerService.getChildrenContainers(parentContainerId).then(json => {\n        \tthis.setState({\n        \t\tcurrentContainerId: parentContainerId,\n        \t\titems: json.data,\n        \t\tmetaData: json.metaData,\n        \t})\n        \treturn json\n        })\n        .then(json => {\n        \tjson.data.map(item => {\n\t\t\t\tlet containerId = item.attributes.id;\n\t\t\t\taccountService.isUserInContainer(this.state.accountId, containerId).then(response => {\n\t\t\t\t\tlet membershipStates = {...this.state.membershipStates}\n\t\t\t\t\tif(response && response.metaData && response.metaData.isMember === true){\n\t\t\t\t\t\tmembershipStates[item.attributes.name] = true\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tmembershipStates[item.attributes.name] = false\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.setState({\n\t\t        \t\tmembershipStates: membershipStates\n\t\t        \t})\n\t\t\t\t})\n\t\t\t})\n        })\n\t}\n\n\tnameOf(v,i){\n\t\treturn <>\n\t\t\t<div className={'table-list-admin-root-list-div'}>\n\t\t\t\t<div className={'table-link'}>{v.name}</div>\n\t\t\t\t<div className=\"half-opacity\"><span>{v.path}</span></div>\n\t\t\t</div>\n\t\t</>\n\t}\n\n\trender() {\n\t\tconst {items } = this.state;\n\t\tconst metaData = this.state.metaData;\n\n\t\tconst tableConfig = {\n\t\t\thideTableHeader:\"true\",\n\t\t\tcolumnsConfig: [\n\t\t\t    { dataField: 'attributes', displayComponent: (v,i) => this.nameOf(v,i)},\n\t\t\t    { displayComponent: (v) => this.join(v), dataField: 'attributes' },\n\t\t\t    { displayComponent: (v) => this.toChild(v), dataField: 'attributes' },\n\t\t\t],\n\t\t}\n\n\t\tlet isRootContainer = this.state.currentContainerId === null || this.state.currentContainerId === ''\n\t\t\t|| this.state.currentContainerId === commons.getRootContainerId(this.props.userContext)\n\n\n\t\tlet content\n\t\tif(items && items.length > 0){\n\t\t\tcontent = <div className={'table-list-admin-root-list'}>\n\t\t\t\t\t<DataTable\n\t\t\t\t\t\titems={JSON.stringify(items)}\n\t\t\t\t\t\tmetaData={JSON.stringify(metaData)}\n\t\t\t\t\t\ttableConfig={tableConfig}\n\t\t\t\t\t\tpaginate=\"false\"/>\n\t\t\t</div>\n\t\t}\n\t\telse {\n\t\t\tcontent = <EmptyPane  secondaryMessage='No containers' />\n\t\t}\n\n\t\tif(items){\n\t        return (<>\n\t            \t<div className=\"footer-btn-toolbar header-btn-toolbar btn-toolbar\">\n\t            \t\t<button  onClick={e => this.switchToParent(e)} disabled={isRootContainer}>\n\t            \t\t\t<i className=\"fa fa-chevron-left\"></i> PARENT\n\t            \t\t</button>\n\t            \t</div>\n            \t\t{content}\n\t        </>)\n\t\t}\n\t\treturn <></>\n\t}\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps) (ContainersMembership)\n","import { _doGet,_doPost,_doPut, _doDelete, buildURLQuery, API_ROOT } from './utils/services.config';\n\nexport const roleService = {\n\tgetUserRoles,\n\taddRoleToUser,\n\tremoveRoleToUser,\n\tsearchRoleByNameLike\n}\n\nasync function searchRoleByNameLike(searchTerm, userAccountId, containerId){\n\tconst uri = '/api/secured/v1/katappult/roles/searchRoleByNameLike?searchTerm=' + searchTerm + '&userAccountId=' + userAccountId\n\t\t + '&containerId=' + containerId;\n\tconst url = `${API_ROOT}` + uri;\n    return _doGet(url);\n}\n\nasync function removeRoleToUser(userAccountId, roleId, containerId){\n\tconst uri = '/api/secured/v1/katappult/roles/byAccount?containerId=' + containerId + '&roleId=' + roleId + '&userAccountId=' + userAccountId;\n\tconst url = `${API_ROOT}` + uri;\n    return _doDelete(url);\n}\n\nasync function getUserRoles(userAccountId, containerId){\n\tconst uri = '/api/secured/v1/katappult/roles/byAccount?containerId=' + containerId  + '&userAccountId=' + userAccountId;\n\tconst url = `${API_ROOT}` + uri;\n    return _doGet(url);\n}\n\nasync function addRoleToUser(userAccountId, roleId, containerId){\n\tconst uri = '/api/secured/v1/katappult/roles/byAccount/?containerId=' + containerId + '&roleId=' + roleId + '&userAccountId=' + userAccountId;\n\tconst url = `${API_ROOT}` + uri;\n    return _doPut(url);\n}\n","import React, { Component } from 'react';\nimport { EmptyPane, Wizard, WaitingPane} from '_components/_common';\nimport {Button,} from 'reactstrap';\nimport { commons } from '_helpers/commons';\nimport {roleService} from '_services/role.services';\nimport { RiCloseLine, RiAddLine } from \"react-icons/ri\";\nimport Spinner from 'react-bootstrap/Spinner'\nimport queryString from 'query-string';\n\nclass UserRoles extends Component {\n\n\tconstructor(props){\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tloading: false\n\t\t}\n\n\t\tthis.getCreatePage = this.getCreatePage.bind(this);\n\t\tthis.removeFromRole = this.removeFromRole.bind(this);\n\t\tthis.onCreateItemSuccess = this.onCreateItemSuccess.bind(this);\n\t\tthis.getRootObjectForDetailsId = this.getRootObjectForDetailsId.bind(this);\n\t}\n\n\tcomponentDidMount(){\n\t\tthis.loadRoles();\n\t}\n\n\tcomponentDidUpdate(prevprops, prevstate){\n\t\tconst prevQueryUrlParams = queryString.parse(prevprops.location.search);\n\t\tconst queryUrlParams = queryString.parse(this.props.location.search);\n\t\tlet rootId = queryUrlParams.rootId;\n\t\tlet prevId = prevQueryUrlParams.rootId;\n\t\tif(prevId !== rootId && prevId){\n\t\t\tthis.loadRoles();\n\t\t}\n\t}\n\n\tgetRootObjectForDetailsId(){\n\t\tconst queryUrlParams = queryString.parse(this.props.location.search);\n\t\tlet objectforDetailsId = queryUrlParams.rootId;\n\t\treturn objectforDetailsId\n\t}\n\n\tloadRoles(){\n\t\tthis.setState({loading: true})\n\n\t\tlet id = this.getRootObjectForDetailsId();\n\t\tif(id){\n\t\t\troleService\n\t\t\t.getUserRoles(id, this.props.containerId)\n\t\t\t.then(response =>{\n\t\t\t\tthis.setState({\n\t\t\t\t\troles: response.data,\n\t\t\t\t\tloading: false\n\t\t\t\t})\n\t\t\t})\n\t\t}\n\n\t}\n\n\tonCreateItemSuccess(){\n\t\tthis.loadRoles()\n\t}\n\n\tgetCreatePage(wizardCloseFunction){\n\t\treturn <AddRole\n\t\t\t\t\t{...this.props}\n\t\t\t\t\taccountId={this.getRootObjectForDetailsId()}\n\t\t\t\t\tcontainerId={this.props.containerId}\n\t\t\t\t\tonCreateItemSuccess={() => this.onCreateItemSuccess(wizardCloseFunction)}\n\t\t\t\t\twizardMode={true}/>\n\t}\n\n\theaderActions(){\n\t\treturn <div className={'footer-btn-toolbar header-btn-toolbar btn-toolbar'}>\n\t\t\t\t<Wizard buttonColor=\"secondary\"\n\t\t\t\t\t\tdialogSize=\"md\"\n\t\t\t\t\t\tbuttonIcon=\"fa fa-sm fa-plus\"\n\t\t\t\t\t\thideFooter={true}\n\t\t\t\t\t\tbuttonTitle='ADD TO ROLE'\n\t\t\t\t\t\tdialogTitle=\"Add user to role\"\n\t\t\t\t\t\tdialogContentProvider={(wizardCloseFunction)=>this.getCreatePage(wizardCloseFunction)}/>\n\t\t</div>\n\t}\n\n\tremoveFromRole(roleId){\n\t\tthis.setState({loading: true})\n\n\t\troleService\n\t\t.removeRoleToUser(this.getRootObjectForDetailsId(), roleId, this.props.containerId)\n\t\t.then(() => {\n\t\t\tthis.loadRoles()\n\t\t})\n\t}\n\n\trender(){\n\t\tlet roles = this.state.roles;\n\t\tlet content, header = this.headerActions();\n\t\tlet rolesDisplay = [];\n\n\t\tif(roles && roles.length > 0){\n\t\t\troles.map(c => {\n\t\t\t\trolesDisplay.push(<>\n\t\t\t\t\t<div className=\"user-role\">\n\t\t\t\t\t\t<div className=\"role-name\">{c.attributes.name}</div>\n\t\t\t\t\t\t<div className=\"role-action\">\n\t\t\t\t\t\t\t{c.attributes.key !== 'superadmin' &&\n\t\t\t\t\t\t\t\t<Button color=\"white\" onClick={e=>this.removeFromRole(c.attributes.id)}>\n\t\t\t\t\t\t\t\t\t<RiCloseLine size=\"2em\" color=\"red\"/></Button>\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t{c.attributes.key === 'superadmin' &&\n\t\t\t\t\t\t\t\t<Button color=\"white\"><RiCloseLine size=\"2em\" color=\"white\"/></Button>\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</>)\n\t\t\t})\n\n\t\t\tcontent = <div className=\"all-roles\">\n\t\t\t\t{rolesDisplay}\n\t\t\t</div>\n\t\t}\n\t\telse {\n\t\t\tcontent = <EmptyPane />\n\t\t}\n\n\t\treturn <>\n\t\t\t{header}\n\t\t\t{this.state.loading &&\n\t\t\t\t<WaitingPane />\n\t\t\t}\n\t\t\t{!this.state.loading &&content}\n\t\t</>\n\t}\n}\n\nexport default UserRoles;\n\nclass AddRole extends Component {\n\n\tconstructor(props){\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tsearching:false,\n\t\t\tsearchResult:[],\n\t\t\tsearchTerm: ''\n\t\t}\n\n\t\tthis.searchRole = this.searchRole.bind(this)\n\t}\n\n\tgetDatas(datas, isSuperAdmin){\n\t\tlet result = [];\n\n\t\tif(!isSuperAdmin){\n\t\t\tdatas.map(data => {\n\t\t\t\tif(data.attributes.key !== 'ROLE_SUPERADMIN'){\n\t\t\t\t\tresult.push(data)\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\t\telse {\n\t\t\tdatas.map(data => {\n\t\t\t\tresult.push(data)\n\t\t\t})\n\t\t}\n\n\t\treturn result\n\t}\n\n\tcomponentDidMount(){\n\n\t\tthis.setState({searching: true})\n\n\t\troleService\n\t\t.searchRoleByNameLike('', this.props.accountId, this.props.containerId)\n\t\t.then(response => {\n\t\t\tif(response && response.data){\n\n\t\t\t\t// remove superadmin role if current user is\n\t\t\t\t// not superadmin and container is not application\n\t\t\t\t// container.\n\t\t\t\tlet isSuperAdmin = commons.hasRoleSuperAdmin(this.props.userContext);\n\t\t\t\tthis.setState({\n\t\t\t\t\tsearchResult: this.getDatas(response.data, isSuperAdmin),\n\t\t\t\t\tsearchTerm: '',\n\t\t\t\t\tsearching: false\n\t\t\t\t})\n\t\t\t}\n\t\t\telse{\n\t\t\t\tthis.setState({\n\t\t\t\t\tsearchResult: [],\n\t\t\t\t\tsearchTerm: '',\n\t\t\t\t\tsearching: false\n\t\t\t\t})\n\t\t\t}\n\t\t})\n\t\t.catch(error=> {\n\t\t\tthis.setState({searching: false})\n\t\t})\n\t}\n\n\tasync  searchRole(e){\n\t\tlet searchTerm = e.target.value;\n\t\tthis._doSearchRole(searchTerm);\n\t}\n\n\tasync  _doSearchRole(searchTerm){\n\t\tif(searchTerm){\n\n\t\t\tthis.setState({searching: true})\n\n\t\t\troleService\n\t\t\t.searchRoleByNameLike(searchTerm, '', this.props.containerId)\n\t\t\t.then(response => {\n\t\t\t\tif(response && response.data){\n\t\t\t\t\tthis.setState({\n\t\t\t\t\t\tsearchResult: response.data,\n\t\t\t\t\t\tsearchTerm: searchTerm,\n\t\t\t\t\t\tsearching: false\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\tthis.setState({\n\t\t\t\t\t\tsearchResult: [],\n\t\t\t\t\t\tsearchTerm: searchTerm,\n\t\t\t\t\t\tsearching: false\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\t\telse {\n\t\t\tthis.setState({\n\t\t\t\tsearchResult: [],\n\t\t\t\tsearchTerm: ''\n\t\t\t})\n\t\t}\n\t}\n\n\tasync addUserToRole(roleId){\n\t\tthis.setState({searching: true})\n\n\t\troleService\n\t\t.addRoleToUser(this.props.accountId, roleId, this.props.containerId)\n\t\t.then(response => {\n\t\t\tthis.setState({searching: false})\n\t\t\tif(this.props.onCreateItemSuccess){\n\t\t\t\tthis.props.onCreateItemSuccess();\n\t\t\t}\n\t\t\tthis.componentDidMount()\n\t\t})\n\t}\n\n\tgetRows(){\n\t\tlet display = [];\n\t\tthis.state.searchResult.map(c => {\n\n\t\t\tdisplay.push(<div className=\"user-role\">\n\t\t\t\t<div className=\"role-name\">{c.attributes.name}</div>\n\t\t\t\t<div className=\"role-action\">\n\t\t\t\t\t<Button color=\"white\" onClick={e=>this.addUserToRole(c.attributes.id)}>\n\t\t\t\t\t\t<RiAddLine size=\"2em\" color=\"red\"/>\n\t\t\t\t\t</Button>\n\t\t\t\t</div>\n\t\t\t</div>)\n\t\t})\n\t\treturn display;\n\t}\n\n\trender(){\n\n\t\treturn <>\n\t\t\t{this.state.searching && <>\n\t\t\t\t\t\t<Spinner animation=\"border\" variant=\"secondary\" />\n\t\t\t\t</>\n\t\t\t}\n\n\t\t\t{!this.state.searching && this.state.searchResult.length < 1 &&\n\t\t\t\t\t<EmptyPane mainMessage=\"No roles found\" />\n\t\t\t}\n\n\t\t\t{!this.state.searching && this.state.searchResult.length > 0 &&\n\t\t\t\tthis.getRows()\n\t\t\t}\n\t\t</>\n\t}\n}\n","import React, { Component } from 'react';\nimport { ButtonToolbar,} from 'reactstrap';\nimport {\n\tAttributeListGroup,\n\tContactable,\n\tResetPassword,\n\tUpdatePassword,\n\tLockUser,\n\tUnLockUser,\n\tDataTable,\n\tUserSystemSettings,\n\tWaitingPane,\n\tAccordion\n} from '_components/_common';\nimport { connect } from 'react-redux';\nimport { accountService } from '_services/account.services';\nimport { toast } from 'react-toastify';\nimport { commons } from '_helpers/commons';\nimport ContainersMembership  from 'pages/AdminPages/Container/ContainersMembership.js'\nimport UserRoles from '../UserRoles/UserRoles.js';\nimport Tabs from 'react-bootstrap/Tabs'\nimport Tab from 'react-bootstrap/Tab'\nimport queryString from 'query-string';\nimport profile from 'assets/img/profile.png'\n\nconst mapStateToProps = store => ({\n})\n\nclass PeopleDetails extends Component {\n\n\tconstructor(props){\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\titem: {},\n\t\t\taccountId: props.accountId ? props.accountId :\n\t\t\t\tthis.props.match ? this.props.match.params.accountId : null,\n\t\t\tloadDataError: false,\n            summaryMode: 'view',\n\t\t\tactiveTab: '1',\n\t\t\tuserProfile: null,\n\t\t\tuserAccount: null,\n\t\t\tloading: false\n        }\n\n        this.toggle = this.toggle.bind(this);\n        this.overviewTabContent = this.overviewTabContent.bind(this);\n        this.accountAttributesList = this.accountAttributesList.bind(this);\n\t\tthis.contactTabContent = this.contactTabContent.bind(this);\n\t\tthis.updateProfile = this.updateProfile.bind(this);\n\t\tthis.updateOrgProfile = this.updateOrgProfile.bind(this);\n\t\tthis.isLocked = this.isLocked.bind(this);\n\t\tthis.refresh = this.refresh.bind(this);\n\t\tthis.isCurrentAccountOwner = this.isCurrentAccountOwner.bind(this);\n\t\tthis.organizationAttributesView = this.organizationAttributesView.bind(this);\n\t\tthis.overviewTabContent = this.overviewTabContent.bind(this);\n\t\tthis.getRootObjectForDetailsId = this.getRootObjectForDetailsId.bind(this);\n\t\tthis.accountRoles = this.accountRoles.bind(this);\n\t\tthis.accountSystemPrefsContent = this.accountSystemPrefsContent.bind(this)\n\t}\n\n\tgetRootObjectForDetailsId(){\n\t\tconst queryUrlParams = queryString.parse(this.props.location.search);\n\t\tlet objectforDetailsId = queryUrlParams.rootId;\n\t\treturn objectforDetailsId\n\t}\n\n\tisLocked(){\n\t\tif(this.state.userAccount.locked) return true;\n\t\treturn false\n\t}\n\n\tupdateProfile(formData) {\n\t\tlet id = formData.id\n\t\taccountService.updatePersonProfile(id, formData, this.props.containerId).then(response => {\n\t\t\tthis.updateProfileSuccess()\n\t\t})\n\t\t.catch(error => {\n\t\t\tthis.toggle();\n\t\t\ttoast.error('Error updating profile!')\n\t\t\tconsole.error(error)\n\t\t});\n\t}\n\n\tupdateProfileSuccess(){\n\t\tlet accountId = this.getRootObjectForDetailsId();\n\t\taccountService.accountDetails(accountId, this.props.containerId).then(response => {\n\t\t\tif(this.props.updatePeopleCallBack){\n\t\t\t\tthis.props.updatePeopleCallBack(accountId, false)\n\t\t\t}\n\n\t\t\tthis.setState({\n\t\t\t\tloadDataError: false,\n\t\t\t\tuserProfile:  response.data.attributes,\n\t\t\t});\n\t\t})\n\t}\n\n    toggle(tab) {\n        if (this.state.activeTab !== tab) {\n            this.setState({\n                activeTab: tab\n            });\n        }\n    }\n    /**\n     * Tab pane configuration\n     */\n    tabsConfigs(){\n        const tabsConfig = {\n            tabItems: [\n                {id: '1', title: 'Utilisateur', tabContent: () => this.overviewTabContent(), visible: () => true},\n                {id: '2', title: 'Accès', tabContent: () => this.containerAccessTabContent(), visible: () => this.containerAccessTabContentVisible()},\n                {id: '3', title: 'Compte', tabContent: () => this.accountTabContent(), visible: () => this.containerAccessTabContentVisible()},\n                {id: '4', title: 'Paramètres', tabContent: () => this.accountSystemPrefsContent(), visible: () => this.containerAccessTabContentVisible()},\n                {id: '5', title: 'Roles', tabContent: () => this.accountRoles(), visible: () => this.containerAccessTabContentVisible()},\n            ],\n        }\n\n        if(this.props.customTabItems){\n        \tthis.props.customTabItems.map(tab => {\n        \t\ttabsConfig.tabItems.push(tab)\n        \t})\n        }\n\n        return tabsConfig;\n    }\n    accountRoles(){\n    \treturn <UserRoles {...this.props}/>\n    }\n    accountSystemPrefsContent(){\n    \treturn <UserSystemSettings {...this.props}/>\n    }\n\n    containerAccessTabContentVisible(){\n    \treturn commons.hasRoleAdmin(this.props.userContext) || commons.hasRoleSuperAdmin(this.props.userContext);\n    }\n\n    isCurrentAccountOwner(){\n    \tlet owner = this.state. isCurrentAccountOwner || commons.hasRoleAdmin(this.props.userContext);\n    \treturn owner;\n    }\n\n\tnameOf(container){\n\t\treturn <td width=\"60%\">\n\t\t\t\t<h5 className=\"katappult-link\">{container.name}</h5>\n\t\t\t\t<span><i>{container.description}</i></span>\n\t\t</td>\n\t}\n\n    containerAccessTabContent(){\n    \tlet xaccessTableConfig = {\n\t\t\tcolumnsConfig: [\n\t\t\t\t{ displayComponent: (v) => this.nameOf(v), dataField: 'attributes' },\n\t\t\t],\n        }\n\n    \tif(commons.hasRoleAdmin(this.props.userContext) || commons.hasRoleSuperAdmin(this.props.userContext)){\n    \t\treturn <ContainersMembership\n\t\t\t\t\t\t\t{...this.props}\n\t\t\t\t\t\t\taccountId={this.getRootObjectForDetailsId()} />\n    \t}\n    \telse {\n    \t\tif(this.state.containerMembership &&\n    \t\t\t\tthis.state.containerMembership.length > 0){\n    \t\t\treturn <DataTable items={JSON.stringify(this.state.containerMembership)}\n\t\t\t\t         \t\tmetaData={JSON.stringify(this.state.containerMembershipMetaData)}\n\t\t\t\t             \ttableConfig={xaccessTableConfig}\n\t\t\t\t            \tpaginate=\"false\"/>\n\n    \t\t}\n    \t\treturn <></>\n    \t}\n    }\n\n    contactTabContent(){\n    \tlet canEdit = this.isCurrentAccountOwner()\n        return <div>\n               { this.state.loading !==true && <Contactable\n\t\t\t\t   containerId={this.props.containerId}\n                \tcontactNavigation={true}\n                \tdisplayHeader={true}\n                \tbusinessId={this.state.userProfile.id}\n            \t\tcanEdit={canEdit}/>\n              }\n            </div>\n\t}\n\n    peopleProfileAttributesList(){\n        const peopleProfileAttributesList = {\n\t\t\tonSubmit: (formData) => this.updateProfile(formData),\n            attributes: [\n                //{name: 'Gender', dataField: 'gender', type: 'select', editor:'select', enumProvider: ()=>genderProvider()},\n                {name: 'Lastname', dataField: 'lastName', type: 'text'},\n\t\t\t\t{name: 'Firstname', dataField: 'firstName', type: 'text'},\n                //{name: 'Middlename', dataField: 'middleName', type: 'text'},\n                //{name: 'Birth place', dataField: 'birthPlace', type: 'text'},\n                //{name: 'Birth date', dataField: 'birthDate', type:'date', dateFormat: 'DD/MM/YYYY'},\n            ]\n        };\n        return peopleProfileAttributesList;\n    }\n   peopleAttributesView(){\n\t   let canEdit = this.isCurrentAccountOwner();\n\t   return <AttributeListGroup\n\t\tattributesListConfig={this.peopleProfileAttributesList()}\n\t\tdata={this.state.userProfile}\n\t\tcanEdit={canEdit}\n\t\tstandardFooterActions=\"true\"\n\t\tdisplayHeader={true}/>\n   }\n\n   organizationProfileAttributesList(){\n        const organizationProfileAttributesList = {\n\t\t\tformId: 'profileAttributesList_form',\n\t\t\taddHeaderMargin: true,\n\t\t\tonSubmit: (formData) => this.updateOrgProfile(formData),\n            attributes: [\n                {name: 'Name', dataField: 'name', type: 'text'},\n                {name: 'Siren', dataField: 'siren', type: 'text'},\n                {name: 'Siret', dataField: 'siret', type: 'text'},\n                {name: 'Number', dataField: 'number', type: 'text'},\n                {name: 'Code NAF', dataField: 'codeNaf', type: 'text'},\n                {name: 'Code APE', dataField: 'codeApe', type: 'text'},\n                {name: 'JURIDICAL', dataField: 'juridicalForm', type: 'text'},\n                {name: 'TVA INTRA', dataField: 'tvaIntra', type: 'text'},\n                {name: 'Immat date', dataField: 'immatriculationDate', type:''},\n                {name: 'Greffer code', dataField: 'greffeCode', type: 'text'},\n                {name: 'Categorie', dataField: 'categorie', type: 'text'},\n                {name: 'NAF company', dataField: 'codeNafCompany', type: 'text'},\n                {name: 'APE company', dataField: 'codeApeCompany', type: 'text'},\n                {name: 'Addressage name', dataField: 'addressageName', type: 'text'},\n            ]\n        };\n        return organizationProfileAttributesList;\n    }\n\n    organizationAttributesView(){\n    \tlet canEdit = this.isCurrentAccountOwner();\n    \treturn <AttributeListGroup\n\t\t\tattributesListConfig={this.organizationProfileAttributesList()}\n\t\t\tdata={this.state.userProfile}\n\t\t\tcanEdit={canEdit}\n\t\t\tstandardFooterActions=\"true\"\n\t\t\tdisplayHeader={true}/>\n    }\n    updateOrgProfile(formData) {\n\t\tlet id = formData.id\n\t\taccountService\n\t\t.updateOrgProfile(id, formData, this.props.containerId)\n\t\t.then(response => {\n\t\t\tthis.updateProfileSuccess()\n\t\t})\n\t\t.catch(error => {\n\t\t\ttoast.error('Error updating profile!')\n\t\t\tconsole.error(error)\n\t\t});\n\t}\n\tcomponentDidUpdate(prevprops, presState){\n\n\t\tconst prevQueryUrlParams = queryString.parse(prevprops.location.search);\n\t\tconst queryUrlParams = queryString.parse(this.props.location.search);\n\t\tlet rootId = queryUrlParams.rootId;\n\t\tlet prevId = prevQueryUrlParams.rootId;\n\t\tif(prevId !== rootId && rootId){\n\t\t\tthis.loadAllDatas(rootId)\n\t\t}\n\t}\n\n\trefresh(){\n\t\tthis.loadAllDatas(this.getRootObjectForDetailsId(), false)\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.loadAllDatas(this.getRootObjectForDetailsId(), true)\n    }\n\n\tasync loadAllDatas(accountId, refreshbread){\n\n\t\tthis.setState({loading: true})\n\n\t\taccountService\n\t\t.accountDetails(accountId, this.props.containerId)\n\t\t.then(response => {\n\t\t\tlet currentAccountOwner = response.data.links.account.nickName === this.props.userContext.userAccount.nickName;\n\t\t\tthis.setState({\n\t\t\t\tloading: false,\n\t\t\t\tloadDataError: false,\n\t\t\t\tuserProfile:  response.data.attributes,\n\t\t\t\tuserAccount: response.data.links.account,\n\t\t\t\tisCurrentAccountOwner: currentAccountOwner,\n\t\t\t\taccountId: accountId,\n\t\t\t})\n\n\t\t\treturn response;\n\t\t})\n\t\t.then(response => {\n\t\t\tlet currentAccountId = response.data.links.account.id\n\t\t\tthis.loadContainerMemberships(currentAccountId)\n\t\t})\n\t\t.catch(error => {\n\t\t\tthis.setState({loadDataError: true})\n        })\n\t}\n\n\tasync loadContainerMemberships(currentAccountId){\n\t\taccountService\n\t\t.containersMembership(currentAccountId, this.props.containerId)\n\t\t.then(response => {\n\t\t\tif(response && response.data){\n\t\t\t\tthis.setState({\n\t\t\t\t\tcontainerMembership: response.data,\n\t\t\t\t\tcontainerMembershipMetaData: response.metaData,\n\t\t\t\t})\n\t\t\t}\n\t\t})\n\t}\n\n    getProfileName(){\n    \tif(this.state.userProfile){\n    \t\tif(this.state.userProfile.lastName){\n    \t\t\treturn this.state.userProfile.firstName + ' ' + this.state.userProfile.lastName\n    \t\t}\n        \treturn this.state.userProfile.name;\n    \t}\n\n    \treturn <div></div>;\n    }\n\n    isOrganizationProfile(){\n    \treturn this.state.userProfile && this.state.userProfile.siret;\n    }\n\n    overviewTabContent() {\n\n\t\tlet content = <></>;\n\t\tif(this.notLoading()) {\n\t    \tlet canEdit = this.isCurrentAccountOwner();\n\t    \tlet attributesView, accountShortType = 'Person';\n\t\t\tif(this.isOrganizationProfile()){\n\t\t\t\taccountShortType = 'Organization';\n\t\t\t}\n\n\t    \tif(accountShortType === 'Person'){\n\t    \t\tattributesView = this.peopleAttributesView();\n\t    \t}\n\t    \telse {\n\t    \t\tattributesView = this.organizationAttributesView();\n\t    \t}\n\n\t    \tcontent = <>\n\t\t\t\t<Accordion title={'Details'} content={attributesView} expanded={true}/>\n\t\t\t\t<Accordion title={'Contacts'} content={\n\t\t\t\t\t\t\t<Contactable\n\t\t\t\t\t\t\t\tcontainerId={this.props.containerId}\n\t\t\t\t\t\t\t\tdisplayHeader={true}\n\t\t\t\t\t\t\t\tbusinessId={this.state.userProfile.id}\n\t\t\t\t\t\t\t\tcanEdit={canEdit}/>\n\t\t\t\t\t\t} expanded={true}\n\t\t\t\t/>\n\n\t\t\t</>\n\t\t}\n\t\telse {\n\t\t\tcontent = <WaitingPane />\n\t\t}\n\n\t\treturn <div>{content}</div>\n    }\n\n    notLoading (){\n    \treturn !this.state.loading && this.state.userProfile;\n    }\n\n    accountTabContent(){\n    \tlet canEdit = this.state.isCurrentAccountOwner || commons.hasRoleAdmin(this.props.userContext),\n    \tactions = [], isAdmin = commons.hasRoleAdmin(this.props.userContext)\n\n\t\tif(this.notLoading()){\n\n\t\t\tif(isAdmin){\n\t\t\t\tactions.push(\n\t\t\t\t\t<ResetPassword\n\t\t\t\t\t\tcontainerId={this.props.containerId}\n\t\t\t\t\t\taccountId={this.state.userAccount.id}\n\t\t\t\t\t\tafterUpdate={() => this.refresh()}/>\n\t\t\t\t)\n\t\t\t}\n\n\t\t\tif(this.state.isCurrentAccountOwner) {\n\t\t\t\tactions.push(\n\t\t\t\t\t<UpdatePassword\n\t\t\t\t\t\tcontainerId={this.props.containerId}\n\t\t\t\t\t\taccountId={this.state.userAccount.id}/>\n\t\t\t\t)\n\t\t\t}\n\n\t\t\tif(isAdmin){\n\t\t\t\tif(!this.isLocked()){\n\t\t\t\t\tactions.push(<LockUser\n\t\t\t\t\t\tcontainerId={this.props.containerId}\n\t\t\t\t\t\taccountId={this.state.userAccount.id}\n\t\t\t\t\t\tafterUpdate={() => this.refresh()}/>)\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tactions.push(<UnLockUser\n\t\t\t\t\t\tcontainerId={this.props.containerId}\n\t\t\t\t\t\taccountId={this.state.userAccount.id}\n\t\t\t\t\t\tafterUpdate={() => this.refresh()}/>)\n\t\t\t\t}\n\t\t\t}\n\n\t    \treturn <>\n\t\t\t\t\t<ButtonToolbar className={'footer-btn-toolbar header-btn-toolbar btn-toolbar'}>{actions}</ButtonToolbar>\n\t\t\t\t\t<Accordion title={'Compte'} content={\n\t\t\t\t\t\t\t<AttributeListGroup\n\t\t\t\t\t\t\t\tcontainerId={this.props.containerId}\n\t\t\t\t\t\t\t\tattributesListConfig={this.accountAttributesList()}\n\t\t\t\t\t\t\t\tdata={this.state.userAccount}\n\t\t\t\t\t\t\t\tcanEdit={canEdit}\n\t\t\t\t\t\t\t\tdisplayHeader={true}/>\n\t\t\t\t\t\t} expanded={true}\n\t\t\t\t\t/>\n\n\t\t\t</>\n\t\t}\n\n\t\treturn <ButtonToolbar>{actions}</ButtonToolbar>\n    }\n\n    accountAttributesList(){\n        const accountAttributesList = {\n                attributes: [\n\t\t\t\t\t{name: 'Locked', dataField: 'locked', type:'bool'},\n\t\t\t\t\t{name: 'Locked date', dataField: 'lockedDate', type: 'text'},\n                    {name: 'Activated', dataField: 'active', type:'bool'},\n                    {name: 'Pass expire date', dataField: 'passwordExpirationDate', type:'date', dateFormat: 'DD/MM/YYYY HH:mm'},\n                    {name: 'Pass expired', dataField: 'firstName', type:'bool'},\n                    {name: 'Creation date', dataField: 'createDate', type:'date', readOnly: true, dateFormat: 'DD/MM/YYYY HH:mm'},\n                    {name: 'Created by', dataField: 'createdBy', type: 'text', readOnly: true},\n                    {name: 'Modification date', dataField: 'lastModifiedDate', type:'date', readOnly: true, dateFormat: 'DD/MM/YYYY HH:mm'},\n                    {name: 'Modified by', dataField: 'lastModifiedBy', type: 'text', readOnly: true},\n                ]\n        };\n\n        return accountAttributesList;\n    }\n\n\trender() {\n\n\t\tlet navTabContents = [];\n\t\tthis.tabsConfigs().tabItems.map(tabItem => {\n\t\t\tif(tabItem.visible()) {\n\t\t\t\tnavTabContents.push( <Tab eventKey={tabItem.id.toString()} title={tabItem.title}>\n\t\t\t\t\t{tabItem.tabContent(tabItem)}\n\t\t\t\t</Tab>);\n\t\t\t}\n\t\t});\n\n\t\treturn (<div className=\"user-profile-root\">\n\t\t\t<div className=\"user-profile-thumb\">\n\t\t\t\t<img src={profile}\n\t\t\t\t\t height=\"120\"\n\t\t\t\t\t width=\"120\"/>\n\t\t\t</div>\n\t\t\t<div className=\"user-profile-content admin-tab-content\">\n\t\t\t\t<Tabs defaultActiveKey=\"1\" id=\"uncontrolled-tab-example\" className={\"admin-nav-tabs\"}>\n\t\t\t\t\t{navTabContents}\n\t\t\t\t</Tabs>\n\t\t\t</div>\n\t\t</div>);\n\t}\n}\n\nexport default connect(mapStateToProps) (PeopleDetails);\n\nconst genderProvider = () => {\n\treturn [{'key':'O', 'value':'Mr'}, {'key':'1', 'value':'Ms'}]\n}\n","import React, { Component } from 'react';\nimport {Button,} from 'reactstrap';\nimport { ThumbInfo} from '_components/_common';\n\nclass PeopleCard extends Component {\n\t\n\tconstructor(props){\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tloading:false,\n\t\t\tpeopleType: props.peopleType,\n\t\t\tpeople: props.people,\n\t\t\taccount: props.account,\n\t\t\t\n\t\t\torgDetailsLink: props.orgDetailsLink,\n\t\t\tpersonDetailsLink: props.personDetailsLink,\n\t\t}\n\t}\n\t\n\tblockUser(e, userAccountId){\n\t\te.preventDefault()\n\t\tthis.props.blockUser(userAccountId)\n\t}\n\n\tunsubscribe(e){\n\t\te.preventDefault()\n\t\tlet userAccountId = this.state.account.id\n\t\tthis.props.unsubscribe(userAccountId)\n\t}\n\n\t\n\tloading(){\n\t\treturn (<span>Loading...</span>)\n\t}\n\t\n\tgetTitle(people){\n\t\treturn \"title\"\n\t}\n\t\n\tgetDisplay(){\n\t\tlet type = this.state.peopleType.logicalPath,\n\t\tcardImage, link = this.props.personDetailsLink(this.state.people);\n\t\t\n\t\tconst thumb = <ThumbInfo \n\t\t\t\tcanEdit={false} \n\t\t\t\twidth=\"90\"\n\t\t\t\theight=\"90\"\n\t\t\t\tthumbedId={this.state.people.id} /> \n\t\t\n\t\tlet title\n\t\tif(this.state.peopleType.logicalPath.startsWith('com.katappult.people.Party/Organization/')){\n\t\t\tif(this.props.orgDetailsLink !== null){\n\t\t\t\ttitle = this.props.orgDetailsLink(this.state.people)\n\t\t\t}\n\t\t\telse {\n\t\t\t\ttitle = this.state.people.addressageName\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tif(this.props.personDetailsLink !== null){\n\t\t\t\ttitle = this.props.personDetailsLink(this.state.people)\n\t\t\t}\n\t\t\telse {\n\t\t\t\ttitle = this.state.people.firstName + ' ' + this.state.people.lastName\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn <table>\n\t\t\t\t<tr>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<div className=\"\">\n\t\t\t\t\t\t\t{thumb}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<div>\n\t\t                  \t<p align=\"left\"><h5>{title}</h5></p>\n\t\t                </div>\n\t\t                <div>\n\t\t                \t<Button onClick={e => this.blockUser(e, this.props.account.id)}>BLOCK</Button>\n\t\t                \t<Button onClick={e => this.unsubscribe(e, this.props.account.id)}>UNSUBSCRIBE</Button>\n\t\t                </div>\n\t\t\t\t\t</td>\n\t\t\t\t</tr>\n\t          </table>\n\t}\n\t\n\trender() {\n\t\tif(this.state.loading){\n\t\t\treturn this.loading()\n\t\t}\n\t\t\n\t\tif(this.state.peopleType === null || \n\t\t\t\tthis.state.peopleType === undefined){\n\t\t\treturn <div>Unkown people type!</div>\n\t\t}\n\t\t\n\t\tconst { peopleType, people, account} = this.state;\n\t\treturn this.getDisplay()\n\t}\n}\n\nexport default PeopleCard;\n\n\n","import { _doGet, _doPost, _doDelete, _doPut, buildURLQuery, API_ROOT } from './utils/services.config';\n\nexport const preferencesService = {\n\t\tgetUserPreferences,\n\t\tgetSystemPreferences,\n\t\tupdate,\n\t\tcreate,\n\t\tdrop,\n}\nfunction getUserPreferences(ownerId, containerId){\n\tconst uri = '/api/secured/v1/katappult/principals/account/preferences/list?containerId=' + containerId + '&isUser=true' + '&accountId=' + ownerId;\n\tconst url = `${API_ROOT}` + uri;\n    return _doGet(url);\n}\nfunction getSystemPreferences(ownerId, containerId){\n\tconst uri = '/api/secured/v1/katappult/principals/account/preferences/list?containerId=' + containerId + '&isUser=false' + '&accountId=' + ownerId;\n\tconst url = `${API_ROOT}` + uri;\n    return _doGet(url);\n}\nfunction update(ownerId, preferenceId, containerId, value){\n\tconst uri = '/api/secured/v1/katappult/principals/account/preferences/update?containerId=' + containerId + '&value=' + value + '&accountId=' + ownerId + '&preferenceId=' + preferenceId;\n\tconst url = `${API_ROOT}` + uri;\n    return _doPut(url);\n}\nfunction create(formData){\n\tconst uri = '/api/secured/v1/katappult/preferences/create';\n\tconst url = `${API_ROOT}` + uri;\n    return _doPost(url, JSON.stringify(formData));\n}\nfunction drop(preferenceId, containerId){\n\tconst uri = '/api/secured/v1/katappult/preferences/delete?containerId=' + containerId + '&id=' + preferenceId;\n\tconst url = `${API_ROOT}` + uri;\n    return _doDelete(url);\n}\n","import React, { Component } from 'react';\nimport { AttributeListGroup, WaitingPane} from '_components/_common';\nimport { preferencesService } from '_services/preferences.service';\nimport {commons} from \"_helpers/commons\";\n\n/**\n * Add new settings\n */\nclass AddSettings extends Component {\n\n\tconstructor(props) {\n\t\tsuper(props)\n\t\tthis.state = {\n\t\t\tformData: {\n\t\t\t\tcreateContainerId: this.props.ceateContainerId,\n\t\t\t\tloading: false\n\t\t\t},\n\t\t\terrors:[]\n\t\t}\n\n\t\tthis.create = this.create.bind(this)\n\t\tthis.attributesList = this.attributesList.bind(this);\n\t\tthis.handleSuccessResponse = this.handleSuccessResponse.bind(this);\n\t\tthis.handleErrorResponse = this.handleErrorResponse.bind(this);\n\t}\n\tasync create(formData) {\n\t\tthis.setState({\n\t\t\tloading:true\n\t\t})\n\n\t\tlet accountId = this.props.accountId;\n\t\tlet containerId = this.props.containerId;\n\t\tlet userHidden = this.props.userHidden;\n\n\t\tformData.owner = accountId;\n\t\tformData.container = containerId;\n\t\tformData.userHidden = userHidden;\n\n\t\tpreferencesService.create(formData, this.props.containerId).then(response => {\n\t\t\tif(commons.isRequestSuccess(response)){\n\t\t\t\tthis.handleSuccessResponse(response, formData);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.handleErrorResponse(response);\n\t\t\t}\n\t\t})\n\t}\n\thandleErrorResponse(formData){\n\t\tthis.setState({\n\t\t\tloading: false,\n\t\t\terrors: ['Error occurs when creating entity'],\n\t\t\tformData: formData\n\t\t})\n\t}\n\thandleSuccessResponse(response, formData){\n\t\tthis.setState({\n\t\t\tloading: false,\n\t\t})\n\n\t\tlet itemId = response.data.attributes.id;\n\t\tif(this.props.onCreateItemSuccess){\n\t\t\tthis.props.onCreateItemSuccess(itemId);\n\t\t}\n\t}\n\t/**\n\t * Attributes list\n\t */\n\tattributesList(){\n        const attributesList = {\n            title: 'Summary',\n\t\t\ticon: 'fa fa-info float-right',\n\t\t\tformId: 'create_profileAttributesList_form',\n\t\t\tsaveButtonTitle: 'CREATE',\n\t\t\taddHeaderMargin: true,\n\t\t\tonSubmit: (formData) => this.create(formData),\n            attributes: [\n                {name: 'Display Name', dataField: 'displayName', type: 'text',required:true,  placeHolder: 'Name'},\n    \t\t\t{name: 'Key', dataField: 'key', type: 'text', required: true},\n    \t\t\t{name: 'Value', dataField: 'value', type: 'text', required: true},\n            ]\n        }\n\n        return attributesList;\n    }\n\n   render() {\n\t   if(this.state.loading === true){\n\t\t   return <WaitingPane bordered={false}/>\n\t   }\n\n\t   let errors = [];\n\t   if(this.state.errors.length > 0) {\n\t\t   this.state.errors.map(error => {\n\t\t\t   errors.push(<p>{error}</p>)\n\t\t   })\n\t   }\n\n\t  let formData ={...this.state.formData};\n\t  return (\n\t        <div>\n\t\t\t\t<div id=\"form-errors-section\" className=\"form-error\">\n\t\t\t\t\t{errors}\n\t\t\t\t</div>\n\t\t\t\t<AttributeListGroup\n\t\t\t\t\tattributesListConfig={this.attributesList()}\n\t\t\t\t\tdata={formData}\n\t\t\t\t\tstandardFooterActions=\"true\"\n\t\t\t\t\tformMode='create_object'/>\n\t      </div>\n\t   )\n  }\n}\n\nexport default AddSettings;\n","import React, { Component } from 'react';\nimport { EmptyPane, WaitingPane, DataTable, Wizard, WizardConfirm} from '_components/_common';\nimport { preferencesService } from '_services/preferences.service';\nimport AddSettings from './AddSettings.js';\nimport Form from 'react-bootstrap/Form';\nimport queryString from 'query-string';\n\nclass UserSystemSettings extends Component {\n\n\tconstructor(props){\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tloading:true,\n\t\t\tresults:[],\n\t\t\tmetaData:{},\n\t\t\tcreateForm:{},\n\t\t\teditingRow: null,\n\t\t}\n\n\t\tthis.updateEditedSetting = this.updateEditedSetting.bind(this);\n\t\tthis.cancelEditedSetting = this.cancelEditedSetting.bind(this);\n\t\tthis.setEditingRow = this.setEditingRow.bind(this);\n\t\tthis.formDataChange = this.formDataChange.bind(this);\n\t\tthis.getCreatePage = this.getCreatePage.bind(this);\n\t\tthis.delete = this.delete.bind(this);\n\t\tthis.getRootObjectForDetailsId = this.getRootObjectForDetailsId.bind(this);\n\t}\n\n\tgetRootObjectForDetailsId(){\n\t\tconst queryUrlParams = queryString.parse(this.props.location.search);\n\t\tlet objectforDetailsId = queryUrlParams.rootId;\n\t\treturn objectforDetailsId\n\t}\n\n\tdelete(itemId){\n\t\tlet containerId = this.props.containerId;\n\n\t\tpreferencesService.drop(itemId, containerId).then(response => {\n\t\t\tthis.componentDidMount();\n\t\t\tthis.setState({\n\t\t\t\tloading:true,\n\t\t\t\tcreateForm:{},\n\t\t\t\teditingRow: null,\n\t\t\t});\n\t\t})\n\t}\n\tonCreateItemSuccess(wizardCloseFunction){\n\t\tif(wizardCloseFunction) {\n\t\t\twizardCloseFunction();\n\t\t}\n\n\t\tthis.componentDidMount();\n\t}\n\n\tgetCreatePage(wizardCloseFunction){\n\t\treturn <AddSettings\n\t\t\t\t\tuserHidden={true}\n\t\t\t\t\taccountId={this.getRootObjectForDetailsId()}\n\t\t\t\t\tcontainerId={this.props.containerId}\n\t\t\t\t\tonCreateItemSuccess={() => this.onCreateItemSuccess(wizardCloseFunction)}\n\t\t\t\t\twizardMode={true}/>\n\t}\n\n\tupdateEditedSetting(val){\n\t\tlet id = val.id;\n\t\tlet containerId = this.props.containerId;\n\t\tlet accountId = this.getRootObjectForDetailsId();\n\t\tlet value = this.state.createForm.value;\n\n\t\tpreferencesService.update(accountId, id, containerId, value).then(response => {\n\t\t\tthis.componentDidMount();\n\t\t\tthis.setState({\n\t\t\t\tcreateForm:{},\n\t\t\t\teditingRow: null,\n\t\t\t});\n\t\t})\n\t}\n\n\tcancelEditedSetting(val){\n\t\tlet id = val.id;\n\t\tthis.setState({\n\t\t\tcreateForm: {},\n\t\t\teditingRow: null\n\t\t})\n\t}\n\n\tsetEditingRow(v, i){\n\t\tlet createForm = {};\n\t\tcreateForm['value'] = v.value;\n\t\tcreateForm['id'] = v.id;\n\n\t\tthis.setState({\n\t\t\teditingRow: v.id,\n\t\t\tcreateForm: createForm,\n\t\t})\n\t}\n\n\tformDataChange(e){\n\t\tlet createForm = {...this.state.createForm}\n\t\tcreateForm[e.target.name] = e.target.value\n\t\tthis.setState({\n\t\t\tcreateForm: createForm\n\t\t})\n\t}\n\n\tsettingsDatatable(){\n\t\tconst tableConfig = {\n\t\t\t\tcolumnsConfig: [\n\t\t\t\t\t{ name:'Name', dataField: 'attributes.displayName', headerClassName: 'td-left', className: 'td-left'},\n\t\t\t\t\t{ name:'Value',displayComponent: (v,i) => this.settingsValue(v,i), dataField: 'attributes', headerClassName: 'td-left', className: 'td-left'},\n\t\t\t\t\t{ displayComponent: (v,i) => this.rowAction(v,i), dataField: 'attributes'}\n\t\t\t\t],\n\t\t}\n\n\t\tlet items = [];\n\t\tthis.state.results.map(item => {\n\t\t\titems.push({attributes: {id: item.attributes.accountId, value: item.attributes.value, key: item.attributes.key, displayName: item.attributes.displayName}})\n\t\t})\n\n\t\treturn \t<DataTable items={JSON.stringify(items)}\n\t            \tmetaData={JSON.stringify(this.state.metaData)}\n\t                tableConfig={tableConfig}\n\t                displayTotalElements={true}\n\t            \tpaginate={false}/>\n\t}\n\n\tsettingsValue(val){\n\t\tlet form;\n\t\tif(this.state.editingRow && this.state.editingRow === val.id){\n\t\t\tform = (\n\t\t      <Form.Control type=\"text\"\n\t\t    \t  placeholder=\"Value\"\n\t\t    \t  onChange={this.formDataChange}\n\t\t    \t  value={this.state.createForm.value}\n\t\t    \t  name=\"value\"\n\t\t    \t  className=\"mb-2\"/>\n\t\t\t)\n\t\t}\n\t\telse {\n\t\t\tform = val.value;\n\t\t}\n\n\t\treturn <td className=\"td-left\">\n\t\t\t{form}\n\t\t</td>\n\t}\n\tcomponentDidMount(){\n\t\tlet containerId = this.props.containerId;\n\t\tlet accountId = this.getRootObjectForDetailsId();\n\n\t\tpreferencesService.getSystemPreferences(accountId, containerId).then(response => {\n\t\t\tthis.setState({\n\t\t\t\tresults: response.data,\n\t\t\t\tmetaData:response.metaData,\n\t\t\t\tloading:false\n\t\t\t});\n\t\t\treturn response;\n\t\t})\n\t\t.catch(error => {\n\t\t\tconsole.log(error);\n\t\t\tthis.setState({\n\t\t\t\tloading:false\n\t\t\t});\n\t\t})\n\t}\n\theaderActions(){\n\t\treturn <div className=\"btn-toolbar footer-btn-toolbar header-btn-toolbar\">\n\t\t\t\t<Wizard\n\t\t\t\t\tdialogSize=\"md\"\n\t\t\t\t\tbuttonIcon=\"fa fa-sm fa-plus\"\n\t\t\t\t\thideFooter={true}\n\t\t\t\t\tbuttonTitle='NEW USER SETTINGS'\n\t\t\t\t\tdialogTitle=\"New user settings\"\n\t\t\t\t\tdialogContentProvider={(wizardCloseFunction)=>this.getCreatePage(wizardCloseFunction)}/>\n\t\t</div>\n\t}\n\trowAction(v, i){\n\t\tif(this.state.editingRow && this.state.editingRow === v.id){\n\t\t\treturn \t<td width=\"12%\">\n\t\t\t\t<div className=\"btn-toolbar\" style={{paddingTop: '1rem'}}>\n\t\t\t\t\t<button onClick={() => this.updateEditedSetting(v,i)}> UPDATE </button>\n\t\t\t\t\t<button onClick={() => this.cancelEditedSetting(v,i)}>CANCEL</button>\n\t\t\t\t</div>\n\t\t\t</td>\n\t\t}\n\t\telse {\n\t\t\tlet ref = v.id;\n\t\t\treturn \t<td width=\"12%\">\n\t\t\t\t<div className=\"btn-toolbar\" style={{paddingTop: '1rem'}}>\n\t\t\t\t\t<button onClick={() => this.setEditingRow(v,i)}><i className=\"fa fa-pencil\"></i></button>\n\t\t\t\t\t<WizardConfirm\n\t\t\t\t\t\tbuttonIcon=\"fa fa-times\"\n\t\t\t\t\t\tonConfirm={() => this.delete(ref)}\n\t\t\t\t\t\tdialogMessage=\"Do you really want to remove this user system settings?\"\n\t\t\t\t\t\tdialogTitle={\"Remove setting\".toUpperCase()}/>\n\t\t\t\t</div>\n\t\t\t</td>\n\t\t}\n\t}\n\trows(){\n\t\tif(this.state.results && this.state.results.length > 0){\n    \t\treturn this.settingsDatatable();\n    \t}\n    \telse {\n\t\t\treturn <EmptyPane />\n\t\t}\n\t}\n    render() {\n    \tif(this.state.loading === true){\n    \t\treturn <WaitingPane />\n    \t}\n\n    \treturn  <div className=\"\">\n    \t\t{this.headerActions()}\n    \t\t{this.rows()}\n        </div>\n   }\n}\n\n\nexport default UserSystemSettings;\n","import React from 'react';\nimport {commons} from '_helpers/commons';\nimport {WaitingPane} from '_components/_common';\nimport {coreUri} from \"_helpers/CoreUri\";\n\nclass Logout extends React.Component{\n\t\n\tconstructor(props){\n\t\tsuper(props)\n\t\tthis.state ={\n\t\t}\n\t}\n\n\tcomponentDidMount(){\n\t\tcommons.katappult_core_logout();\n\t\tconst loginUrl = coreUri.clientSideRenderedURL('/login');\n\t\twindow.location.href = loginUrl;\n\t}\n\t\n\trender(){\n\t\treturn <WaitingPane waitingMessage=\"Bye\"/>\n\t}\n}\n\n\nexport default Logout;","import React from 'react';\nimport { Breadcrumb} from 'react-bootstrap';\nimport { AiOutlineCaretRight } from \"react-icons/ai\";\n\nclass AppBreadcrumb extends React.Component {\n\n\tconstructor(props){\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\titems: []\n\t\t}\n\n\t\tthis.pushItem = this.pushItem.bind(this);\n\t\tthis._dopopBreadCrumb=this._dopopBreadCrumb.bind(this);\n\t}\n\tgetHomeLabel(){\n\t\tif(this.props.homeLabel){\n\t\t\treturn this.props.homeLabel;\n\t\t}\n\n\t\treturn 'Home';\n\t}\n\tgetHomeUrl(){\n\t\tif(this.props.homeUrl){\n\t\t\treturn this.props.homeUrl;\n\t\t}\n\n\t\treturn '#/home';\n\t}\n\tpushItem(item){\n\t\tlet items = this.props.items.slice();\n\t\titems.push(item);\n\t\tthis.setState({\n\t\t\titems: items\n\t\t})\n\t}\n\t_dopopBreadCrumb(e, item){\n\t\tif(this.props.popBreadCrumb){\n\t\t\tif(e)e.preventDefault();\n\t\t\tthis.props.popBreadCrumb(item);\n\t\t}\n\t}\n\t_doselectHomePage(e, item){\n\t\tif(this.props.homeUrlAction){\n\t\t\tif(e)e.preventDefault();\n\t\t\tthis.props.homeUrlAction(item);\n\t\t}\n\t}\n\trenderBreadCrumb(){\n\t\tlet items = [];\n\t\tif(this.props.hideHome !== true){\n\t\t\titems.push(<Breadcrumb.Item href={this.getHomeUrl()} onClick={(e) => e.preventDefault()}>\n\t\t\t\t\t\t<AiOutlineCaretRight />\n\t\t\t\t\t\t{this.getHomeLabel()}\n\t\t\t\t\t</Breadcrumb.Item>\n\t\t\t);\n\t\t}\n\n\t\tif(this.props.items){\n\t\t\tthis.props.items.map(item => {\n\t\t\t\titems.push(<Breadcrumb.Item href={item.href} onClick={(e) => this._dopopBreadCrumb(e, item)}>\n\t\t\t\t\t<AiOutlineCaretRight/>\n\t\t\t\t\t{item.title}\n\t\t\t\t</Breadcrumb.Item>);\n\t\t\t})\n\t\t}\n\n\t\tlet locations = <Breadcrumb className=\"no-border\">\n\t\t\t{items}\n\t\t</Breadcrumb>\n\n\t\treturn <>\n\t\t\t\t<table className=\"app-breadcrum-table\">\n\t\t\t\t    <tr>\n\t\t\t\t        <td class=\"dt-center\">\n\t\t\t\t            <nav aria-label=\"breadcrumb\">\n\t\t\t\t               {locations}\n\t\t\t\t            </nav>\n\t\t\t\t        </td>\n\t\t\t\t    </tr>\n\t\t\t\t</table>\n\t\t</>\n\t}\n\trender(){\n\t\treturn this.renderBreadCrumb();\n\t}\n}\n\n\nexport default AppBreadcrumb;\n","import React, { Component } from 'react';\nimport { revControlledService } from '_services/revcontrolled.services';\nimport { DataTable, WaitingPane, EmptyPane } from '_components/_common';\nimport { RiPencilLine, RiCheckLine } from \"react-icons/ri\";\nimport Button from \"react-bootstrap/Button\";\n\nclass AllIterations extends Component {\n\n\tconstructor(props){\n\t\tsuper(props)\n\t\tthis.state = {\n\t\t\titems: [],\n\t\t\tloading: true,\n\t\t}\n\n\t\tthis.tableActions = this.tableActions.bind(this)\n\t}\n\n\tcomponentDidMount(){\n\t\tlet revControlledId = this.props.revControlledId;\n\t\tif(!this.props.versionId){\n\t\t\trevControlledService.allIterationsOf(revControlledId, this.props.containerId).then(response => {\n\t\t\t\tthis.setState({\n\t\t\t\t\titems: response && response.data ? response.data : [],\n\t\t\t\t\tmetaData: response && response.data ? response.metaData : {},\n\t\t\t\t\tloading: false\n\t\t\t\t})\n\t\t\t})\n\t\t}\n\t\telse {\n\t\t\trevControlledService.allIterationsOfversion(revControlledId, this.props.versionId,this.props.containerId).then(response => {\n\t\t\t\tthis.setState({\n\t\t\t\t\titems: response && response.data ? response.data : [],\n\t\t\t\t\tmetaData: response && response.data ? response.metaData : {},\n\t\t\t\t\tloading: false\n\t\t\t\t})\n\t\t\t})\n\t\t}\n\t}\n\n\ttableActions(v,i){\n\t\treturn <td className={'td-center'}>\n\t\t\t<Button onClick={() => this.props.toIterationDetails(v.id)}><i className=\"fa fa-info fa-sm\"></i></Button>\n\t\t</td>\n\t}\n\n\trender (){\n\t\tlet items = this.state.items;\n\t\tlet metaData = this.state.metaData;\n\t\tlet tableConfig;\n\t\tif(!this.props.versionId){\n\t\t\ttableConfig = {\n\t\t\t\tcolumnsConfig: [\n\t\t\t\t\t{ displayComponent: (v) => lockedIcon(v), dataField: 'attributes', defaultSortOrder: 'asc', headerClass: 'td-left', className:'td-left'},\n\t\t\t\t\t{ name: 'Name', dataField: 'attributes', displayComponent: (v) => nameOf(this.props.name), headerClass: 'td-left', className:'td-left'},\n\t\t\t\t\t{ name: 'Version', dataField: 'attributes.iterationInfo.iterationNumber', defaultSortOrder: 'asc', headerClass: 'td-left', className:'td-left' },\n\t\t\t\t\t{ name: 'Created', dataField: 'attributes.createDate', dateFormat: 'DD/MM/YYYY', headerClass: 'td-left', className:'td-left' },\n\t\t\t\t\t{ name: 'Updated', dataField: 'attributes.lastModifiedDate', dateFormat: 'DD/MM/YYYY', headerClass: 'td-left', className:'td-left' },\n\t\t\t\t],\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\ttableConfig = {\n\t\t\t\tcolumnsConfig: [\n\t\t\t\t\t{ displayComponent: (v) => lockedIcon(v), dataField: 'attributes', defaultSortOrder: 'asc', headerClass: 'td-left', className:'td-left'},\n\t\t\t\t\t{ name: 'Name', dataField: 'attributes', displayComponent: (v) => nameOf(this.props.name), headerClass: 'td-left', className:'td-left'},\n\t\t\t\t\t{ name: 'Version', dataField: 'attributes.versionInfo.versionId', defaultSortOrder: 'asc', headerClass: 'td-left', className:'td-left' },\n\t\t\t\t\t{ name: 'Iteration', dataField: 'attributes.iterationInfo.iterationNumber', defaultSortOrder: 'asc', headerClass: 'td-left', className:'td-left' },\n\t\t\t\t\t{ name: 'Created', dataField: 'attributes.createDate', dateFormat: 'DD/MM/YYYY', headerClass: 'td-left', className:'td-left' },\n\t\t\t\t\t{ name: 'Updated', dataField: 'attributes.lastModifiedDate', dateFormat: 'DD/MM/YYYY', headerClass: 'td-left', className:'td-left' },\n\t\t\t\t\t{ dataField: 'attributes', displayComponent: (v,i) => this.tableActions(v,i), headerClass: 'td-center', className: 'td-center'},\n\t\t\t\t],\n\t\t\t}\n\n\t\t}\n\n\t\tlet content;\n\t\tif(items !== null && items.length > 0){\n\t\t\tcontent = <DataTable items={JSON.stringify(items)}\n\t\t\t\t\t\ttableClassName=\"data-table\"\n\t\t\t\t\t\tpagination={false}\n\t\t\t\t\t\tdisplayTotalElements={true}\n\t\t\t\t\t\tmetaData={JSON.stringify(metaData)}\n\t\t\t\t\t\ttableConfig={tableConfig}/>\n\t\t}\n\t\telse if(this.state.loading === true){\n\t\t\tcontent = <WaitingPane />\n\t\t}\n\t\telse {\n\t\t\tcontent = <EmptyPane hideMainMessage={true} secondaryMessage=\"No history\" />\n\t\t}\n\n\t\treturn content\n\t}\n}\n\nexport default AllIterations;\n\n\nconst  nameOf = (name) => {\n\treturn <td className={'td-left'}>\n\t\t{name}\n\t</td>\n}\n\nconst lockedIcon = (attributes) => {\n\tif(attributes.workInfo.isWorkingCopy === true){\n\t\treturn <td className=\"dt-left\">\n\t\t\t<RiPencilLine color=\"#000\" size=\"1.5em\"/>\n\t\t</td>\n\t}\n\telse if(attributes.iterationInfo.isLatestIteration === true){\n\t\treturn <td className={'td-left'}>\n\t\t\t<RiCheckLine color=\"#000\" size=\"1.5em\"/>\n\t\t</td>\n\t}\n\n\treturn <td></td>\n}\n","import React, { Component } from 'react';\nimport { revControlledService } from '_services/revcontrolled.services';\nimport { DataTable, WaitingPane, EmptyPane } from '_components/_common';\nimport { RiPencilLine, RiCheckLine } from \"react-icons/ri\";\nimport Button from \"react-bootstrap/Button\";\nimport {AllIterations} from \"_components/_common\";\n\nclass AllVersions extends Component {\n\n\tconstructor(props){\n\t\tsuper(props)\n\t\tthis.state = {\n\t\t\titems: [],\n\t\t\tloading: true,\n\t\t}\n\n\t\tthis.allVersionView = this.allVersionView.bind(this)\n\t\tthis.onAllIterationsSelected = this.onAllIterationsSelected.bind(this)\n\t\tthis.tableActions = this.tableActions.bind(this)\n\t\tthis.toIterationDetails = this.toIterationDetails.bind(this)\n\t}\n\n\tcomponentDidMount(){\n\t\tlet revControlledId = this.props.revControlledId;\n\t\trevControlledService.allVersionsOf(revControlledId, this.props.containerId).then(response => {\n\t\t\tthis.setState({\n\t\t\t\titems: response && response.data ? response.data : [],\n\t\t\t\tmetaData: response && response.data ? response.metaData : {},\n\t\t\t\tloading: false\n\t\t\t})\n\t\t})\n\t\t.catch(error=> {\n\t\t\tthis.setState({loading: false})\n\t\t})\n\t}\n\n\tallVersionView(){\n\t\tthis.setState({\n\t\t\tviewMode: null,\n\t\t\tallIterationsItem: null\n\t\t})\n\t}\n\n\tonAllIterationsSelected(v, item){\n\t\tthis.setState({\n\t\t\tviewMode: 'allIterations',\n\t\t\tallIterationsItem: item\n\t\t})\n\t}\n\n\ttableActions(v, i){\n\t\treturn <td>\n\t\t\t<Button onClick={() => this.onAllIterationsSelected(v,i)}><i className=\"fa fa-list fa-sm\"></i></Button>\n\t\t</td>\n\t}\n\n\tallIterationsView(){\n\t\tconst data = this.state.allIterationsItem\n\t\tconst versionId = data.attributes.versionInfo.versionId\n\t\treturn <>\n\t\t\t<div className={'btn-toolbar btn-toolbar-right'}>\n\t\t\t\t<button onClick={this.allVersionView}>Toutes les versions</button>\n\t\t\t</div>\n\t\t\t<AllIterations\n\t\t\t\ttoIterationDetails={this.props.toIterationDetails}\n\t\t\t\tversionId={versionId}\n\t\t\t\tcontainerId={this.props.containerId}\n\t\t\t\tname={data.masterAttributes.name}\n\t\t\t\tdescription={data.masterAttributes.description}\n\t\t\t\trevControlledId={data.attributes.id}/>\n\t\t</>\n\t}\n\n\ttoIterationDetails(id){\n\n\t}\n\n\trender (){\n\n\t\tif(this.state.viewMode === 'allIterations'){\n\t\t\treturn this.allIterationsView()\n\t\t}\n\n\t\tlet items = this.state.items;\n\t\tlet metaData = this.state.metaData;\n\t\tlet tableConfig = {\n\t\t\tcolumnsConfig: [\n\t\t\t\t{ displayComponent: (v) => lockedIcon(v), dataField: 'attributes', defaultSortOrder: 'asc', headerClass: 'td-left', className:'td-left'},\n\t\t\t    { name: 'Name', dataField: 'attributes', displayComponent: (v) => nameOf(this.props.name), headerClass: 'td-left', className:'td-left'},\n\t\t\t\t{ name: 'Version', dataField: 'attributes.versionInfo.versionId', defaultSortOrder: 'asc', headerClass: 'td-left', className:'td-left' },\n\t\t\t    { name: 'Created', dataField: 'attributes.createDate', dateFormat: 'DD/MM/YYYY', headerClass: 'td-left', className:'td-left' },\n    \t\t    { name: 'Updated', dataField: 'attributes.lastModifiedDate', dateFormat: 'DD/MM/YYYY', headerClass: 'td-left', className:'td-left' },\n\t\t\t\t{ displayComponent: (v,i) => this.tableActions(v,i), headerClass: 'td-left', className: 'td-left'},\n\t\t\t],\n\t\t}\n\n\t\tlet content;\n\t\tif(items !== null && items.length > 0){\n\t\t\tcontent = <DataTable items={JSON.stringify(items)}\n\t\t\t\t\t\ttableClassName=\"data-table\"\n\t\t\t\t\t\tpagination={false}\n\t\t\t\t\t\tdisplayTotalElements={true}\n\t\t\t\t\t\tmetaData={JSON.stringify(metaData)}\n\t\t\t\t\t\ttableConfig={tableConfig}/>\n\t\t}\n\t\telse if(this.state.loading === true){\n\t\t\tcontent = <WaitingPane />\n\t\t}\n\t\telse {\n\t\t\tcontent = <EmptyPane hideMainMessage={true} secondaryMessage=\"No history\" />\n\t\t}\n\n\t\treturn content\n\t}\n}\n\nexport default AllVersions;\n\n\nconst  nameOf = (name) => {\n\treturn <td className={'td-left'}>\n\t\t{name}\n\t</td>\n}\n\nconst lockedIcon = (attributes) => {\n\tif(attributes.workInfo.isWorkingCopy === true){\n\t\treturn <td className=\"dt-left\">\n\t\t\t<RiPencilLine color=\"#000\" size=\"1.5em\"/>\n\t\t</td>\n\t}\n\telse if(attributes.iterationInfo.isLatestIteration === true){\n\t\treturn <td className={'td-left'}>\n\t\t\t<RiCheckLine color=\"#000\" size=\"1.5em\"/>\n\t\t</td>\n\t}\n\n\treturn <td></td>\n}\n","import React from 'react';\nimport Modal from 'react-bootstrap/Modal'\nimport Spinner from 'react-bootstrap/Spinner'\n\nexport default function ProcessingModal(props) {\n  return (\n    <>\n      <Modal\n      \tcentered\n      \tsize='sm'\n      \tclassName=\"processing-modal\"\n        show={props.show}\n        backdrop=\"static\"\n        keyboard={false}>\n        <Modal.Body><Spinner animation=\"border\" variant=\"warning\" /></Modal.Body>\n      </Modal>\n    </>\n  );\n}\n","import React, {useState} from \"react\";\nimport {fadeIn} from 'react-animations'\nimport Radium, {StyleRoot} from 'radium';\n\nconst styles = {\n    fadeIn: {\n        animation: 'x 100ms',\n        animationName: Radium.keyframes(fadeIn, 'fadeIn')\n    }\n}\n\nfunction Accordion(props) {\n\n    const [expanded, setEpanded] = useState(props.expanded ? props.expanded : expanded);\n\n    const expand = () => {\n        setEpanded(!expanded);\n    }\n\n    return <StyleRoot>\n        <div className={'accordion-pane'}>\n\n            {props.titleComponent}\n\n            {\n                props.title ? <h3 className=\"form-title-level-0 hand-hover\" onClick={expand}>{props.title}</h3> : <></>\n            }\n\n            {expanded && <div style={styles.fadeIn}>\n                {props.content}\n            </div>\n            }\n        </div>\n    </StyleRoot>\n}\n\nexport default Accordion;","import {_doGet, _doPost, buildURLQuery, API_ROOT, _doDelete} from './utils/services.config';\n/**\n * Default Export\n */\nexport const containerService = {\n    getAllLifecycles,\n    getAllFolderTemplates,\n    getAllEmailTemplates,\n    getAllTeamTemplates,\n    getRootTypes,\n    getAllMembers,\n    getApplicationRootContainer,\n    getChildrenContainers,\n    getById,\n    getByPath,\n    getParentContainer,\n    getAccessiblesChildrenContainers,\n    getOwnedChildrenContainers,\n    getAllAccessibleContainers,\n    isUserContainerAdmin,\n    countMembers,\n    createContainer,\n    getContainerSettings,\n    updateContainerSetting,\n    populateContainerSetting,\n    getContainersOfOwner,\n    populateFromSellsy,\n\tgetAllContainerAdmin,\n\tcontainerAdminAdd,\n\tcontainerAdminDelete\n}\nasync function populateFromSellsy(containerId){\n\tconst uri = '/api/secured/v1/katappult/contained/populateFromSellsy?containedId=' + containerId;\n\tconst url = `${API_ROOT}` + uri;\n    return _doPost(url);\n}\nasync function getContainersOfOwner(containerId, ownerId){\n\tconst uri = '/api/secured/v1/katappult/container/ofOwner?ownerId=' + ownerId + '&containerId=' + containerId;\n\tconst url = `${API_ROOT}` + uri;\n    return _doGet(url)\n}\nasync function populateContainerSetting(containerId){\n\tconst uri = '/api/secured/v1/katappult/container/populateSettings?containerId=' + containerId;\n\tconst url = `${API_ROOT}` + uri;\n    return _doPost(url);\n}\nasync function getContainerSettings(containerId){\n\tconst uri = '/api/secured/v1/katappult/container/settings?containerId=' + containerId;\n\tconst url = `${API_ROOT}` + uri;\n    return _doGet(url);\n}\nasync function updateContainerSetting(formData, containerId, settingsId){\n\tconst uri = '/api/secured/v1/katappult/container/settings?containerId=' + containerId + '&settingsId=' + settingsId;\n\tconst url = `${API_ROOT}` + uri;\n    return _doPost(url, JSON.stringify(formData));\n}\nasync  function createContainer(formData, containerId){\n\tconst uri = '/api/secured/v1/katappult/contained/create?containedId=' + containerId ;\n\tconst url = `${API_ROOT}` + uri;\n    return _doPost(url, JSON.stringify(formData));\n}\nasync function countMembers (containerId){\n\tconst uri = '/api/secured/v1/katappult/container/countMembers?containerId=' + containerId;\n\tconst url = `${API_ROOT}` + uri;\n    return _doGet(url)\n}\nasync function isUserContainerAdmin(accountId, containerId){\n\tconst uri = '/api/secured/v1/katappult/container/isUserContainerAdmin?accountId=' + accountId + '&containerId=' + containerId;\n\tconst url = `${API_ROOT}` + uri;\n    return _doGet(url)\n}\nasync function getAllContainerAdmin(containerId){\n\tconst uri = '/api/secured/v1/katappult/container/allContainerAdmin?containerId=' + containerId;\n\tconst url = `${API_ROOT}` + uri;\n\treturn _doGet(url)\n}\nasync function containerAdminAdd(accountId, containerId){\n\tconst uri = '/api/secured/v1/katappult/container/containerAdmin?accountId=' + accountId + '&containerId=' + containerId;\n\tconst url = `${API_ROOT}` + uri;\n\treturn _doPost(url)\n}\nasync function containerAdminDelete(accountId, containerId){\n\tconst uri = '/api/secured/v1/katappult/container/containerAdmin?accountId=' + accountId + '&containerId=' + containerId;\n\tconst url = `${API_ROOT}` + uri;\n\treturn _doDelete(url)\n}\n\nasync function getParentContainer(containerId){\n\tconst uri = '/api/secured/v1/katappult/container/parent?containerId=' + containerId;\n\tconst url = `${API_ROOT}` + uri;\n    return _doGet(url)\n}\nasync function getById(containerId){\n\tconst uri = '/api/secured/v1/katappult/container/byId?containerId=' + containerId;\n\tconst url = `${API_ROOT}` + uri;\n    return _doGet(url)\n}\nasync function getByPath(path){\n\tconst uri = '/api/secured/v1/katappult/container?path=' + encodeURI(path);\n\tconst url = `${API_ROOT}` + uri;\n    return _doGet(url)\n}\nasync function getChildrenContainers(containerId){\n\tconst uri = '/api/secured/v1/katappult/container/subContainers?containerId='+ containerId;\n\tconst url = `${API_ROOT}` + uri;\n    return _doGet(url)\n}\nasync function getAllAccessibleContainers(containerId, accountId){\n\tconst uri = '/api/secured/v1/katappult/container/allAccessibleContainers?userAccountId=' + accountId + '&containerId=' + containerId;\n\tconst url = `${API_ROOT}` + uri;\n    return _doGet(url)\n}\n\nasync function getOwnedChildrenContainers(containerId, accountId){\n\tconst uri = '/api/secured/v1/katappult/container/ownerSubContainers?userAccountId=' + accountId + '&containerId=' + containerId;\n\tconst url = `${API_ROOT}` + uri;\n    return _doGet(url)\n}\n\nasync function getAccessiblesChildrenContainers(containerId, accountId){\n\tconst uri = '/api/secured/v1/katappult/container/accessibleSubContainers?userAccountId=' + accountId + '&containerId=' + containerId;\n\tconst url = `${API_ROOT}` + uri;\n    return _doGet(url)\n}\n/**\n * Get the root container\n * @returns\n */\nasync function getApplicationRootContainer(){\n\tconst uri = \"/api/secured/v1/katappult/container?path=%2F\";\n\tconst url = `${API_ROOT}` + uri;\n    return _doGet(url)\n}\n/**\n * Get all lifecycles.\n *\n * @param page The page\n * @param pageSize The page size\n * @param includeParentItems Include parent items\n * @returns Promise\n */\nasync  function getAllLifecycles(containerId, page, pageSize, includeParentItems) {\n\tlet params = {page: page,pageSize:pageSize ,includeParentItems: includeParentItems};\n\tlet p = buildURLQuery(params);\n\tconst uri = '/api/secured/v1/katappult/lifecycles?'.concat(p).concat('&containerId=' + containerId);\n\tconst url = `${API_ROOT}` + uri;\n    return _doGet(url);\n}\n/**\n * Get all folder templates.\n *\n * @param page The page\n * @param pageSize The page size\n * @param includeParentItems Include parent items\n * @returns Promise\n */\nasync  function getAllFolderTemplates(page, pageSize, includeParentItems, containerId) {\n\tlet params = {page: page,pageSize:pageSize ,includeParentItems: includeParentItems};\n\tlet p = buildURLQuery(params);\n\tconst uri = '/api/secured/v1/katappult/container/folderTemplates?'.concat(p).concat('&containerId=' + containerId);\n\tconst url = `${API_ROOT}` + uri;\n    return _doGet(url);\n}\nasync  function getAllEmailTemplates(page, pageSize, includeParentItems, containerId) {\n\tlet params = {page: page,pageSize:pageSize ,includeParentItems: includeParentItems};\n\tlet p = buildURLQuery(params);\n\tconst uri = '/api/secured/v1/katappult/container/enTemplates/list?containerId=' + containerId;\n\tconst url = `${API_ROOT}` + uri;\n    return _doGet(url);\n}\n/**\n * Get all team templates.\n *\n * @param page The page\n * @param pageSize The page size\n * @param includeParentItems Include parent items\n * @returns Promise\n */\nasync  function getAllTeamTemplates(page, pageSize, includeParentItems, containerId) {\n\tlet params = {page: page,pageSize:pageSize ,includeParentItems: includeParentItems};\n\tlet p = buildURLQuery(params);\n\tconst uri = '/api/secured/v1/katappult/container/teamTemplates?'.concat(p).concat('&containerId=' + containerId);\n\tconst url = `${API_ROOT}` + uri;\n    return _doGet(url);\n}\n/**\n * Get root types.\n *\n * @param includeParentItems Include parent items\n * @returns Promise\n */\nasync  function getRootTypes(page, pageSize, includeParentItems, containerId) {\n\tlet params = {page: page,pageSize:pageSize ,includeParentItems: includeParentItems};\n\tlet p = buildURLQuery(params);\n\tconst uri = '/api/secured/v1/katappult/types/rootTypes?'.concat(p).concat(\"&containerId=\" + containerId);\n\tconst url = `${API_ROOT}` + uri;\n    return _doGet(url);\n}\n/**\n * Get all members.\n *\n * @param page The page\n * @param pageSize The page size\n * @param includeParentItems Include parent items\n * @returns Promise\n */\nasync  function getAllMembers(page, pageSize, includeParentItems, containerId) {\n\tlet params = {page: page,pageSize:pageSize ,includeParentItems: includeParentItems};\n\tlet p = buildURLQuery(params);\n\tconst uri = '/api/secured/v1/katappult/container/members?'.concat(p).concat('&containerId=' + containerId);\n\tconst url = `${API_ROOT}` + uri;\n    return _doGet(url);\n}\n","import {_doGet, buildURLQuery, API_ROOT, _doPost, _doPut, _doPostMp} from './utils/services.config';\n\n/**\n * Export\n */\nexport const lifecycleService = {\n\tdetails,\n\tpromote,\n\tsetState,\n\tsetStateWithComment,\n\tsetLinkState,\n\tdenote,\n\tstatesBySetState,\n\tstatesByAction,\n\tstatesByPromote,\n\tstatesByDenote,\n\tgetAllPossibleStatesOfLifecyle,\n\tupdateMasterAttributes,\n\tsetStateFromExternalApp,\n\tcreateLifecycle,\n\tarchive,\n\tlifecycleTransitions\n};\nasync function archive(lifecycleId, containerId) {\n\tconst uri = '/api/secured/v1/katappult/lifecycles/archive?containerId=' + containerId + '&entityId=' + lifecycleId;\n\tlet url = `${API_ROOT}` + uri\n\treturn _doPost(url)\n}\nasync function createLifecycle(formData, containerId){\n\tlet uri = '/api/secured/v1/katappult/lifecycles?containerId=' + containerId;\n\tlet url = `${API_ROOT}` + uri\n\treturn _doPostMp(url, formData)\n}\nasync function statesByAction(lifecycleId, fromState, actionName, containerId){\n\tconst uri = '/api/secured/v1/katappult/lifecycles/statesByAction?entityId=' + lifecycleId + '&fromState=' + fromState + '&actionName=' + actionName + '&containerId=' + containerId;\n\tlet url = `${API_ROOT}` + uri\n\treturn _doGet(url)\n}\nasync function updateMasterAttributes(lifecycleId, formData, containerId){\n\tconst uri = '/api/secured/v1/katappult/lifecycles/updateMasterAttributes?containerId=' + containerId + '&entityId=' + lifecycleId;\n\tlet url = `${API_ROOT}` + uri\n\treturn _doPut(url, formData)\n}\nasync function details(lifecycleId, containerId) {\n\tconst uri = '/api/secured/v1/katappult/lifecycles/details?containerId=' + containerId + '&entityId=' + lifecycleId;\n\tconst url = `${API_ROOT}` + uri;\n\treturn _doGet(url);\n}\nasync function getAllPossibleStatesOfLifecyle(lifecycleName, containerId){\n\tconst uri = '/api/secured/v1/katappult/lifecycles/allStatesOf?name=' + lifecycleName +'&containerId=' + containerId;\n\tconst url = `${API_ROOT}` + uri;\n\treturn _doGet(url);\n}\n\nasync function lifecycleTransitions(lifecycleId, containerId){\n\tconst uri = '/api/secured/v1/katappult/lifecycles/transitions?entityId=' + lifecycleId +'&containerId=' + containerId;\n\tconst url = `${API_ROOT}` + uri;\n\treturn _doGet(url);\n}\n\n\nasync function promote(lifecycleManagedId, containerId) {\n\tconst uri = '/api/secured/v1/katappult/lifecycleManaged/promote?containerId=' + containerId + '&entityId=' + lifecycleManagedId;\n\tconst url = `${API_ROOT}` + uri;\n\treturn _doPost(url);\n}\nasync function denote(lifecycleManagedId, containerId) {\n\tconst uri = '/api/secured/v1/katappult/lifecycleManaged/denote?containerId=' + containerId + '&entityId=' + lifecycleManagedId;\n\tconst url = `${API_ROOT}` + uri;\n\treturn _doPost(url);\n}\nasync function setState(lifecycleManagedId, state, containerId) {\n\tconst uri = '/api/secured/v1/katappult/lifecycleManaged/setState?state=' + state + '&containerId=' + containerId + '&entityId=' + lifecycleManagedId;\n\tconst url = `${API_ROOT}` + uri;\n\treturn _doPost(url);\n}\nasync function setStateWithComment(lifecycleManagedId, state, form, containerId) {\n\tconst uri = '/api/secured/v1/katappult/lifecycleManaged/setStateWithComment?state=' + state + '&containerId=' + containerId + '&entityId=' + lifecycleManagedId;\n\tconst url = `${API_ROOT}` + uri;\n\treturn _doPost(url, JSON.stringify(form));\n}\nasync function setStateFromExternalApp(lifecycleManagedId, state, actionName) {\n\tconst uri = '/api/secured/v1/katappult/lifecycleManaged/setStateFromExternalApp?state=' + state + '&actionName=' + actionName + '&entityId=' + lifecycleManagedId;\n\tconst url = `${API_ROOT}` + uri;\n\treturn _doPost(url);\n}\nasync function setLinkState(roleAid, roleBid, state, linkClass, containerId) {\n\tconst uri = '/api/secured/v1/katappult/lifecycleManaged/setLinkState?state=' + state + '&linkClass=' + linkClass + '&containerId=' + containerId + '&roleBid=' + roleBid + '&roleAid=' + roleAid;\n\tconst url = `${API_ROOT}` + uri;\n\treturn _doPost(url);\n}\n\nasync function statesBySetState(lifecycleManagedId, containerId) {\n\tconst uri = '/api/secured/v1/katappult/lifecycleManaged/statesBySetState?containerId=' + containerId + '&entityId=' + lifecycleManagedId;\n\tconst url = `${API_ROOT}` + uri;\n\treturn _doGet(url);\n}\nasync function statesByPromote(lifecycleManagedId, containerId) {\n\tconst uri = '/api/secured/v1/katappult/lifecycleManaged/stateByPromote?containerId=' + containerId + '&entityId=' + lifecycleManagedId;\n\tconst url = `${API_ROOT}` + uri;\n\treturn _doGet(url);\n}\nasync function statesByDenote(lifecycleManagedId, containerId) {\n\tconst uri = '/api/secured/v1/katappult/lifecycleManaged/stateByDenote?containerId=' + containerId + '&entityId=' + lifecycleManagedId;\n\tconst url = `${API_ROOT}` + uri;\n\treturn _doGet(url);\n}\n","import produce from \"immer\"\n\nconst inialState = {\n    userContext: {\n        systemPreferences:[],\n        userPreferences: [],\n        rolesInApplicationContainer: [],\n        rolesInWorkingContainer: [],\n        applicationcContainer: {},\n        workingContainer: {},\n        userAccount: {},\n        userDetails: {},\n        sessionId: 'not_authentified'\n    }\n}\n\nexport const userContextReducer = (state = inialState, action) => {\n    switch (action.type) {\n        case 'UPDATE_USER_CONTEXT':\n\n            const ns2 = produce(state, nexState => {\n                nexState.userContext = action.payload\n            })\n\n            return ns2;\n        case 'CLEAR_USER_CONTEXT':\n            const ns3 = produce(state, nexState => {\n                nexState.userContext = inialState.userContext\n            })\n            return ns3;\n        case 'SET_USER_CONTEXT_NOT_AUTH':\n            const ns4 = produce(state, nexState => {\n                let userContext = {...nexState.userContext}\n                userContext.sessionId = 'not_authentified'\n                nexState.userContext = userContext\n            })\n            return ns4;\n        default:\n            return state;\n    }\n}\n\nexport const updateUserContext = (payload) => ({\n    type: 'UPDATE_USER_CONTEXT',\n    payload: payload,\n});\n\nexport const clearUserContext = (payload) => ({\n    type: 'CLEAR_USER_CONTEXT',\n    payload: payload,\n});\n\nexport const setUserContextNotAuthentified = (payload) => ({\n    type: 'SET_USER_CONTEXT_NOT_AUTH',\n    payload: payload,\n});\n","import React, { Component } from 'react';\n\nclass RevControlledDetailsHeader extends Component {\n\n    constructor(props){\n        super(props)\n    }\n\n    getLockStatusDisplay(){\n\t\tlet isWorkingCopy = this.props.workInfo && this.props.workInfo.isWorkingCopy === true;\n\t\tlet lockIcon, className;\n\t\tif(isWorkingCopy === true){\n\t\t\tlockIcon = <i className=\"fa fa-unlock fa-md\"></i>\n\t\t\tclassName = 'workinfo-details workinfo-unlocked'\n\t\t}\n\t\telse {\n\t\t\tlockIcon = <i className=\"fa fa-lock fa-md\"></i>\n\t\t\tclassName = 'workinfo-details workinfo-locked'\n\t\t}\n\t\treturn <span className={className}>\n\t\t\t{lockIcon}\n\t\t</span>\n\t}\n\n\tgetVersionDisplay(){\n\t\tlet version = '';\n\t\tif(this.props.versionInfo || this.props.iterationInfo){\n\t\t\tif(this.props.versionInfo){\n\t\t\t\tversion = version.concat(this.props.versionInfo.versionId).concat(\".\");\n\t\t\t}\n\t\t\tif(this.props.iterationInfo){\n\t\t\t\tversion = version.concat(this.props.iterationInfo.iterationNumber);\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tversion = \"N/A\";\n\t\t}\n\t\treturn version;\n\t}\n\n\tgetNumberOrReference(){\n    \treturn <>{this.props.number}</>\n\t}\n\n\trender() {\n\t\tlet businessType = this.props.businessTypeDisplayName,\n\t\tlifecycle = this.props.lifecycleCurrentState;\n\n\t\tlet displayName = this.props.displayName,\n\t\tdescription = this.props.description;\n\n\t\tlet headerActions;\n\t\tif(this.props.headerActionsProvider){\n\t\t\theaderActions = this.props.headerActionsProvider();\n\t\t}\n\n\t\treturn (<div className={this.props.headerClassName}>\n\t\t\t\t\t<p className=\"page-title\">\n\t\t\t\t\t\t{displayName}\n\t\t\t\t\t\t{this.props.number && <span className={'rev-contr-head-ref'}>&nbsp;[{this.getNumberOrReference()}]&nbsp;</span>}\n\t\t\t\t\t\t<span>&nbsp;{this.getLockStatusDisplay()}</span> &nbsp;{this.getVersionDisplay()}\n\t\t\t\t\t</p>\n\t\t\t\t\t<div className=\"btn-toolbar\">{headerActions}</div>\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nexport default RevControlledDetailsHeader;\n","import { _doPost,_doGet,_doPut, API_ROOT, _doDelete, buildURLQuery } from './utils/services.config';\n\nexport const accountService = {\n    lock,\n\tunlock,\n\tresetPassword,\n\tupdatePassword,\n\tlostPassword,\n\tupdateLostPasswordByUser,\n\taccountDetails,\n\taccountOfParty,\n\tupdatePersonProfile,\n\tupdateOrgProfile,\n\tactivateAccount,\n\tregisterPersonWithAccount,\n\tregisterOrgWithAccount,\n\tregisterPersonWithAccountAnon,\n\tregisterOrgWithAccountAnon,\n\tcontainersMembership,\n\tisUserInContainer,\n\taddContainerMembership,\n\tremoveContainerMembership,\n\townerType,\n\townersName,\n\tisValidAccountLockToken\n}\nfunction isValidAccountLockToken(token) {\n\tconst uri = '/api/anon/v1/katappult/security/auth/isValidAccountLockToken?token=' + token;\n\tlet url = `${API_ROOT}` + uri\n\treturn _doGet(url)\n}\n/**\n * Register a new user with account\n *\n * @param formData\n * @returns\n */\nfunction registerPersonWithAccount(formData){\n\tconst uri = '/api/secured/v1/katappult/person/create';\n    let url = `${API_ROOT}` + uri\n\treturn _doPost(url, JSON.stringify(formData))\n}\nfunction registerPersonWithAccountAnon(formData){\n\tconst uri = '/katappult/people/v1/anon/api/person/register';\n    let url = `${API_ROOT}` + uri\n\treturn _doPost(url, JSON.stringify(formData))\n}\n/**\n * Register a new org with account\n *\n * @param formData\n * @returns\n */\nfunction registerOrgWithAccount(formData){\n\tconst uri = '/api/secured/v1/katappult/organization/';\n    let url = `${API_ROOT}` + uri\n\treturn _doPost(url, JSON.stringify(formData))\n}\nfunction registerOrgWithAccountAnon(formData){\n\tconst uri = '/api/secured/v1/katappult/organization/register/';\n    let url = `${API_ROOT}` + uri\n\treturn _doPost(url, JSON.stringify(formData))\n}\n/**\n * Activate an account.\n *\n * @param accountId\n * @param formData\n * @returns\n */\nfunction activateAccount(login, formData, lockToken){\n\tconst uri = '/katappult/security/inactive/auth/activateAccount?login=' + login;\n  let url = `${API_ROOT}` + uri\n\treturn _doPost(url, JSON.stringify(formData))\n}\n/**\n * Load an account with details of owner loaded in links.\n */\nfunction accountDetails(accountId, containerId) {\n\tconst uri = '/api/secured/v1/katappult/principals/account/details?containerId=' + containerId + '&accountId=' + accountId;\n    let url = `${API_ROOT}` + uri\n\treturn _doGet(url);\n}\n/**\n * Loads account of a party  with its details loaded in links.\n */\nfunction accountOfParty(partyId, containerId) {\n\tlet params = {partyId: partyId};\n\tlet p = buildURLQuery(params);\n\tconst uri = '/api/secured/v1/katappult/principals/account?containerId=' + containerId + '&' + p;\n    let url = `${API_ROOT}` + uri\n\treturn _doGet(url);\n}\n/**\n * Lock an account.\n *\n * @param {*} accountId\n */\nfunction lock(accountId, containerId) {\n\tconst uri = '/api/secured/v1/katappult/principals/account/lock?containerId=' + containerId + '&accountId=' + accountId;\n    let url = `${API_ROOT}` + uri\n\treturn _doPost(url);\n}\n/**\n * Unlock an account. Super admin can unlock user account without\n * lock token\n *\n * @param {*} accountId\n * @param {*} lockToken Mandatory if not superadmin\n */\nfunction unlock(accountId, lockToken, containerId) {\n\tlet params = {lockToken: lockToken ? lockToken : ''};\n\tlet p = buildURLQuery(params);\n    const uri = '/api/secured/v1/katappult/principals/account/unlock?containerId=' + containerId  + '&accountId=' + accountId + '&'.concat(p);\n\tlet url = `${API_ROOT}` + uri\n\treturn _doPost(url);\n}\n/**\n * Rest current password.\n *\n * @param {*} accountId\n */\nfunction resetPassword(accountId, containerId) {\n    const uri = '/api/secured/v1/katappult/principals/account/resetPassword?containerId=' + containerId + '&accountId=' + accountId;\n\tlet url = `${API_ROOT}` + uri\n\treturn _doPut(url);\n}\n/**\n * Update user password.\n *\n * @param {*} accountId\n * @param {*} formData\n */\nfunction updatePassword(accountId, formData, containerId) {\n    const uri = '/api/secured/v1/katappult/principals/account/updatePassword?containerId=' + containerId + '&accountId=' + accountId;\n    let url = `${API_ROOT}` + uri\n    return _doPut(url, formData);\n}\n/**\n * Send an email to user with its token.\n *\n * @param {*} accountId\n */\nfunction lostPassword(login) {\n    const uri = '/api/anon/v1/katappult/security/auth/lostPassword?login=' + login;\n    let url = `${API_ROOT}` + uri\n    return _doGet(url);\n}\n// by user, another reset is by admin\nfunction updateLostPasswordByUser(lockToken, formdata) {\n    const uri = '/api/anon/v1/katappult/security/auth/resetPassword?token=' + lockToken;\n\tlet url = `${API_ROOT}` + uri\n\treturn _doPut(url, formdata);\n}\n/**\n * Update profile.\n *\n * @param profileId\n * @param formData\n * @returns\n */\nfunction updatePersonProfile(profileId, formData, containerId){\n\tconst uri = '/api/secured/v1/katappult/person/update?containerId=' + containerId + '&id=' + profileId;\n    let url = `${API_ROOT}` + uri\n    return _doPut(url, formData);\n}\n/**\n * Update profile.\n *\n * @param profileId\n * @param formData\n * @returns\n */\nfunction updateOrgProfile(profileId, formData, containerId){\n\tconst uri = '/api/secured/v1/katappult/organization?containerId=' + containerId + '&id=' + profileId;\n    let url = `${API_ROOT}` + uri\n    return _doPut(url, formData);\n}\n/**\n * Get all container memberships of given user account.\n *\n * @param accountId\n * @returns\n */\nfunction containersMembership(accountId, containerId){\n\tconst uri = '/api/secured/v1/katappult/principals/account/containersMembership?containerId=' + containerId + '&accountId=' + accountId;\n    let url = `${API_ROOT}` + uri\n\treturn _doGet(url);\n}\n/**\n * Return true is the account is declared member in that container.\n *\n * @returns\n */\nfunction isUserInContainer(accountId, containerId){\n\tconst uri = '/api/secured/v1/katappult/principals/account/containersMembership/isMember?containerId=' + containerId + '&accountId=' + accountId;\n    let url = `${API_ROOT}` + uri\n\treturn _doGet(url);\n}\n/**\n * Add account as member of container.\n *\n * @param accountId\n * @param containerId\n * @returns\n */\nfunction addContainerMembership(accountId, containerId){\n\tconst uri = '/api/secured/v1/katappult/principals/account/containersMembership?containerId=' + containerId + '&accountId=' + accountId;\n    let url = `${API_ROOT}` + uri\n\treturn _doPost(url);\n}\n/**\n * Remove an account from container members\n *\n * @param accountId\n * @param containerId\n * @returns\n */\nfunction removeContainerMembership(accountId, containerId){\n\tconst uri = '/api/secured/v1/katappult/principals/account/containersMembership?containerId=' + containerId + '&accountId=' + accountId;\n    let url = `${API_ROOT}` + uri\n\treturn _doDelete(url);\n}\n/**\n * Returns the type of the owner.\n *\n * @param accoundId\n * @returns\n */\nasync function ownerType(accoundId, containerId){\n\tconst uri = \"/api/secured/v1/katappult/principals/account/ownerType?containerId=\" + containerId + '&accountId=' + accoundId;\n\tconst url = `${API_ROOT}` + uri;\n    return _doGet(url);\n}\n\nasync function ownersName(ownersName, containerId){\n\tconst uri = '/api/secured/v1/katappult/principals/account/ownersName?ownersLogin=' + ownersName + '&containerId=' + containerId\n\tconst url = `${API_ROOT}` + uri;\n\treturn _doGet(url);\n}\n","import {commons} from \"_helpers/commons\";\nimport packageJson from '../../../package.json';\n\nexport const backendRootContext = process.env.REACT_APP_CONTEXT_ROOT;\nconst proxyURL = process.env.REACT_APP_PROXY_URL;\nconst hostname = window && window.location && window.location.hostname;\nconst port = window && window.location && window.location.port;\nconst origin = window && window.location && window.location.origin;\n\nlet API_ROOTV;\nif (proxyURL) {\n    API_ROOTV = proxyURL;\n} else {\n    if (/^localhost/.test(hostname) && port && (port === '3000' || port === '3001')) {\n        if (port === '3000') {\n            API_ROOTV = backendRootContext\n                ? `http://${hostname}:8080/${backendRootContext}`\n                : `http://${hostname}:8080`;\n        }\n\n        if (port === '3001') {\n            API_ROOTV = backendRootContext\n                ? `http://${hostname}:8081/${backendRootContext}`\n                : `http://${hostname}:8081`;\n        }\n\n    } else {\n        API_ROOTV = backendRootContext\n            ? `${origin}/${backendRootContext}`\n            : `${origin}`\n    }\n}\n\nexport const API_ROOT = API_ROOTV;\n/*------------------------------------------------------------------------------------------------\n*\n* URI PROCESSOR\n*\n*------------------------------------------------------------------------------------------------*/\n/**\n * Usage buildURLQuery({name: 'x', gender: 'y'});\n * ==> name=x&gender=y\n */\nexport const buildURLQuery = params => {\n    return Object.keys(params)\n        .map(k => `${k}=${encodeURI(params[k])}`)\n        .join('&');\n};\n/*------------------------------------------------------------------------------------------------\n *\n * POST QUERY ROOT\n *\n *------------------------------------------------------------------------------------------------*/\n/**\n * Constructs a default POST query.\n *\n * @param {*} url Full URL\n * @param {*} data Data to post\n */\nexport const _doPost = async function (url, data, options) {\n    let finalurl = url.replace(\":containerId\", '_replace_this_');\n    if (data) {\n        return fetch(appendAccessToken(finalurl), {\n            timeout: options && options.timeout ? options.timeout : 15000,\n            method: \"POST\",\n            headers: {\n                'Content-Type': 'application/json',\n                'Accept': 'application/json',\n                'Authorization': commons.authorizationCookie()\n            },\n            body: data,\n        }).then(response => {\n            handleJWTError(response);\n            return response.json();\n        })\n\n    } else {\n        return fetch(appendAccessToken(finalurl), {\n            method: \"POST\",\n            headers: {\n                'Content-Type': 'application/json',\n                'Accept': 'application/json',\n                'Authorization': commons.authorizationCookie()\n            },\n        }).then(response => {\n            handleJWTError(response);\n            return response.json();\n        })\n    }\n}\n/**\n * Constructs a default POST query.\n *\n * @param {*} url Full URL\n * @param {*} data Data to post\n */\nexport const _doPostMp = async function (url, data, options) {\n    let finalurl = url.replace(\":containerId\", '_replace_this_');\n    if (data) {\n        return fetch(appendAccessToken(finalurl), {\n            method: \"POST\",\n            headers: {\n                'Accept': 'application/json',\n                'Authorization': commons.authorizationCookie()\n            },\n            body: data,\n        }).then(response => {\n            handleJWTError(response);\n            return response.json();\n        })\n    }\n}\n\nexport const _doPostWithoutResponse = async function (url, data, options) {\n    let finalurl = url.replace(\":containerId\", '_replace_this_');\n    if (data) {\n        return fetch(appendAccessToken(finalurl), {\n            timeout: options && options.timeout ? options.timeout : 15000,\n            method: \"POST\",\n            headers: {\n                'Content-Type': 'application/json',\n                'Accept': 'application/json',\n                'Authorization': commons.authorizationCookie()\n            },\n            body: data,\n        });\n\n    } else {\n        return fetch(appendAccessToken(finalurl), {\n            method: \"POST\",\n            headers: {\n                'Content-Type': 'application/json',\n                'Accept': 'application/json',\n                'Authorization': commons.authorizationCookie()\n            },\n        })\n    }\n}\n\n/*------------------------------------------------------------------------------------------------\n*\n* GET QUERY ROOT\n*\n*------------------------------------------------------------------------------------------------*/\n/**\n * Constructs a GET query.\n *\n * @param {*} url Full URL\n */\nexport const _doGet = async function (url, addSessionId, authorization, options) {\n    let finalurl = url.replace(\":containerId\", '_replace_this_');\n    finalurl = appendAccessToken(finalurl);\n\n    let response = await fetch(finalurl, {\n        timeout: options && options.timeout ? options.timeout : 15000,\n        method: \"GET\",\n        credentials: 'include',\n        headers: {\n            'Content-Type': 'application/json',\n            'Accept': 'application/json',\n            'Authorization': authorization ? authorization : commons.authorizationCookie()\n        },\n    }).then(response => {\n        return response;\n    })\n\n    handleJWTError(response);\n\n    let json;\n    if (response.status === 200) {\n        json = await response.json();\n    } else if (response.status === 204) {\n        json = {'error': '204'};\n    } else if (response && response.status === 500) {\n        json = {'error': '500'};\n    }\n\n    return json;\n}\n\nexport const _doGetText = async function (url) {\n    let finalurl = url.replace(\":containerId\", '_replace_this_');\n    return fetch(appendAccessToken(finalurl), {\n        method: \"GET\",\n        headers: {\n            'Content-Type': 'application/json',\n            'Accept': 'application/json',\n            'Authorization': commons.authorizationCookie()\n        },\n    }).then(response => {\n        handleJWTError(response);\n        return response.text();\n    })\n}\n\nexport const _doGetImage = async function (url) {\n    let finalurl = url.replace(\":containerId\", '_replace_this_');\n    let response = await fetch(appendAccessToken(finalurl), {\n        method: \"GET\",\n        headers: {\n            'Content-Type': 'application/json',\n            'Accept': 'application/json',\n            'Authorization': commons.authorizationCookie()\n        },\n    })\n        .then(response => {\n            if (response.status === 200) {\n                return response;\n            }\n            return null;\n        })\n\n    if (response === null) return response;\n    handleJWTError(response)\n\n    let text = await response.text()\n    let img = new Buffer(text, \"binary\").toString();\n    let image = btoa(\n        new Uint8Array(text)\n            .reduce((data, byte) => data + String.fromCharCode(byte), '')\n    );\n    return `data:image/png;base64,${img}`;\n}\n\nexport const _doGetBlob = async function (url) {\n    let finalurl = url.replace(\":containerId\", '_replace_this_');\n    return fetch(appendAccessToken(finalurl), {\n        method: \"GET\",\n        headers: {\n            'Content-Type': 'application/json',\n            'Accept': 'application/octet-stream',\n            'Authorization': commons.authorizationCookie()\n        },\n    })\n        .then(response => {\n            if(response.status != 200) return null;\n\n            handleJWTError(response);\n            return response.blob();\n        })\n}\n\nexport const _doPut = async function (url, data, options) {\n    let finalurl = url.replace(\":containerId\", '_replace_this_');\n    if (data) {\n        return fetch(appendAccessToken(finalurl), {\n            timeout: options && options.timeout ? options.timeout : 15000,\n            method: \"PUT\",\n            headers: {\n                'Content-Type': 'application/json',\n                'Accept': 'application/json',\n                'Authorization': commons.authorizationCookie()\n            },\n            body: JSON.stringify(data),\n        }).then(response => {\n            handleJWTError(response)\n            return response.json()\n        })\n    } else {\n        return fetch(appendAccessToken(finalurl), {\n            timeout: options && options.timeout ? options.timeout : 15000,\n            method: \"PUT\",\n            headers: {\n                'Content-Type': 'application/json',\n                'Accept': 'application/json',\n                'Authorization': commons.authorizationCookie()\n            },\n        }).then(response => {\n            handleJWTError(response)\n            return response.json()\n        })\n    }\n}\nexport const _doDelete = async function (url, data, options) {\n    let finalurl = url.replace(\":containerId\", '_replace_this_');\n    if (data) {\n        return fetch(appendAccessToken(finalurl), {\n            timeout: options && options.timeout ? options.timeout : 15000,\n            method: \"DELETE\",\n            headers: {\n                'Content-Type': 'application/json',\n                'Accept': 'application/json',\n                'Authorization': commons.authorizationCookie()\n            },\n            body: JSON.stringify(data),\n        }).then(response => {\n            handleJWTError(response)\n            return response.json()\n        })\n    } else {\n        return fetch(appendAccessToken(finalurl), {\n            method: \"DELETE\",\n            headers: {\n                'Content-Type': 'application/json',\n                'Accept': 'application/json',\n                'Authorization': commons.authorizationCookie()\n            },\n        }).then(response => {\n            handleJWTError(response)\n            return response.json()\n        })\n    }\n}\n\nfunction appendAccessToken(url) {\n    let finalUrl = url;\n    if (url.includes('/api/anon/v1/katappult/security/auth/login')) finalUrl = url;\n    if (url.includes('/v1/anon/auth/lostPassword')) finalUrl = url;\n    if (url.includes('/v1/anon/auth/resetPassword')) finalUrl = url;\n    if (url.includes('?')) {\n        finalUrl = url + '&lang=fr';\n    } else {\n        finalUrl = url + '?lang=fr';\n    }\n\n    return finalUrl.replace(/([^:])(\\/{2,})/g, \"$1/\");\n    //abc.replace(/([^:]\\/)\\/+/g, \"$1\");\n}\n\nasync function handleApplicationVersion(response, url) {\n    let token = response?.headers?.get('X-Application-Version');\n    const version = packageJson.version;\n\n    let isProd = false;\n    let isLocalhost = /^localhost/.test(hostname);\n\n    if(!isLocalhost) {\n        if (!process.env.NODE_ENV || process.env.NODE_ENV === 'development') {\n            // dev code\n            isProd = false;\n        } else {\n            // production code\n            isProd = true;\n        }\n    }\n\n    if(isProd){\n        if (!token || !version || token !== version) {\n           await refreshCacheAndReload();\n        }\n    }\n}\n\nfunction handleJWTError(response) {\n    if (response && (response === 511 || response.status === 511)) {\n        forwardToLoginPage();\n    }\n}\n\nfunction forwardToLoginPage() {\n    if (commons.authorizationCookie()) {\n        commons.katappult_core_logout();\n    }\n\n    // this will reload the application and web app resources\n    let configuredLoginURL = process.env.REACT_APP_CLIENT_LOGIN_URL;\n    window.location.href = configuredLoginURL;\n    //refreshCacheAndReload().then(r->);\n    window.location.reload(true);\n}\n\nconst refreshCacheAndReload = async () => {\n    try {\n        if (window?.caches) {\n            const { caches } = window;\n            const cacheNames = await caches.keys();\n            for (const cacheName of cacheNames) {\n                await caches.delete(cacheName);\n            }\n\n            console.log('The cache has been deleted.');\n        }\n\n        //window.location.reload(true);\n    } catch (error) {\n        console. log('An error occurred while deleting the cache.', true);\n        console.log(error, true);\n    }\n};","/**\n * This file contains all action type constants.\n * Can be used to dispatch action with redux.\n * \n * It is a common usage to have all actions types constants in one file,\n * easing maintenance and merge.\n */\n\n/**\n * Container and session id\n */\nexport const SET_USER_WORKING_CONTAINER = 'SET_USER_WORKING_CONTAINER'; \nexport const SET_APPLICATION_CONTAINER = 'SET_APPLICATION_CONTAINER';\n\n/**\n * Login and logout\n */\nexport const LOGIN_USER = 'LOGIN_USER';\nexport const LOGOUT_USER = 'LOGOUT_USER';\nexport const DOLOGIN_USER = 'DOLOGIN_USER';\n\n/**\n * GENERIC ACTIONS\n */\nexport const EDIT_FORM = 'EDIT_FORM';\nexport const CANCEL_EDIT_FORM = 'CANCEL_EDIT_FORM';\nexport const SAVE_FORM = 'SAVE_FORM';\n/**\n * PROFILE MANAGEMENT\n */\nexport const EDIT_PROFILE_SUMMARY='EDIT_PROFILE_SUMMARY'\nexport const UPDATE_PROFILE_SUMMARY='UPDATE_PROFILE_SUMMARY'\n/**\n * Account management\n */\nexport const USER_ACCOUNT_LOCKED='USER_ACCOUNT_LOCKED'\nexport const USER_ACCOUNT_UNLOCKED='USER_ACCOUNT_UNLOCKED'\nexport const USER_ACCOUNT_UPDATE_PASS='USER_ACCOUNT_UPDATE_PASS'\n/**\n * Search members\n */\nexport const SEARCHTERM_UPDATE='SEARCHTERM_UPDATE'\nexport const SEARCH_RESULTS='SEARCH_RESULTS'\n/**\n * Search header components\n */\nexport const SEARCH_HEADER_COMP_SEARCHTERM_UPDATE='SEARCH_HEADER_COMP_SEARCHTERM_UPDATE'\nexport const SEARCH_HEADER_COMP_SEARCH_RESULTS='SEARCH_HEADER_COMP_SEARCH_RESULTS'\n/**\n * Business rules\n */\nexport const BUSINESS_RULES_SEARCHCRITERIAS_UPDATE = 'BUSINESS_RULES_SEARCHCRITERIAS_UPDATE'\n/**\n * Enumerations\n */\nexport const ENUMERATIONS_LIST_UPDATE = 'ENUMERATIONS_LIST_UPDATE'\nexport const ENUMERATIONS_SELECTION_UPDATE = 'ENUMERATIONS_SELECTION_UPDATE'\n\t\t\n\nexport const SWITCH_TO_CONTAINER = 'SWITCH_TO_CONTAINER'\n\t\n\t\n\t\n\n","module.exports = __webpack_public_path__ + \"static/media/profile.9dc38257.png\";","/*\n* required polyfills\n*/\n\n/** IE9, IE10 and IE11 requires all of the following polyfills. **/\n// import 'core-js/es6/symbol'\n// import 'core-js/es6/object'\n// import 'core-js/es6/function'\n// import 'core-js/es6/parse-int'\n// import 'core-js/es6/parse-float'\n// import 'core-js/es6/number'\n// import 'core-js/es6/math'\n// import 'core-js/es6/string'\n// import 'core-js/es6/date'\n//import 'core-js/es6/array'\n// import 'core-js/es6/regexp'\n//import 'core-js/es6/map'\n// import 'core-js/es6/weak-map'\n//import 'core-js/es6/set'\n//import 'core-js/es7/object'\n\n/** IE10 and IE11 requires the following for the Reflect API. */\n// import 'core-js/es6/reflect'\n\n/** Evergreen browsers require these. **/\n// Used for reflect-metadata in JIT. If you use AOT (and only Angular decorators), you can remove.\n// import 'core-js/es7/reflect'\n\n// CustomEvent() constructor functionality in IE9, IE10, IE11\n(function () {\n\n  if ( typeof window.CustomEvent === \"function\" ) return false\n\n  function CustomEvent ( event, params ) {\n    params = params || { bubbles: false, cancelable: false, detail: undefined }\n    let evt = document.createEvent( 'CustomEvent' )\n    evt.initCustomEvent( event, params.bubbles, params.cancelable, params.detail )\n    return evt\n  }\n\n  CustomEvent.prototype = window.Event.prototype\n\n  window.CustomEvent = CustomEvent\n})()\n","import {commons} from \"_helpers/commons\";\n\nexport const coreUri = {\n  clientSideRenderedURL,\n  backOfficeViewURL,\n  backOfficeHomeURL,\n  backOfficeRealViewURL\n}\n\nfunction backOfficeHomeURL(){\n  return \"/backoffice/#/view?tab=platform&name=businessRules\";\n}\n\nfunction backOfficeRealViewURL(tabName, viewName, params){\n  let targetURL = '/view?tab=' + tabName + '&name=' + viewName;\n  if(params){\n    params.map(param => {\n      targetURL =  targetURL + '&' + param;\n    })\n  }\n\n  return targetURL;\n}\n\nfunction backOfficeViewURL(tabName, viewName, params){\n  let currentTabName = commons.getValueFromUrl('tab');\n  let targetURL = '/view?tab=' + currentTabName + '&name=' + viewName;\n\n  if(params){\n    params.map(param => {\n      targetURL =  targetURL + '&' + param;\n    })\n  }\n\n  return targetURL;\n}\n\nfunction clientSideRenderedURL(uri){\n  return process.env.PUBLIC_URL + '/backOffice/#' + uri;\n}\n\n","import React from 'react';\nimport {HashRouter, Redirect, Route, Switch} from 'react-router-dom';\nimport {createBrowserHistory} from 'history'\nimport {WaitingPane} from '_components/_common';\nimport 'react-toastify/dist/ReactToastify.css';\nimport './App.css';\n\nconst AdminLayout = React.lazy(() => import('_layouts/AdminLayout'));\nconst LoginLayout = React.lazy(() => import('_layouts/LoginLayout'));\n\n// history\nexport const browserHistory = createBrowserHistory();\nconst loading = () => <div className=\"animated fadeIn pt-3 text-center\"><WaitingPane/></div>;\n\n\nfunction App(props) {\n\n    return <>\n        <HashRouter history={browserHistory}>\n            <React.Suspense fallback={loading()}>\n                <Switch>\n                    <Route exact path=\"/login\" name=\"Login\" render={props => <LoginLayout {...props}/>}/>\n                    <Route exact path=\"/logout\" name=\"Logout\" render={props => <LoginLayout {...props}/>}/>\n                    <Route path={'/view'} name=\"Back office\" component={AdminLayout}/>\n                    <Route path='*' name=\"Unkown\" component={AdminLayout}>\n                        <Redirect to={{pathname: '/view?tab=platform&view=businessRules'}}/>\n                    </Route>\n                </Switch>\n            </React.Suspense>\n        </HashRouter>\n    </>\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n    ),\n);\n\nexport function register(config) {\n\n  const serviceWorkerInNavigator = 'serviceWorker' in navigator;\n  console.log('There is a service worker in navigator ')\n\n  if (serviceWorkerInNavigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      console.log('aborting : ' +  window.location.origin )\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        console.log('Current host is localhost, checkValidServiceWorker')\n        checkValidServiceWorker(swUrl, config);\n\n        console.log('End checkValidServiceWorker')\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log('ready checkValidServiceWorker')\n          console.log(\n              'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA',\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        console.log('Is not localhost. Just register service worker')\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  console.log('processing a registration')\n  navigator.serviceWorker\n      .register(swUrl)\n      .then(registration => {\n\n        console.log('processing a registration')\n\n        registration.onupdatefound = () => {\n          const installingWorker = registration.installing;\n          if (installingWorker == null) {\n            return;\n          }\n          installingWorker.onstatechange = () => {\n            if (installingWorker.state === 'installed') {\n              if (navigator.serviceWorker.controller) {\n                // At this point, the updated precached content has been fetched,\n                // but the previous service worker will still serve the older\n                // content until all client tabs are closed.\n                console.log(\n                    'New content is available and will be used when all ' +\n                    'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\n                );\n\n                // Execute callback\n                if (config && config.onUpdate) {\n                  config.onUpdate(registration);\n                }\n              } else {\n                // At this point, everything has been precached.\n                // It's the perfect time to display a\n                // \"Content is cached for offline use.\" message.\n                console.log('Content is cached for offline use.');\n\n                // Execute callback\n                if (config && config.onSuccess) {\n                  config.onSuccess(registration);\n                }\n              }\n            }\n          };\n        };\n      })\n      .catch(error => {\n        console.error('Error during service worker registration:', error);\n      });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  console.log('CCC:: ' + swUrl)\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n      .then(response => {\n        // Ensure service worker exists, and that we really are getting a JS file.\n        const contentType = response.headers.get('content-type');\n        if (\n            response.status === 404 ||\n            (contentType != null && contentType.indexOf('javascript') === -1)\n        ) {\n          console.log('contentType:: ' + swUrl)\n          // No service worker found. Probably a different app. Reload the page.\n          navigator.serviceWorker.ready.then(registration => {\n            console.log('ready:: ' + swUrl)\n            registration.unregister().then(() => {\n              window.location.reload();\n            });\n          });\n        } else {\n          // Service worker found. Proceed as normal.\n          console.log('processing a registration')\n          registerValidSW(swUrl, config);\n        }\n      })\n      .catch(() => {\n        console.log(\n            'No internet connection found. App is running in offline mode.',\n        );\n      });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}","import * as types from '_actions/actionTypes.js';\nimport produce from \"immer\"\n\nconst inialState = {\n\t\n}\n/**\n * Reducers for people searching\n */\nexport const searchMembersReducer = (state = inialState, action) => {\n\t  switch(action.type) {\n\t    case types.SEARCHTERM_UPDATE:\n\t    \tconst nextState = produce(state, search => {\n\t    \t\tsearch.searchTerm = action.payload.searchTerm\n\t    \t\tsearch.searchType = action.payload.searchType\n\t\t\t})\n\t    \treturn nextState\n\t    case types.SEARCH_RESULTS:\n\t    \tconst ns = produce(state, search => {\n\t    \t\tsearch.searchResults = action.payload\t\n\t\t\t})\n\t\t\treturn ns\n\t    default:\n\t    \treturn state;\n\t  }\n}","import * as types from '_actions/actionTypes.js';\nimport produce from \"immer\"\n\nconst inialState = {\n\t\n}\n/**\n * Reducers for business rules searching\n */\nexport const searchBusinessRulesReducer = (state = inialState, action) => {\n\t  switch(action.type) {\n\t    case types.BUSINESS_RULES_SEARCHCRITERIAS_UPDATE:\n\t    \tconst nextState = produce(state, search => {\n\t    \t\tsearch.rules = action.payload.rules\n\t\t\t\tsearch.types = action.payload.types\n\t\t\t\tsearch.businessType = action.payload.businessType\n\t\t\t\tsearch.businessClass = action.payload.businessClass\n\t\t\t\tsearch.searchTerm = action.payload.searchTerm\n\t\t\t})\n\t    \treturn nextState\n\t    default:\n\t    \treturn state\n\t  }\n}","import * as types from '_actions/actionTypes.js';\nimport produce from \"immer\"\n\nconst inialState = {\n\n}\nexport const enumerationsReducer = (state = inialState, action) => {\n\t  switch(action.type) {\n\t    case types.ENUMERATIONS_SELECTION_UPDATE:\n\t    \tconst nextState = produce(state, enumds => {\n\t    \t\tenumds.en = action.payload[0]\n\t    \t\tenumds.fr = action.payload[1]\n\t\t\t})\n\t    \treturn nextState\n\t    default:\n\t    \treturn state;\n\t  }\n}\n","import * as types from '_actions/actionTypes.js';\nimport produce from \"immer\"\n\nconst inialState = {\n}\n/**\n * Reducers for people searching\n */\nexport const headerSearchReducer = (state = inialState, action) => {\n\t  switch(action.type) {\n\t    case types.SEARCH_HEADER_COMP_SEARCHTERM_UPDATE:\n\t    \tconst nextState = produce(state, search => {\n\t    \t\tsearch.searchTerm = action.payload.searchTerm\n\t    \t\tsearch.criterias = action.payload.criterias\n\t\t\t})\n\t    \treturn nextState\n\t    case types.SEARCH_HEADER_COMP_SEARCH_RESULTS:\n\t    \tconst ns = produce(state, search => {\n\t    \t\tsearch.searchResults = action.payload\t\n\t\t\t})\n\t\t\treturn ns\n\t    default:\n\t    \treturn state;\n\t  }\n}","import produce from \"immer\"\n\nconst inialState = {\n\tappConfig: {\n\t\t// used in forward layout, to display page title in header\n\t\tcurrentPageTitle: '',\n\t},\n}\nexport const applicationReducer = (state = inialState, action) => {\n\t  switch(action.type) {\n\t    case 'UPDATE_APPLICATION_PROPERTIES_PAGE_TITLE':\n\t    \tconst ns1 = produce(state, appConfig => {\n\t    \t\tappConfig.currentPageTitle = action.payload\n\t\t\t\t// TODO update document title here\n\t\t\t})\n\t    \treturn ns1\n\t    \n\t    case 'APPLICATION_SET_ADMIN_HOME_ACTIVE_TAB':\n\t    \tconst ns7 = produce(state, appConfig => {\n\t    \t\tappConfig.adminHome = action.payload\n\t\t\t})\n\t    return ns7\n\n\t    case 'APPLICATION_UPDATE_LIFECYCLE_NAV_CRITERIAS':\n\t    \tconst ns9 = produce(state, appConfig => {\n\t    \t\tappConfig.lifecycleNavCriterias = action.payload\n\t\t\t})\n\t\t\treturn ns9\n\t    case 'APPLICATION_UPDATE_EMAIL_TEMPLATES_NAV_CRITERIAS':\n\t    \tconst ns10 = produce(state, appConfig => {\n\t    \t\tappConfig.emailTemplatesNavCriterias = action.payload\n\t\t\t})\n\t\t\treturn ns10\n\t    default:\n\t    \treturn state;\n\t  }\n}","import produce from \"immer\"\n\nconst inialState = {\n}\n\nexport const imagesCachesReducer = (state = inialState, action) => {\n\t  switch(action.type) {\n\t    case 'ADD_BASE64_IMAGE_TO_CACHE':\n\t    \tconst ns1 = produce(state, imageCache => {\n\t    \t\timageCache[action.payload.key] = action.payload.image\n\t\t\t})\n\t    \treturn ns1;\n\t    \t\n\t    case 'CLEAR_IMAGE_CACHE':\n\t    \tconst ns2 = produce(state, imageCache => {\n\t    \t\t\n\t\t\t})\n\t    \treturn inialState;\n\t    default:\n\t    \treturn state;\n\t  }\n}\n","import produce from \"immer\"\n\n\nconst inialState = {\n\tconfig: {\n\t\tviewName: 'emailTemplates',\n    \tlocation: 'Règles métiers',\n    \tbreadItems: [{href:'#', title:'Règles métiers'}],\n    \tviewMode: 'viewList',\n    \tmenuGroup: 'platformAdministration',\n\t},\n}\n\nexport const navigationReducer = (state = inialState, action) => {\n  switch(action.type) {\n\tcase 'SET_ADMIN_HOME_ACTIVE_TAB':\n    \tconst ns13 = produce(state, actualState => {\n    \t\tactualState.config = action.payload\n    \t\tactualState.config.activeMenu = action.payload.viewName\n\t\t})\n\t\treturn ns13\n    default:\n    \treturn state;\n  }\n}","import 'react-app-polyfill/ie9'; // For IE 9-11 support\nimport 'react-app-polyfill/ie11'; // For IE 11 support\nimport './polyfill'\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { combineReducers, createStore } from 'redux';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n// reducers\nimport {searchMembersReducer} from '_reducers/searchMembersReducer.js';\nimport {searchBusinessRulesReducer} from '_reducers/searchBusinessRulesReducer.js';\nimport {enumerationsReducer} from '_reducers/enumerationsReducer.js';\nimport {headerSearchReducer} from '_reducers/headerSearchReducer.js';\nimport {applicationReducer} from '_reducers/applicationReducer.js';\nimport {imagesCachesReducer} from '_reducers/imagesCachesReducer.js';\nimport {navigationReducer} from '_reducers/navigationReducer.js';\nimport {userContextReducer} from '_reducers/coreUserContextReducer.js';\n/*--------------------------------------------------------------------------------------------\n* REDUX STORE\n*--------------------------------------------------------------------------------------------*/\n/**\n * All reducers combined.\n * Be aware: key of reducers are crucial (Ex: 'currentUser', 'currentContainers'), it can no be renamed because\n * mapStateToProps access data inside store through this key.\n *\n */\nconst allReducers = combineReducers({\n  searchMembers: searchMembersReducer,\n  searchBusinessRules: searchBusinessRulesReducer,\n  enumerations: enumerationsReducer,\n  headerSearchComp: headerSearchReducer,\n  applicationConfig: applicationReducer,\n  imagesCaches: imagesCachesReducer,\n  navigationConfig: navigationReducer,\n  userContextStore: userContextReducer,\n    rootReducer: rootReducer,\n    serviceWorkerInitialized: false,\n    serviceWorkerUpdated: false,\n    serviceWorkerRegistration: null,\n\n});\n\nexport const store = createStore(allReducers);\nexport const SW_INIT = 'SW_INIT';\nexport const SW_UPDATE = 'SW_UPDATE';\n/*--------------------------------------------------------------------------------------------\n* ReactDOM RENDER APP\n*--------------------------------------------------------------------------------------------*/\n// make the store available to all container components in the application without passing it explicitly.\n// We only need to use it once when rendering the root component, like bellow.\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>, document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n//serviceWorker.register({\n//    onSuccess: () => store.dispatch({ type: SW_INIT }),\n//    onUpdate: reg => store.dispatch({ type: SW_UPDATE, payload: reg }),\n//});\n\n\nfunction rootReducer(state = {}, action) {\n    switch (action.type) {\n        case SW_INIT:\n            return {\n                ...state,\n                serviceWorkerInitialized: !state.serviceWorkerInitialized,\n            };\n        case SW_UPDATE:\n            return {\n                ...state,\n                serviceWorkerUpdated: !state.serviceWorkerUpdated,\n                serviceWorkerRegistration: action.payload,\n            };\n        default:\n            return state;\n    }\n}\n","/**\n * This file is all actions creators. An action creator takes a single argument in,\n * and returns an object which we refer to as an 'action'\n * \n * An action is an object that has two properties on it: 'type' and 'payload'\n * \n * -> payload: is the data we want to send to our reducer (is optional)\n * -> type: is a string for filtering actions\n */\n\nimport * as types from './actionTypes.js';\n\n/**\n * Login action, payload should be the user details and \n * account informations and session_id.\n */\nexport const loginUser = (userDetails) => ({\n    type: types.LOGIN_USER,\n    payload: userDetails\n});\nexport const logoutUser = (payload) => ({\n    type: types.LOGOUT_USER,\n    payload: payload\n});\nexport const doLoginUser = (payload)=> ({\n    type: types.DOLOGIN_USER,\n    payload: payload\n});\n\n/**\n * Set current connected user working container.\n * Some user can switch container, according to business rules.\n */\nexport const setUserWorkingContainer = (container) => ({\n    type: types.SET_USER_WORKING_CONTAINER,\n    payload: container\n});\nexport const setApplicationContainer = (container) => ({\n    type: types.SET_APPLICATION_CONTAINER,\n    payload: container\n});\n/**\n * Edit attributes group reducers\n */\nexport const updateAttributesGroup = (payload, filter) => ({\n    type: types.SET_APPLICATION_CONTAINER,\n    payload: payload,\n    filter: filter\n});\n/**\n * Account management\n */\nexport const userAccountLocked = (payload) => ({\n    type: types.USER_ACCOUNT_LOCKED,\n    payload: payload,\n});\nexport const userAccountUnLocked = (payload) => ({\n    type: types.USER_ACCOUNT_UNLOCKED,\n    payload: payload,\n});\nexport const userAccountUpdatePass = (payload) => ({\n    type: types.USER_ACCOUNT_UPDATE_PASS,\n    payload: payload,\n});\n/**\n * Search members components\n */\nexport const updateSearchMembersTerm = (payload) => ({\n    type: types.SEARCHTERM_UPDATE,\n    payload: payload,\n});\nexport const updateSearchResults = (payload) => ({\n    type: types.SEARCH_RESULTS,\n    payload: payload,\n});\n/**\n * Search all types from client header\n */\nexport const updateHeaderSearchCompSearchTerm = (payload) => ({\n    type: types.SEARCH_HEADER_COMP_SEARCHTERM_UPDATE,\n    payload: payload,\n});\nexport const updateHeaderSearchCompSearchResults = (payload) => ({\n    type: types.SEARCH_HEADER_COMP_SEARCH_RESULTS,\n    payload: payload,\n});\n/**\n * Business rules management\n */\nexport const updateBusinessRulesSearchCriterias = (payload) => ({\n    type: types.BUSINESS_RULES_SEARCHCRITERIAS_UPDATE,\n    payload: payload,\n});\n/**\n * enumerations\n */\nexport const updateEnumerationsSelection = (payload) => ({\n    type: types.ENUMERATIONS_SELECTION_UPDATE,\n    payload: payload,\n});\n\n","import {\n\t_doGet,\n\t_doGetText,\n\t_doPostMp,\n\t_doGetBlob,\n\tAPI_ROOT, _doPost, _doDelete\n}\n\tfrom './utils/services.config';\n/**\n * Default Export\n */\nexport const contentHolderService = {\n\tdownloadPrimaryContent,\n\tdownloadPrimaryContentBlob,\n\tdownloadAttachment,\n    contentInfos,\n    setPrimaryContentFile,\n    addAttachment,\n\tdeletePrimaryContent\n}\n\nasync function addAttachment(contentHolderId, formData){\n\n}\nfunction downloadAttachment(contentHolderId, attachementId){\n\n}\n\nfunction deletePrimaryContent(contentHolderId, containerId) {\n\tlet uri = '/api/secured/v1/katappult/contentHolder/deleteContent?role=primary&containerId=' + containerId + '&contentHolderId=' + contentHolderId\n\tlet url = `${API_ROOT}` + uri\n\treturn _doDelete(url)\n}\n/**\n * Download the primary content\n *\n * @param contentHolderId\n * @returns\n */\nfunction downloadPrimaryContent(contentHolderId, containerId) {\n\tlet uri = '/api/secured/v1/katappult/contentHolder/downloadContent?role=primary&containerId=' + containerId + '&contentHolderId=' + contentHolderId\n    let url = `${API_ROOT}` + uri\n\treturn _doGetText(url)\n}\n/**\n * Download primary content.\n *\n * @param contentHolderId\n * @returns\n */\nfunction downloadPrimaryContentBlob(contentHolderId, containerId) {\n\tlet uri = '/api/secured/v1/katappult/contentHolder/downloadContent?role=primary&containerId=' + containerId + '&contentHolderId=' + contentHolderId\n    let url = `${API_ROOT}` + uri\n\treturn _doGetBlob(url)\n}\n/**\n * Set primary content.\n *\n * @param contentHolderId\n * @param formData\n * @returns\n */\nfunction setPrimaryContentFile(contentHolderId, formData, containerId){\n\tlet uri = '/api/secured/v1/katappult/contentHolder/setContentFile?role=primary&containerId=' + containerId + '&contentHolderId=' + contentHolderId\n    let url = `${API_ROOT}` + uri\n\treturn _doPostMp(url, formData)\n}\n/**\n * Get content infos of given content holder.\n *\n * @param contentHolderId\n * @param role primary, attachments, all\n * @returns\n */\nfunction contentInfos(contentHolderId, role, containerId){\n\tlet uri = '/api/secured/v1/katappult/contentHolder/getContentInfo?role=' + role + '&containerId=' + containerId + '&contentHolderId=' + contentHolderId\n    let url = `${API_ROOT}` + uri\n\treturn _doGet(url)\n}\n","import {_doPost, _doGet, buildURLQuery, API_ROOT, _doPostWithoutResponse} from './utils/services.config';\n\nexport const loginService = {\n    login,\n    logout,\n    loginAsAnon,\n    postLogin\n};\n/**\n * Login to remote server\n */\nfunction login(formdata) {\n    const url = `${API_ROOT}/api/anon/v1/katappult/security/auth/login`;\n    let bodyson = \"{'username': '\".concat(formdata.login)\n        .concat(\"',\").concat(\"'password': '\").concat(formdata.password)\n        .concat(\"'}\");\n    return _doPostWithoutResponse(url, bodyson);\n}\nfunction loginAsAnon() {\n    const url = `${API_ROOT}/api/anon/v1/katappult/security/auth/login`;\n    let bodyson = \"{'username': '\".concat('epanon')\n        .concat(\"',\").concat(\"'password': '\").concat('epadmin').concat(\"'}\");\n    return _doPostWithoutResponse(url, bodyson);\n}\n/**\n * Logout\n */\nfunction logout() {\n    const url = `${API_ROOT}/api/secured/v1/katappult/security/auth/logout`;\n    return _doPost(url);\n}\n/**\n* With authorization because in some cases,\n* authorization is not in local storage yet\n*/\nasync function postLogin(authorization, containerId){\n    let contId = containerId ? containerId : ''\n\tconst url = `${API_ROOT}/api/secured/v1/katappult/security/auth/postlogin?defaultContainerId=${contId}`;\n\treturn _doGet(url, authorization);\n}\n","import { _doPost, _doGet, buildURLQuery, API_ROOT } from './utils/services.config';\n/**\n *\n */\nexport const workableService = {\n    checkin,\n    checkout,\n    undoCheckout,\n    workingCopy,\n    originalCopy,\n}\n/**\n * Get the original copy.\n *\n * @param workableId\n * @returns\n */\nfunction originalCopy(workableId, idOnly, containerId){\n    const uri = '/api/secured/v1/katappult/workables/originalCopy?containerId=' + containerId + \"&workableId=\" + workableId + \"&idOnly=\" + idOnly;\n    const url = `${API_ROOT}` + uri;\n    return _doGet(url);\n}\n/**\n * Get the working copy\n *\n * @param workableId\n * @param comment\n * @returns\n */\nfunction workingCopy(workableId, idOnly, containerId){\n    const uri = '/api/secured/v1/katappult/rc/workingCopy?containerId=' + containerId + \"&workableId=\" + workableId + \"&idOnly=\" + idOnly;\n    const url = `${API_ROOT}` + uri;\n    return _doGet(url);\n}\n/**\n * Checkout\n * @param workableId\n * @param comment\n * @returns\n */\nfunction checkout(workableId, idOnly, comment, containerId){\n    const uri = '/api/secured/v1/katappult/workables/checkout?containerId=' + containerId + \"&workableId=\" + workableId + \"&idOnly=\" + idOnly;\n    const url = `${API_ROOT}` + uri;\n    return _doPost(url);\n}\n/**\n * Checkin\n * @param workableId\n * @param comment\n * @returns\n */\nfunction checkin(workableId, comment, containerId){\n    const uri = '/api/secured/v1/katappult/workables/checkin?containerId=' + containerId  + \"&workableId=\" + workableId;\n    const url = `${API_ROOT}` + uri;\n    return _doPost(url, {'comment':'no comment'});\n}\n/**\n * Undo checkout\n * @param workableId\n * @param comment\n * @returns\n */\nfunction undoCheckout(workableId, comment, containerId){\n    const uri = '/api/secured/v1/katappult/workables/undoCheckout?containerId=' + containerId + \"&workableId=\" + workableId;\n    const url = `${API_ROOT}` + uri;\n    return _doPost(url);\n}\n","import React, { Component } from 'react';\nimport {\n\tButton,\n\tButtonGroup,\n\tInput,\n\tLabel,\n\tTable\n} from 'reactstrap';\nimport {commons} from '_helpers/commons';\nimport PropTypes from 'prop-types';\n\nconst propTypes = {\n\titems: PropTypes.array.isRequired,\n\tattribute: PropTypes.array.object,\n\tfirstRowLabel: PropTypes.bool,\n\tnewObjectFormData: PropTypes.object.isRequired,\n};\n\nconst defaultProps = {\n\titems: [],\n\tfirstRowLabel: false\n};\n/**\n *\n */\nclass AttributeArrayGroup extends Component {\n\n\tconstructor(props){\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\t'mode': 'view',\n\t\t\t'items': props.items,\n\t\t\t'initalItems': props.items\n\t\t}\n\n\t\tthis.moveDown = this.moveDown.bind(this)\n\t\tthis.moveUp = this.moveUp.bind(this)\n\t\tthis.delete = this.delete.bind(this)\n\t\tthis.save = this.save.bind(this)\n\t\tthis.footerActions = this.footerActions.bind(this)\n\t\tthis.add = this.add.bind(this)\n\t\tthis.edit = this.edit.bind(this)\n\t\tthis.cancel = this.cancel.bind(this)\n\t\tthis.handleFormChange = this.handleFormChange.bind(this)\n\t\tthis.isEditing = this.isEditing.bind(this)\n\t}\n\n\thandleFormChange(event){\n\t\tlet name = event.target.name.split('_')[0]\n\t\tlet index = event.target.name.split('_')[1]\n\t\tlet items = this.state.items.slice();\n\n\t\t//console.log('change : ' + event.target.name\t + ' , ' + event.target.value)\n\t\t//console.log('index : ' + index)\n\t\t//console.log('1 : ' + JSON.stringify(items))\n\t\t//console.log('2 : ' + JSON.stringify(this.state.items))\n\n\t\tlet d = items[index]\n\t\td[name] = event.target.value\n\t\tthis.setState({\n\t\t\titems: items,\n\t\t})\n\t}\n\n\tcancel(e){\n\t\te.preventDefault();\n\t\tlet items = this.state.initalItems.slice();\n\t\tthis.setState({\n\t\t\titems: items,\n\t\t\tmode: 'view'\n\t\t})\n\n\t\t// THIS ACTION IS VALID ONLY IN INDIVIDUAL FORM\n\t\t// IN OTHER CASE, OT IS THE RESPONSABILITY OF THE\n\t\t// WRAPPER\n\t\tif(this.props.wrapInform){\n\t\t\tlet form = document.getElementById(this.props.wrapInform)\n\t\t\tif(form) form.reset();\n\t\t}\n\t}\n\n\tsave(e){\n\t\te.preventDefault();\n\t\tlet items = this.state.items.slice();\n\t\tthis.setState({\n\t\t\tmode: 'view',\n\t\t\tinitalItems: items\n\t\t})\n\t\tthis.props.attributesListConfig.onSubmit(items)\n\t}\n\n\tadd(e){\n\t\te.preventDefault();\n\t\tlet newItems = this.state.items.slice();\n\t\tnewItems[newItems.length] = commons.clone(this.props.newObjectFormData)\n\t\tthis.setState({\n\t\t\titems: newItems\n\t\t})\n\t}\n\n\tmoveUp(e, item){\n\t\te.preventDefault();\n\n\t\tlet newItems = this.state.items.slice();\n\t\tlet a = newItems.indexOf(item);\n\t\tnewItems.splice(a, 1);\n\n\t\tlet newplace = a - 1;\n\t\tif(newplace < 0) {\n\t\t\tnewItems.splice(newItems.length + 1, 0, item);\n\t\t}\n\t\telse {\n\t\t\tnewItems.splice(newplace, 0, item);\n\t\t}\n\n\t\tthis.setState({\n\t\t\titems: newItems,\n\t\t})\n\t}\n\n\tmoveDown(e, item) {\n\t\te.preventDefault();\n\n\t\tlet newItems = this.state.items.slice();\n\t\tlet a = newItems.indexOf(item);\n\t\tnewItems.splice(a, 1);\n\n\t\tlet newplace = a + 1;\n\t\tif(newplace === newItems.length) {\n\t\t\tnewItems.splice(newItems.length, 0, item);\n\t\t}\n\t\telse if(newplace > newItems.length) {\n\t\t\tnewItems.splice(0, 0, item);\n\t\t}\n\t\telse {\n\t\t\tnewItems.splice(newplace, 0, item);\n\t\t}\n\n\t\tthis.setState({\n\t\t\titems: newItems,\n\t\t})\n\t}\n\n\tdelete(e, item){\n\t\te.preventDefault();\n\t\tlet newItems = this.state.items.slice();\n\t\tlet a = newItems.indexOf(item);\n\n\t\tnewItems.splice(a, 1);\n\t\tthis.setState({\n\t\t\titems: newItems,\n\t\t})\n\t}\n\n\tedit(e){\n\t\te.preventDefault();\n\t\tthis.setState({\n\t\t\tmode: 'edit'\n\t\t})\n\t}\n\n\tisEditing(){\n\t\treturn this.state.mode && this.state.mode ===  'edit'\n\t}\n\n\trowActions(item, colspan){\n\t\tif(this.isEditing()){\n\t\t\treturn (\n\t\t\t\t<React.Fragment>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td align=\"right\" colspan={colspan ?  colspan:4}>\n\t\t\t\t\t\t\t<table width=\"100%\">\n\t\t\t\t\t\t\t\t<tbody>\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t\t<td align=\"right\" colspan=\"2\">\n\t\t\t\t\t\t\t\t\t\t\t<ButtonGroup className=\"btn-toolbar-right\">\n\t\t\t\t\t\t\t\t\t\t\t\t<Button onClick={(e) => this.moveUp(e, item)} ><i className=\"fa fa-arrow-circle-up\"></i></Button>\n\t\t\t\t\t\t\t\t\t\t\t\t<Button onClick={(e) => this.moveDown(e, item)}><i className=\"fa fa-arrow-circle-down\"></i></Button>\n\t\t\t\t\t\t\t\t\t\t\t\t<Button onClick={(e) => this.delete(e, item)}><i className=\"fa fa-trash\"></i> Supprimer</Button>\n\t\t\t\t\t\t\t\t\t\t\t</ButtonGroup>\n\t\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t</tbody>\n\t\t\t\t\t\t\t</table>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t</tr>\n\t\t\t\t</React.Fragment>\n\t\t\t)\n\t\t}\n\t\telse {\n\t\t\treturn (<React.Fragment><tr></tr></React.Fragment>)\n\t\t}\n\t}\n\n\tfooterActions() {\n\t\tif(this.isEditing()){\n\t\t\treturn <React.Fragment>\n\t\t\t\t<div className=\"btn-toolbar-right\">\n\t\t\t\t\t<Button onClick={(e) => this.save(e)}><i className=\"fa fa-save\"></i> Sauvegarder</Button>\n\t\t\t\t\t<Button onClick={(e) => this.cancel(e)}><i className=\"fa fa-undo\"></i> Annuler</Button>\n\t\t\t\t\t<Button onClick={(e) => this.add(e)}><i className=\"fa fa-plus\"></i> Ajouter</Button>\n\t\t\t\t</div>\n\t        </React.Fragment>\n\t\t}\n\t\telse {\n\t\t\tif(this.props.canEdit === true){\n\t\t\t\treturn (\n\t\t\t\t\t<div className=\"btn-toolbar-right\">\n\t\t\t\t\t\t<Button onClick={(e) => this.edit(e)}><i className=\"fa fa-edit\"></i>&nbsp;MODIFIER</Button>\n\t\t\t\t\t</div>\n\t\t\t\t)\n\t\t\t}\n\t\t\telse {\n\t\t\t\treturn ''\n\t\t\t}\n\t\t}\n\t}\n\n\trender(){\n\t\tlet rows = [];\n\t\t// if empty\n\t\tif(this.state.items && this.state.items.length === 0){\n\t\t\treturn (\n\t\t\t\t<React.Fragment>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td colspan=\"3\">\n\t\t\t\t\t\t\t<div className=\"empty-pane\">\n\t\t\t\t\t\t\t\t<strong>Pas d'éléments</strong>\n\t\t\t\t\t\t\t\t{this.footerActions(this.props.attribute)}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t</tr>\n\t\t\t\t</React.Fragment>\n\t\t\t)\n\t\t}\n\n\t\t// if having data to display\n\t\telse {\n\t\t\tlet childRows = [], colspan = 0,  index = 0\n\n\t\t\tif(this.props.firstRowLabel === 'true'){\n\t\t\t\tthis.props.attribute.items.attributes.map(rowDef => {\n\t\t\t\t\tlet label = rowDef.name;\n\t\t\t\t\tchildRows.push(<td><strong>{label}</strong></td>);\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tif(this.state.items){\n\t\t\t\tthis.state.items.map(data => {\n\t\t\t\t\tlet cols = [], colspan = 0;\n\t\t\t\t\tthis.props.attribute.items.attributes.map(rowDef => {\n\t\t\t\t\t\tlet datakey = rowDef.dataField + \"_\" + index\n\t\t\t\t\t\tlet value = commons.getPropByString(data, rowDef.dataField);\n\t\t\t\t\t\tlet editor = commons.getInputType(rowDef);\n\n\t\t\t\t\t\tif(this.isEditing()){\n\t\t\t\t\t\t\tcols.push(\n\t\t\t\t\t\t\t\t<td><Input type={editor} defaultValue={value} name={datakey} onChange={(e) => this.handleFormChange(e)}/></td>\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tcols.push(\n\t\t\t\t\t\t\t\t<td><Label>{value}</Label></td>\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\n\t\t\t\t\tchildRows.push(<tr>{cols}</tr>);\n\t\t\t\t\tchildRows.push(this.rowActions(data, colspan, this.props.attribute));\n\t\t\t\t\tindex++\n\t\t\t\t})\n\t\t\t}\n\n\n\t\t\t// footer actions\n\t\t\tchildRows.push(\n\t\t\t\t<tr>\n\t\t\t\t\t<td colSpan={colspan === colspan ? 4 : colspan}>\n\t\t\t\t\t\t{this.footerActions(this.props.attribute)}\n\t\t\t\t\t</td>\n\t\t\t\t</tr>\n\t\t\t)\n\n\t\t\tif(this.props.wrapInform) {\n\t\t\t\tlet formId = this.props.wrapInform\n\t\t\t\treturn (\n\t\t\t\t\t<React.Fragment>\n\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t<td colSpan={colspan + 1}>\n\t\t\t\t\t\t\t\t<form id={formId}>\n\t\t\t\t\t\t\t\t\t<Table size=\"sm\" borderless className=\"noBorder\">\n\t\t\t\t\t\t\t\t\t\t<tbody>\n\t\t\t\t\t\t\t\t\t\t\t{childRows}\n\t\t\t\t\t\t\t\t\t\t</tbody>\n\t\t\t\t\t\t\t\t\t</Table>\n\t\t\t\t\t\t\t\t</form>\n\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t</tr>\n\t\t\t\t\t</React.Fragment>\n\t\t\t\t)\n\t\t\t}\n\t\t\telse {\n\t\t\t\treturn (\n\t\t\t\t\t<React.Fragment>\n\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t<td colSpan={colspan + 1}>\n\t\t\t\t\t\t\t\t<Table size=\"sm\" borderless className=\"noBorder\">\n\t\t\t\t\t\t\t\t\t<tbody>\n\t\t\t\t\t\t\t\t\t\t{childRows}\n\t\t\t\t\t\t\t\t\t</tbody>\n\t\t\t\t\t\t\t\t</Table>\n\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t</tr>\n\t\t\t\t\t</React.Fragment>\n\t\t\t\t)\n\t\t\t}\n\t\t}\n\t}\n}\n\nAttributeArrayGroup.propTypes = propTypes;\nAttributeArrayGroup.defaultProps = defaultProps;\n\n\n/**\n * Get the first key of the json data.\n * Ex: {'dod':'toto'} => dod\n * @param {*} json\n */\nconst getJsonKey = (json) => {\n\tfor(let k in json){\n\t\treturn k\n\t}\n}\nconst getJsonValue = (json) => {\n\tfor(let k in json){\n\t\treturn json[k]\n\t}\n}\n\nexport default AttributeArrayGroup;\n","import React, { Component } from 'react';\nimport { \n\tButton, \n\tButtonGroup,\n\tInput,\n} from 'reactstrap';\nimport {commons} from '_helpers/commons';\nimport PropTypes from 'prop-types';\n\nconst propTypes = {\n\titems: PropTypes.array.isRequired,\n\tattribute: PropTypes.array.object,\n};\n\nconst defaultProps = {\n\titems: [],\n};\n/**\n * Remarques :\n * 1. mode hide label (afficher que les inputs)\n * 2. layout horizontal \n */\nclass AttributeArrayObjectGroup extends Component {\n\n\tconstructor(props){\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\t'editingItems': [],\n\t\t\t'items': props.items,\n\t\t\t'initalItems': props.items,\n\t\t\t'addingNewItem': false\n\t\t}\n\n\t\tthis.delete = this.delete.bind(this)\n\t\tthis.save = this.save.bind(this)\n\t\tthis.footerActions = this.footerActions.bind(this)\n\t\tthis.add = this.add.bind(this)\n\t\tthis.edit = this.edit.bind(this)\n\t\tthis.cancel = this.cancel.bind(this)\n\t\tthis.isEditingThisItem = this.isEditingThisItem.bind(this)\n\n\t\tthis.handleFormChange = this.handleFormChange.bind(this);\n\t}\n\n\thandleFormChange(event, item){\n\t\tlet editingItems = this.state.editingItems.slice();\n\t\tlet editingindex = commons.indexOfItemInArray(item, editingItems);\n\t\tlet editingItem = editingItems[editingindex]\n\n\t\teditingItem[event.target.name] = event.target.value\n\t\tthis.setState({\n\t\t\t'editingItems': editingItems,\n\t\t})\n\t}\n\n\tcancel(e, item, formId){\n\t\te.preventDefault();\n\n\t\tif(item.id){\n\t\t\t// REPLACE EDITING ITEM BY INITIAL ITEM VALUE\n\t\t\t// AND RESET FORM\n\t\t\tlet editingItems = this.state.editingItems.slice();\n\t\t\tlet initalItems = this.state.initalItems.slice();\n\t\t\tlet items = this.state.items.slice();\n\t\t\t\n\t\t\tlet initialindex = commons.indexOfItemInArray(item, initalItems);\n\t\t\tlet editingindex = commons.indexOfItemInArray(item, editingItems);\n\t\t\tlet currentIndex = commons.indexOfItemInArray(item, items);\n\n\t\t\teditingItems.splice(editingindex, 1)\n\t\t\titems[currentIndex] = initalItems[initialindex]\n\n\t\t\tthis.setState({\n\t\t\t\t'editingItems': editingItems,\n\t\t\t})\n\n\t\t\tdocument.getElementById(formId).reset();\n\t\t}\n\t}\n\n\tsave(e, item, formId){\n\t\te.preventDefault();\n\n\t\t// REPLACE INITIAL ITEM BY EDITING ITEM VALUE\n\t\t// AND UPDATE ITEMS\n\t\tlet editingItems = this.state.editingItems.slice();\n\t\tlet initalItems = this.state.initalItems.slice();\n\t\tlet items = this.state.items.slice();\n\t\t\n\t\tlet initialindex = commons.indexOfItemInArray(item, initalItems);\n\t\tlet editingindex = commons.indexOfItemInArray(item, editingItems);\n\t\tlet currentIndex = commons.indexOfItemInArray(item, items);\n\n\t\tlet newItem = JSON.parse(JSON.stringify(editingItems[editingindex]));\n\t\titems[currentIndex] = newItem;\n\t\tinitalItems[initialindex] = newItem;\n\n\t\teditingItems.splice(editingindex, 1)\n\t\tthis.setState({\n\t\t\t'editingItems': editingItems,\n\t\t\t'initalItems': initalItems,\n\t\t\t'items': items,\n\t\t\t'addingNewItem': false\n\t\t})\n\n\t}\n\n\tadd(e){\n\t\te.preventDefault();\n\t\tlet editingItems = this.state.editingItems.slice();\n\t\tlet items = this.state.items.slice();\n\n\t\tlet clone = commons.clone(this.props.newObjectFormData)\n\t\teditingItems[editingItems.length] = clone\n\t\titems[items.length] = clone\n\t\tthis.setState({\n\t\t\t'editingItems': editingItems,\n\t\t\t'items': items,\n\t\t\t'addingNewItem': true\n\t\t})\n\t}\n\n\tdelete(e, item){\n\t\te.preventDefault();\n\t\tlet newItems = this.state.items.slice();\n\t\tlet a = newItems.indexOf(item);\n\n\t\tnewItems.splice(a, 1);\n\t\tthis.setState({\n\t\t\titems: newItems,\n\t\t})\n\t}\n\n\tedit(e, item){\n\t\te.preventDefault();\n\t\t\n\t\tlet isEditingThisItem = this.isEditingThisItem(item)\n\t\tif(!isEditingThisItem){\n\t\t\tlet editingItems = this.state.editingItems.slice()\n\t\t\tconst clone = JSON.parse(JSON.stringify(item));\n\t\t\teditingItems.push(clone)\n\t\t\tthis.setState({\n\t\t\t\t'editingItems': editingItems\n\t\t\t})\n\t\t}\n\t}\n\n\tisEditingThisItem(item){\n\t\tlet res = false\n\t\tthis.state.editingItems.map(m => {\n\t\t\tif(m.id === item.id){\n\t\t\t\tres = true\n\t\t\t}\n\t\t})\n\t\treturn res\n\t}\n\n\trowActions(item, formId){\n\t\tif(!this.isEditingThisItem(item)){\n\t\t\treturn (\n\t\t\t\t<React.Fragment>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td align=\"right\" colspan=\"2\">\n\t\t\t\t\t\t\t<table width=\"100%\">\n\t\t\t\t\t\t\t\t<tbody>\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t\t<td align=\"right\" colspan=\"2\">\n\t\t\t\t\t\t\t\t\t\t\t<ButtonGroup>\n\t\t\t\t\t\t\t\t\t\t\t\t<Button className=\"katappult-btn\" color=\"warning\" size=\"xs\" onClick={(e) => this.edit(e, item)} ><i className=\"fa fa-edit\"></i> Modifier</Button>\n\t\t\t\t\t\t\t\t\t\t\t\t<Button className=\"katappult-btn\" color=\"warning\" size=\"xs\" onClick={(e) => this.delete(e, item)}><i className=\"fa fa-trash\"></i> Supprimer</Button>\n\t\t\t\t\t\t\t\t\t\t\t</ButtonGroup>\n\t\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t</tbody>\n\t\t\t\t\t\t\t</table>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t</tr>\n\t\t\t\t</React.Fragment>\n\t\t\t)\n\t\t}\n\t\telse {\n\t\t\treturn (\n\t\t\t\t<React.Fragment>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td align=\"right\" colspan=\"2\">\n\t\t\t\t\t\t\t<table width=\"100%\">\n\t\t\t\t\t\t\t\t<tbody>\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t\t<td align=\"right\" colspan=\"2\">\n\t\t\t\t\t\t\t\t\t\t\t<ButtonGroup>\n\t\t\t\t\t\t\t\t\t\t\t\t<Button className=\"katappult-btn\" color=\"warning\" size=\"xs\" onClick={(e) => this.cancel(e, item, formId)}><i className=\"fa fa-rotate-left\"></i> Annuler</Button>\n\t\t\t\t\t\t\t\t\t\t\t\t<Button className=\"katappult-btn\" color=\"warning\" size=\"xs\" onClick={(e) => this.save(e, item)} ><i className=\"fa fa-save\"></i> Sauvegarder</Button>\n\t\t\t\t\t\t\t\t\t\t\t\t<Button className=\"katappult-btn\" color=\"warning\" size=\"xs\" onClick={(e) => this.delete(e, item)}><i className=\"fa fa-trash\"></i> Supprimer</Button>\n\t\t\t\t\t\t\t\t\t\t\t</ButtonGroup>\n\t\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t</tbody>\n\t\t\t\t\t\t\t</table>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t</tr>\n\t\t\t\t</React.Fragment>\n\t\t\t)\n\t\t}\n\t}\n\n\tfooterActions() {\n\t\tif(this.state.addingNewItem){\n\t\t\treturn <React.Fragment>\n\t\t\t\t<div></div>\n\t\t\t</React.Fragment>\n\t\t}\n\n\t\treturn (\n\t\t\t<React.Fragment>\n\t\t\t\t<Button block className=\"katappult-btn\" color=\"white\" size=\"md\" onClick={(e) => this.add(e)}><i className=\"fa fa-plus\"></i> AJouter</Button>\n\t\t\t</React.Fragment>\n\t\t)\n\t}\n\n\trender() {\n\t\t// FOOTER ACTIONS IS COMMON TO ALL BLOCS\n\t\tlet footerActions = ( \n\t\t\t<tr>\n\t\t\t\t<td colspan=\"3\" align='right'>\n\t\t\t\t\t{this.footerActions(this.props.attribute)}\n\t\t\t\t</td>\n\t\t\t</tr>\n\t\t)\n\n\t\tif(this.state.items && this.state.items.length === 0){\n\t\t\tlet rows = [];\n\t\t\trows.push(\n\t\t\t\t<div>\n\t\t\t\t\t<strong>This section is empty.</strong>\n\t\t\t\t</div>\n\t\t\t)\n\t\t\trows.push(footerActions)\n\t\t\treturn rows\n\t\t}\n\t\telse {\n\t\t\tlet blocs = []\n\t\t\tif(this.props.attribute.items && this.props.attribute.items.attributes) {\n\t\t\t\tlet indexdata = 11\n\t\t\t\tthis.state.items.map(data => {\n\n\t\t\t\t\t// FORM ID IS NEED TO RESET EACH BLOC\n\t\t\t\t\tlet formId = 'katappult_array_form_' + indexdata\n\t\t\t\t\tindexdata++\n\n\t\t\t\t\t// EACH BLOC OF DATA IS A FORM\n\t\t\t\t\t// SUBMITTED ALONE\n\t\t\t\t\tlet rows = [];\n\n\t\t\t\t\t// generates title of group here because it may depend\n\t\t\t\t\t// on some datas\n\t\t\t\t\tlet headerActions;\n\t\t\t\t\tif(this.props.attribute.headerActions) headerActions = this.props.attribute.headerActions();\n\t\t\t\t\tlet title =  this.props.attribute.title;\n\t\t\t\t\tif(this.props.attribute.arrayTitleProvider){\n\t\t\t\t\t\ttitle = this.props.attribute.arrayTitleProvider(data)\n\t\t\t\t\t}\n\n\t\t\t\t\t// THE HEADER AND HEADER ACTION OF THE BLOC\n\t\t\t\t\trows.push(\n\t\t\t\t\t\t<React.Fragment>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td colspan=\"3\">\n\t\t\t\t\t\t\t\t\t\t<label className=\"katappult-form-title-level-1\">{title}</label>\n\t\t\t\t\t\t\t\t\t\t{headerActions}\n\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t</React.Fragment>  \n\t\t\t\t\t)\n\n\t\t\t\t\t// EACH ROW OF DATA\n\t\t\t\t\tthis.props.attribute.items.attributes.map(rowDef => {\n\t\t\t\t\t\tlet label = rowDef.name\n\t\t\t\t\t\tlet value = commons.getPropByString(data, rowDef.dataField);\n\t\t\t\t\t\tlet editor = commons.getInputType(this.props.attribute);\n\t\t\t\t\t\trows.push(\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td><label>{label}</label></td> \n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t<Input type={editor} defaultValue={value} name={rowDef.dataField} \n\t\t\t\t\t\t\t\t\t\tid={rowDef.dataField}\n\t\t\t\t\t\t\t\t\t\tonChange={(e) => this.handleFormChange(e, data)}/>\n\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t);\n\t\t\t\t\t});\n\n\t\t\t\t\t// action on the row (group)\n\t\t\t\t\trows.push(this.rowActions(data, formId));\n\n\t\t\t\t\tblocs.push(\n\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t<form id={formId}>\n\t\t\t\t\t\t\t\t\t<table width=\"100%\">\n\t\t\t\t\t\t\t\t\t\t<tbody>\n\t\t\t\t\t\t\t\t\t\t\t{rows}\n\t\t\t\t\t\t\t\t\t\t</tbody>\n\t\t\t\t\t\t\t\t\t</table>\n\t\t\t\t\t\t\t\t</form>\n\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t</tr>\n\t\t\t\t\t)\n\t\t\t\t})\n\n\t\t\t\t// FOOTER ACTIONS IS COMMON TO ALL BLOCS\n\t\t\t\tblocs.push(footerActions)\n\t\t\t}\t\n\n\t\t\treturn (<React.Fragment>\n\t\t\t\t{blocs}\n\t\t\t</React.Fragment>)\n\t\t}\n\t}\n}\n\nAttributeArrayObjectGroup.propTypes = propTypes;\nAttributeArrayObjectGroup.defaultProps = defaultProps;\n\nexport default AttributeArrayObjectGroup;\n\n\n","import React, { Component } from 'react';\nimport {Label, Table, Input} from 'reactstrap';\nimport PropTypes from 'prop-types';\nimport {commons} from '_helpers/commons';\nimport AttributeArrayGroup from './AttributeArrayGroup.js';\nimport AttributeArrayObjectGroup from './AttributeArrayObjectGroup.js';\nimport { Form } from 'react-bootstrap'\nimport DatePicker from \"react-datepicker\";\nimport moment from 'moment';\nimport Button from 'react-bootstrap/Button'\nimport \"react-datepicker/dist/react-datepicker.css\";\n\nconst propTypes = {\n\tdata: PropTypes.object,\n\tattributesListConfig: PropTypes.object.isRequired,\n\tcardClassName: PropTypes.string,\n\torientation: PropTypes.string,\n\tdisplayHeader: PropTypes.bool,\n\tactions: PropTypes.func,\n};\n\nconst defaultProps = {\n\tcardClassName: \" no-border\",\n\torientation: \"horizontal\",\n\tdisplayHeader: false\n};\n\n/**\n * Displays a list of attributes grouped in table.\n */\nclass AttributeListGroup extends Component {\n\n\tconstructor(props){\n\t\tsuper(props)\n\t\tthis.state = {\n\t\t\tformsState: [],\n\t\t\tformValidated: false,\n\t\t\teditingFormData: props.data === undefined ? '{}' : props.data.attributes,\n\t\t\tinitialData: props.data === undefined ? '{}' : props.data,\n\t\t\terrors: []\n\t\t}\n\n\t\tthis.standardFooterActions = this.standardFooterActions.bind(this)\n\t\tthis.standardEditForm = this.standardEditForm.bind(this)\n\t\tthis.standardSaveForm = this.standardSaveForm.bind(this)\n\t\tthis.standardResetForm = this.standardResetForm.bind(this)\n\t\tthis.handleFormChange = this.handleFormChange.bind(this)\n\t\tthis.isEditing = this.isEditing.bind(this)\n\t}\n\n\thandleFileChange(event){\n\n\t}\n\n\thandleFormChange(event, name, type, pattern){\n\t\tlet editingFormData = {...this.state.editingFormData}\n\t\tlet attPath = name ? name : event.target.name\n\t\t/*if(attPath.includes('.')) {\n\t\t\tlet one = attPath.split('.')[0]\n\t\t\tlet two = attPath.split('.')[1]\n\t\t\tattPath = two;\n\t\t}*/\n\n\t\t//attPath = attPath.startsWith('yes_no_') ? attPath.split('yes_no_')[1] : attPath;\n\n\t\t/*let one = attPath.split('.')[0]\n        let two = attPath.split('.')[1]\n        console.log('attPath :: ' + attPath)\n        console.log('editingFormData :: ' + editingFormData)\n        let editingFormData0 = editingFormData[one]\n        editingFormData0[two] = event.target.value\n    }\n    else {*/\n\t\t// for date field, returns date directly not the\n\t\t// component\n\t\tif(event && event.target && event.target.type === 'checkbox'){\n\t\t\tif(event.target.name.startsWith('yes_no_')){\n\t\t\t\teditingFormData[attPath.split('yes_no_')[1]] = event.target.checked\n\t\t\t}\n\t\t\telse {\n\t\t\t\tlet datas = editingFormData[attPath] ? editingFormData[attPath].split(';') : []\n\t\t\t\tif(event.target.checked){\n\t\t\t\t\tdatas.push(event.target.value)\n\t\t\t\t\teditingFormData[attPath] = datas.join(';')\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tif(datas.length <= 1){\n\t\t\t\t\t\teditingFormData[attPath] = ''\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tconst index = datas.indexOf(event.target.value);\n\t\t\t\t\t\tif(index !== -1) datas.splice(index, 1);\n\t\t\t\t\t\teditingFormData[attPath] = datas.join(';')\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse if(event && event.target && event.target.type === 'radio'){\n\t\t\teditingFormData[attPath] = event.target.value\n\t\t}\n\t\telse if(type && type === 'date'){\n\t\t\teditingFormData[attPath] = event != null ? moment(event).format(\"YYYYMMDD\") : null\n\t\t}\n\t\telse if(type && type === 'datetime'){\n\t\t\teditingFormData[attPath] = event != null ? moment(event).format(\"YYYYMMDDHHmmss\") : null\n\t\t}\n\t\telse {\n\t\t\teditingFormData[attPath] = event.target ? event.target.value : event;\n\t\t\tif(event.target.type === 'file') {\n\t\t\t\tthis.setState({masterFile: event.target.files[0]})\n\t\t\t}\n\t\t}\n\t\t//}\n\n\t\tif(pattern){\n\t\t\tif(event.target.value.match(pattern)){\n\t\t\t\tif(this.props.onFormChange) this.props.onFormChange(editingFormData)\n\t\t\t\tthis.setState({editingFormData: editingFormData})\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tif(this.props.onFormChange) this.props.onFormChange(editingFormData)\n\t\t\tthis.setState({editingFormData: editingFormData})\n\t\t}\n\t}\n\n\tsetFormDataValue(key, value){\n\t\tlet editingFormData = {...this.state.editingFormData}\n\t\teditingFormData[key] = value\n\t\tthis.setState({\n\t\t\teditingFormData: editingFormData,\n\t\t})\n\t}\n\n\tstandardEditForm(e, token){\n\t\te.preventDefault()\n\t\tlet formsState = [...this.state.formsState]\n\t\tformsState[token] = 'edit'\n\n\t\tif(!this.state.editingFormData){\n\t\t\tthis.setState({\n\t\t\t\tformsState: formsState,\n\t\t\t\teditingFormData: {}\n\t\t\t})\n\t\t}\n\t\telse {\n\t\t\tthis.setState({\n\t\t\t\tformsState: formsState,\n\t\t\t})\n\t\t}\n\t}\n\n\tstandardSaveForm(e, token, attributesListConfig){\n\t\te.preventDefault()\n\n\t\tif(attributesListConfig.processing){\n\t\t\tattributesListConfig.processing()\n\t\t}\n\n\t\tlet formData = {...this.state.editingFormData}\n\t\te.preventDefault();\n\t\te.stopPropagation();\n\n\t\tlet newErrors = []\n\t\tif(attributesListConfig.formValidity) {\n\t\t\tnewErrors = attributesListConfig.formValidity(formData)\n\t\t}\n\n\t\tif (attributesListConfig.endProcessing) {\n\t\t\tattributesListConfig.endProcessing()\n\t\t}\n\n\t\tif (Object.keys(newErrors).length > 0) {\n\t\t\tthis.setState({errors: newErrors})\n\t\t} else {\n\t\t\tlet formsState = [...this.state.formsState]\n\t\t\tformsState[token] = 'view'\n\t\t\tif(this.state.masterFile){\n\t\t\t\tformData.masterFile = this.state.masterFile\n\t\t\t}\n\n\t\t\t// THIS METHOD SHOULD COLLECT FORM DATA\n\t\t\t// SEND REDUX ACTION EVENT TO INFORM FORM OWNER TO UPDATE DATA IN REMOTE API\n\t\t\t// THE OWNER WILL THE UPDATE STATE AND VIEW WILL BE REFRESHED\n\t\t\tif(attributesListConfig.onSubmit){\n\t\t\t\tlet result = attributesListConfig.onSubmit(formData)\n\t\t\t\tif(result){ // is always undefined, client should update view\n\t\t\t\t\tthis.setState({\n\t\t\t\t\t\tformsState: formsState,\n\t\t\t\t\t\tformValidated: true\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tstandardResetForm(e, token){\n\t\te.preventDefault()\n\t\tlet formsState = this.state.formsState.slice()\n\t\tformsState[token] = 'view'\n\t\tlet editingFormData = {...this.state.initialData}\n\t\tthis.setState({\n\t\t\tformsState: formsState,\n\t\t\teditingFormData: editingFormData.attributes\n\t\t})\n\n\t\tlet form = document.getElementById(token.split('_view')[0]);\n\t\tif(form) form.reset();\n\t}\n\n\tstandardFooterActions = (formId, attributesListConfig) => {\n\t\tlet token = formId + \"_view\",\n\t\t\tsaveButtonTitle = attributesListConfig.saveButtonTitle ? attributesListConfig.saveButtonTitle : \"Sauvegarder\";\n\n\t\tif(this.state.formsState[token] === 'edit' || this.props.formMode === 'create_object') {\n\t\t\tif(this.props.formMode === 'create_object'){\n\t\t\t\treturn (\n\t\t\t\t\t<React.Fragment>\n\t\t\t\t\t\t\t{this.props.additionalWizardLeftActions && this.props.additionalWizardLeftActions()}\n\t\t\t\t\t\t\t<Button block className={attributesListConfig.saveButtonClassName}\n\t\t\t\t\t\t\t\t\tonClick={(e) => this.standardSaveForm(e, token, attributesListConfig)}> {saveButtonTitle}\n\t\t\t\t\t\t\t\t{attributesListConfig.saveButtonIcon}\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t</React.Fragment>\n\t\t\t\t)\n\t\t\t}\n\t\t\telse {\n\t\t\t\treturn (\n\t\t\t\t\t<React.Fragment>\n\t\t\t\t\t\t<div className=\"float-right\">\n\t\t\t\t\t\t\t<Button onClick={(e) => this.standardSaveForm(e, token, attributesListConfig)}> <i className=\"fa fa-save\"></i> Enregistrer</Button>\n\t\t\t\t\t\t\t<Button onClick={(e) => this.standardResetForm(e, token)}> <i className=\"fa fa-undo\"></i> Annuler</Button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</React.Fragment>\n\t\t\t\t)\n\t\t\t}\n\t\t}\n\t\telse if(!this.state.formsState[token] || this.state.formsState[token] === 'view') {\n\t\t\tif(this.props.canEdit){\n\t\t\t\treturn (\n\t\t\t\t\t<React.Fragment>\n\t\t\t\t\t\t<div className=\"float-right\">\n\t\t\t\t\t\t\t<Button onClick={(e) => this.standardEditForm(e, token)}><i className=\"fa fa-edit\"></i> Modifier</Button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</React.Fragment>\n\t\t\t\t)\n\t\t\t}\n\t\t\telse {\n\t\t\t\treturn <hr/>\n\t\t\t}\n\t\t}\n\t}\n\n\tprocessGroup(attributes) {\n\t\tconst attrs = [];\n\t\tif(attributes && attributes.length > 0){\n\t\t\tlet index = 0;\n\n\t\t\tattributes.map(attribute => {\n\n\t\t\t\tindex++;\n\t\t\t\tlet lastRow = index === attributes.length;\n\n\t\t\t\tif(attribute.type && (attribute.type === 'custom')) {\n\t\t\t\t\tif(attribute.displayComponent){\n\t\t\t\t\t\tattrs.push(attribute.displayComponent())\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if(attribute.type && (attribute.type === 'object')) {\n\t\t\t\t\tattrs.push(\n\t\t\t\t\t\t<React.Fragment>\n\t\t\t\t\t\t\t<tr className=\"noBorder\">\n\t\t\t\t\t\t\t\t<td colSpan=\"3\">\n\t\t\t\t\t\t\t\t\t<div className=\"spacer-20\"></div>\n\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t<tr className=\"noBorder\">\n\t\t\t\t\t\t\t\t<td colSpan=\"3\" className=\"paddingless\">\n\t\t\t\t\t\t\t\t\t<label className=\"katappult-form-title-level-1\">{attribute.title}</label>\n\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t</React.Fragment>\n\t\t\t\t\t)\n\t\t\t\t\tattribute.items.map(a => {\n\t\t\t\t\t\tattrs.push(this.simpleHRow(a));\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t\telse if(attribute.type && (attribute.type === 'objectarray'\n\t\t\t\t\t|| attribute.type === 'editableLabelObjectarray')) {\n\n\t\t\t\t\t// for objectarray form, title is computed on this level\n\t\t\t\t\t// when it does not repeated on each bloc of array.\n\t\t\t\t\t// If need to repeat it, use arrayTitleProvider\n\t\t\t\t\tlet headerActions;\n\t\t\t\t\tif(attribute.headerActions) headerActions = attribute.headerActions();\n\t\t\t\t\tlet title =  attribute.title;\n\t\t\t\t\tif(attribute.title || attribute.titleProvider){\n\t\t\t\t\t\ttitle = attribute.title ? attribute.title : attribute.titleProvider()\n\t\t\t\t\t\tattrs.push(\n\t\t\t\t\t\t\t<React.Fragment>\n\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t<td colSpan=\"3\" className=\"paddingless\">\n\t\t\t\t\t\t\t\t\t\t<label className=\"katappult-form-title-level-1\">{title}</label>\n\t\t\t\t\t\t\t\t\t\t<div className=\"float-right\">\n\t\t\t\t\t\t\t\t\t\t\t{headerActions}\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t</React.Fragment>\n\t\t\t\t\t\t)\n\t\t\t\t\t}\n\t\t\t\t\tattrs.push(this.simpleArrayRow(attribute));\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tlet rowActions = attribute.rowActions ? attribute.rowActions() : \"\";\n\t\t\t\t\tif(\"horizontal\" === this.props.orientation) {\n\t\t\t\t\t\tif(rowActions){\n\t\t\t\t\t\t\tattrs.push(this.actionableHRow(attribute));\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tattrs.push(this.simpleHRow(attribute, lastRow));\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tattrs.push(this.simpleVRow(attribute, lastRow))\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\treturn attrs;\n\t}\n\n\tprocessHeader(){\n\t\tlet header, headerActions;\n\t\tif(this.props.displayHeader === true && this.props.attributesListConfig.headerActions) {\n\t\t\theaderActions = this.props.attributesListConfig.headerActions()\n\t\t}\n\n\t\tif(this.props.displayHeader === true && this.props.attributesListConfig.title) {\n\t\t\theader = <tr width=\"100%\">\n\t\t\t\t<td colSpan=\"3\" className=\"paddingless\">\n\t\t\t\t\t<h3 className=\"form-title-level-0\">{this.props.attributesListConfig.title}</h3>\n\t\t\t\t\t<div className=\"float-right\">\n\t\t\t\t\t\t{headerActions}\n\t\t\t\t\t</div>\n\t\t\t\t</td>\n\t\t\t</tr>\n\t\t}\n\n\t\tif(this.props.displayHeader === true && this.props.attributesListConfig.titleProvider) {\n\t\t\theader = <tr>\n\t\t\t\t<td colSpan=\"3\" className=\"paddingless\">\n\t\t\t\t\t<h3>{this.props.attributesListConfig.titleProvider()}</h3>\n\t\t\t\t\t<div className=\"float-right\">\n\t\t\t\t\t\t{headerActions}\n\t\t\t\t\t</div>\n\t\t\t\t</td>\n\t\t\t</tr>\n\t\t}\n\t\treturn header;\n\t}\n\n\t/**\n\t * Attribute array ca be:\n\t * 1. An array of string\n\t * 2. An array of object\n\t *\n\t * Array of string (stringarray) example: {email:[\n\t *  'toto@me.com','tata@me.com',\n\t * ]\n\t *\n\t * Array of object (editableLabelObjectarray) example:\n\t * phones: [\n\t *   \t{'Home phone': '33 11 123 12'},\n\t *   \t{'Mobile phone': '32 12 123 12'},\n\t * ]\n\t * Array of object labels can be editable\n\t */\n\tsimpleArrayRow(attribute) {\n\t\tconst rootdata = this.props.data;\n\t\tif(attribute.type === 'objectarray' || attribute.type === 'editableLabelObjectarray') {\n\n\t\t\tlet arrayOfvalues = commons.getPropByString(rootdata, attribute.dataField);\n\t\t\tif(!arrayOfvalues || arrayOfvalues === '') arrayOfvalues = []\n\t\t\t// in this case, the header is not repeated for each line bloc\n\t\t\t// we just display each row with action, unique header and footer actions\n\t\t\tif(attribute.type === 'editableLabelObjectarray'){\n\t\t\t\tlet formId = 'formid_array_group_1'\n\t\t\t\treturn <AttributeArrayGroup {...this.props}\n\t\t\t\t\t\t\t\t\t\t\tcanEdit={this.props.canEdit}\n\t\t\t\t\t\t\t\t\t\t\titems={arrayOfvalues}\n\t\t\t\t\t\t\t\t\t\t\tattribute={attribute}\n\t\t\t\t\t\t\t\t\t\t\twrapInform={formId}/>\n\t\t\t}\n\t\t\telse {\n\t\t\t\tlet rows = <AttributeArrayObjectGroup {...this.props} items={arrayOfvalues} attribute={attribute}/>\n\t\t\t\treturn (\n\t\t\t\t\t<React.Fragment>\n\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t<td colSpan=\"3\">\n\t\t\t\t\t\t\t\t<table width=\"100%\" id=\"dt-form\">\n\t\t\t\t\t\t\t\t\t<tbody>{rows}</tbody>\n\t\t\t\t\t\t\t\t</table>\n\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t<td colSpan=\"3\"></td>\n\t\t\t\t\t\t</tr>\n\t\t\t\t\t</React.Fragment>\n\t\t\t\t)\n\t\t\t}\n\t\t}\n\t}\n\n\trowActions(attribute){\n\t\tconst rowActions = attribute.items.rowActions ? attribute.items.rowActions() : '';\n\t\treturn \t(\n\t\t\t<tr>\n\t\t\t\t<td colspan=\"2\"  align=\"right\">{rowActions}</td>\n\t\t\t</tr>\n\t\t)\n\t}\n\n\tsimpleVRow(attribute) {\n\t\tconst data = this.state.editingFormData;\n\t\tlet val = commons.getPropByString(data, attribute.dataField);\n\t\tlet editor = attribute.type ? attribute.type : 'text';\n\t\tlet pattern = attribute.pattern;\n\n\t\treturn (\n\t\t\t<React.Fragment>\n\t\t\t\t<tr className=\"td-left\">\n\t\t\t\t\t<td>{attribute.name}</td>\n\t\t\t\t</tr>\n\t\t\t\t<tr className=\"td-left\">\n\t\t\t\t\t<td><Input type={editor} defaultValue={val}\n\t\t\t\t\t\t\t   autoComplete={'off'}\n\t\t\t\t\t\t\t   onChange={(e) => this.handleFormChange(e, null, null, pattern)}\n\t\t\t\t\t\t\t   name={attribute.dataField} pattern={attribute.pattern}/>\n\t\t\t\t\t</td>\n\t\t\t\t</tr>\n\t\t\t</React.Fragment>\n\t\t)\n\t}\n\n\tsimpleHRow(attribute, lastRow) {\n\n\t\tif(this.isEditing() && !attribute.readOnly){\n\n\t\t\tconst data = this.state.editingFormData;\n\t\t\tlet val = data ? commons.getPropByString(data, attribute.dataField) : '';\n\t\t\tlet editor = commons.getInputType(attribute);\n\t\t\tlet showLabel = attribute.labelLess !== 'true';\n\n\t\t\tlet feedBack =  <Form.Control.Feedback type=\"invalid\">\n\t\t\t\t{attribute.invalidFeedBack ? attribute.invalidFeedBack : 'Valeur requise'}\n\t\t\t</Form.Control.Feedback>\n\n\t\t\tif(attribute.editorComponent){\n\t\t\t\treturn  <Form.Group className=\"field field-string\" >\n\t\t\t\t\t{showLabel && <Form.Label>{attribute.name}</Form.Label>}\n\t\t\t\t\t{attribute.editorComponent()}\n\t\t\t\t</Form.Group>\n\t\t\t}\n\n\t\t\tif(\"select\" === editor && attribute.enumProvider){\n\t\t\t\tlet options = [], enums = attribute.enumProvider(this.state.editingFormData);\n\t\t\t\tif(!attribute.required){\n\t\t\t\t\toptions.push(<option value=''>...</option>)\n\t\t\t\t}\n\n\t\t\t\tenums.map(e => {\n\t\t\t\t\tlet opt = <option value={e.key}>{e.value}</option>\n\t\t\t\t\toptions.push(opt)\n\t\t\t\t})\n\n\t\t\t\treturn (\n\t\t\t\t\t<React.Fragment>\n\t\t\t\t\t\t<Form.Group className=\"field field-string\">\n\t\t\t\t\t\t\t{showLabel && <Form.Label>{attribute.name}</Form.Label>}\n\t\t\t\t\t\t\t<Form.Control as=\"select\"\n\t\t\t\t\t\t\t\t\t\t  className={'field-select'}\n\t\t\t\t\t\t\t\t\t\t  type={'select'}\n\t\t\t\t\t\t\t\t\t\t  value={val}\n\t\t\t\t\t\t\t\t\t\t  isInvalid={!!this.state.errors[attribute.dataField]}\n\t\t\t\t\t\t\t\t\t\t  onChange={this.handleFormChange}\n\t\t\t\t\t\t\t\t\t\t  name={attribute.dataField}>\n\t\t\t\t\t\t\t\t{options}\n\t\t\t\t\t\t\t</Form.Control>\n\t\t\t\t\t\t\t{feedBack}\n\t\t\t\t\t\t</Form.Group>\n\t\t\t\t\t</React.Fragment>\n\t\t\t\t)\n\t\t\t}\n\n\t\t\tif('yesno' === editor){\n\t\t\t\treturn <Form.Group className=\"field field-string\" >\n\t\t\t\t\t<Form.Check\n\t\t\t\t\t\ttype={'checkbox'}\n\t\t\t\t\t\tlabel={attribute.name}\n\t\t\t\t\t\tonChange={e=>this.handleFormChange(e)}\n\t\t\t\t\t\tname={'yes_no_' + attribute.dataField}\n\t\t\t\t\t\tchecked={val === true ? 'checked' : ''}\n\t\t\t\t\t\tisInvalid={!!this.state.errors[attribute.dataField]}\n\t\t\t\t\t\tvalue={val}\n\t\t\t\t\t\trequired={attribute.required}>\n\t\t\t\t\t</Form.Check>\n\t\t\t\t\t{feedBack}\n\t\t\t\t</Form.Group>\n\t\t\t}\n\n\n\t\t\tif(\"date\" === editor){\n\t\t\t\t// date must be converted in that format\n\t\t\t\t// otherwise the dislayed date in input is wrong\n\t\t\t\t//val = val.split(' ')[0]\n\t\t\t\t//val = moment(str, 'YYYY-MM-DD')\n\t\t\t\tval = val ? moment(val, 'YYYYMMDD') : null\n\t\t\t\tlet date = val ? val.toDate() : null;\n\t\t\t\tconst placeholder = attribute.placeHolder ? attribute.placeHolder : 'dd/mm/yyyy'\n\t\t\t\treturn (\n\t\t\t\t\t<Form.Group className=\"field field-string\" >\n\t\t\t\t\t\t{showLabel && <Form.Label>{attribute.name}</Form.Label>}\n\t\t\t\t\t\t<DatePicker\n\t\t\t\t\t\t\tselected={date}\n\t\t\t\t\t\t\tisInvalid={!!this.state.errors[attribute.dataField]}\n\t\t\t\t\t\t\tonChange={e => this.handleFormChange(e, attribute.dataField, 'date')}\n\t\t\t\t\t\t\tplaceholderText={attribute.placeHolder}\n\t\t\t\t\t\t\tdateFormat=\"dd-MM-yyyy\"\n\t\t\t\t\t\t\tisClearable\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t{feedBack}\n\t\t\t\t\t</Form.Group>\n\t\t\t\t)\n\t\t\t}\n\t\t\tif(\"datetime\" === editor){\n\t\t\t\t// date must be converted in that format\n\t\t\t\t// otherwise the dislayed date in input is wrong\n\t\t\t\t//val = val.split(' ')[0]\n\t\t\t\t//val = moment(str, 'YYYY-MM-DD')\n\t\t\t\tval = val ? moment(val, 'YYYYMMDDHHmmss') : null\n\t\t\t\tlet date = val ? val.toDate() : null;\n\t\t\t\treturn (\n\t\t\t\t\t<Form.Group className=\"field field-string\" >\n\t\t\t\t\t\t{showLabel && <Form.Label>{attribute.name}</Form.Label>}\n\t\t\t\t\t\t<DatePicker\n\t\t\t\t\t\t\tselected={date}\n\t\t\t\t\t\t\tshowTimeSelect\n\t\t\t\t\t\t\twithPortal\n\t\t\t\t\t\t\tisClearable\n\t\t\t\t\t\t\tisInvalid={!!this.state.errors[attribute.dataField]}\n\t\t\t\t\t\t\tonChange={e => this.handleFormChange(e, attribute.dataField, 'datetime')}\n\t\t\t\t\t\t\tplaceholderText={attribute.placeHolder}\n\t\t\t\t\t\t\tdateFormat=\"dd-MM-yyyy HH:mm\"\n\t\t\t\t\t\t\ttimeFormat=\"HH:mm\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t{feedBack}\n\t\t\t\t\t</Form.Group>\n\t\t\t\t)\n\t\t\t}\n\n\t\t\tif('textarea' === editor){\n\t\t\t\treturn (\n\t\t\t\t\t<Form.Group className=\"field field-string\" >\n\t\t\t\t\t\t{showLabel && <Form.Label>{attribute.name}</Form.Label>}\n\t\t\t\t\t\t<Form.Control placeholder={attribute.placeHolder}\n\t\t\t\t\t\t\t\t\t  autoComplete={'off'}\n\t\t\t\t\t\t\t\t\t  className={''}\n\t\t\t\t\t\t\t\t\t  isInvalid={!!this.state.errors[attribute.dataField]}\n\t\t\t\t\t\t\t\t\t  onChange={e=>this.handleFormChange(e)}\n\t\t\t\t\t\t\t\t\t  name={attribute.dataField}\n\t\t\t\t\t\t\t\t\t  defaultValue={val}\n\t\t\t\t\t\t\t\t\t  value={val} type={attribute.type ? attribute.type: 'textarea'}\n\t\t\t\t\t\t\t\t\t  as=\"textarea\" rows=\"4\"\n\t\t\t\t\t\t\t\t\t  required={attribute.required}/>\n\t\t\t\t\t\t{feedBack}\n\t\t\t\t\t</Form.Group>\n\t\t\t\t)\n\t\t\t}\n\n\t\t\tif('checkbox' === editor && attribute.enumProvider) {\n\t\t\t\tconst result = attribute.enumProvider(this.state.editingFormData).map((data) =>\n\t\t\t\t\t<Form.Check\n\t\t\t\t\t\ttype={'checkbox'}\n\t\t\t\t\t\tonChange={e=> this.handleFormChange(e)}\n\t\t\t\t\t\tisInvalid={!!this.state.errors[attribute.dataField]}\n\t\t\t\t\t\tname={attribute.dataField}\n\t\t\t\t\t\tchecked={val.split(';').includes(data.key) ? 'checked' : ''}\n\t\t\t\t\t\tvalue={data.key}\n\t\t\t\t\t\tlabel={data.value}\n\t\t\t\t\t\trequired={attribute.required}/>\n\t\t\t\t);\n\n\t\t\t\treturn <Form.Group className=\"field field-string\" >\n\t\t\t\t\t<Form.Label>{attribute.name}</Form.Label>\n\t\t\t\t\t<div style={{display: 'flex'}}>{result}</div>\n\t\t\t\t</Form.Group>\n\t\t\t}\n\n\t\t\tif('radio' === editor){\n\t\t\t\tif(attribute.enumProvider){\n\t\t\t\t\tconst result = attribute.enumProvider(this.state.editingFormData).map((data) =>\n\t\t\t\t\t\t<Form.Check\n\t\t\t\t\t\t\ttype={'radio'}\n\t\t\t\t\t\t\tonChange={e=>this.handleFormChange(e)}\n\t\t\t\t\t\t\tname={attribute.dataField}\n\t\t\t\t\t\t\tchecked={val === data.key}\n\t\t\t\t\t\t\tisInvalid={!!this.state.errors[attribute.dataField]}\n\t\t\t\t\t\t\tvalue={data.key}\n\t\t\t\t\t\t\tlabel={data.value}\n\t\t\t\t\t\t\trequired={attribute.required}>\n\t\t\t\t\t\t</Form.Check>\n\t\t\t\t\t);\n\n\t\t\t\t\treturn <Form.Group className=\"field field-string\" >\n\t\t\t\t\t\t<Form.Label>{attribute.name}</Form.Label>\n\t\t\t\t\t\t{result}\n\t\t\t\t\t</Form.Group>\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn (\n\t\t\t\t<Form.Group className=\"field field-string\" >\n\t\t\t\t\t{showLabel && <Form.Label>{attribute.name}</Form.Label>}\n\t\t\t\t\t<Form.Control placeholder={attribute.placeHolder}\n\t\t\t\t\t\t\t\t  autoComplete={'off'}\n\t\t\t\t\t\t\t\t  className={''}\n\t\t\t\t\t\t\t\t  onChange={e=>this.handleFormChange(e)}\n\t\t\t\t\t\t\t\t  name={attribute.dataField}\n\t\t\t\t\t\t\t\t  isInvalid={!!this.state.errors[attribute.dataField]}\n\t\t\t\t\t\t\t\t  defaultValue={val}\n\t\t\t\t\t\t\t\t  value={val} type={attribute.type ? attribute.type: 'text'}\n\t\t\t\t\t\t\t\t  pattern={attribute.pattern}\n\t\t\t\t\t\t\t\t  required={attribute.required}/>\n\t\t\t\t\t{feedBack}\n\t\t\t\t</Form.Group>\n\t\t\t)\n\t\t}\n\t\telse {\n\t\t\tconst data = this.state.initialData.attributes;\n\t\t\tlet dataKey = attribute.dataField;\n\t\t\tif(dataKey.startsWith('attributes.')){\n\t\t\t\tdataKey = attribute.dataField.split('attributes.')[1]\n\t\t\t}\n\n\t\t\tlet value = data ? commons.getPropByString(data, dataKey) : '';\n\t\t\tconst display = commons.getAttributeViewer(attribute, value)\n\t\t\tconst suffix = attribute.suffix ? attribute.suffix : ''\n\t\t\tlet selectValue  = [];\n\t\t\tif(attribute.enumProvider){\n\t\t\t\tattribute.enumProvider(this.state.editingFormData).map(val => {\n\t\t\t\t\tif(value.split(';').includes(val.key)) {\n\t\t\t\t\t\tselectValue.push(val.value)\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t}\n\n\t\t\tif(attribute.type === 'yesno'){\n\t\t\t\treturn (\n\t\t\t\t\t<React.Fragment>\n\t\t\t\t\t\t<table width=\"100%\" className={lastRow ? 'dt-form-last-row': ''}>\n\t\t\t\t\t\t\t<tr className=\"td-left\">\n\t\t\t\t\t\t\t\t<td width=\"40%\" className=\"dt-form td-left\"><Label className=\"control-label-view\">{attribute.name}</Label></td>\n\t\t\t\t\t\t\t\t<td width=\"60%\" className=\"dt-form td-left\" style={{'word-wrap':'break-word'}}>\n\t\t\t\t\t\t\t\t\t<input type={'checkbox'} disabled checked={value}/>\n\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t</table>\n\t\t\t\t\t</React.Fragment>\n\t\t\t\t)\n\t\t\t}\n\n\t\t\treturn (\n\t\t\t\t<React.Fragment>\n\t\t\t\t\t<table width=\"100%\" className={lastRow ? 'dt-form-last-row': ''}>\n\t\t\t\t\t\t<tr className=\"td-left\">\n\t\t\t\t\t\t\t<td width=\"40%\" className=\"dt-form td-left\"><Label className=\"control-label-view\">{attribute.name}</Label></td>\n\t\t\t\t\t\t\t<td width=\"60%\" className=\"dt-form td-left\" style={{'word-wrap':'break-word'}}>{selectValue.length > 0 ? selectValue.join(', ') : display} {suffix}</td>\n\t\t\t\t\t\t</tr>\n\t\t\t\t\t</table>\n\t\t\t\t</React.Fragment>\n\t\t\t)\n\t\t}\n\t}\n\n\n\tactionableHRow(attribute) {\n\t\tconst data = this.state.editingFormData;\n\t\tlet val = commons.getPropByString(data, attribute.dataField);\n\t\tlet rowActions = attribute.rowActions ? attribute.rowActions() : \"\";\n\t\tlet rowGroupActions = attribute.rowGroupActions ? attribute.rowGroupActions() : \"\";\n\t\tlet editor = commons.getInputType(attribute);\n\t\treturn(\n\t\t\t<React.Fragment>\n\t\t\t\t<tr>\n\t\t\t\t\t<td><Label className=\"control-label-view\">{attribute.name}</Label></td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<table width=\"100%\">\n\t\t\t\t\t\t\t<tbody>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td><Input type={editor} defaultValue={val} onChange={(e) => this.handleFormChange(e)} name={attribute.dataField} pattern={attribute.pattern}/></td>\n\t\t\t\t\t\t\t\t<td>{rowActions}</td>\n\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>{attribute.empty}</td>\n\t\t\t\t\t\t\t\t<td>{rowGroupActions}</td>\n\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t</tbody>\n\t\t\t\t\t\t</table>\n\t\t\t\t\t</td>\n\t\t\t\t</tr>\n\t\t\t</React.Fragment>\n\t\t)\n\t}\n\n\tprocessFooter(){\n\t\tlet action;\n\t\tif(this.props.attributesListConfig.footerActions){\n\t\t\taction = this.props.attributesListConfig.footerActions();\n\t\t}\n\t\telse if(this.props.standardFooterActions) {\n\t\t\taction = this.standardFooterActions(this.props.attributesListConfig.formId,\n\t\t\t\tthis.props.attributesListConfig)\n\t\t}\n\t\treturn action;\n\t}\n\n\tisEditing(){\n\t\tlet formId = this.props.attributesListConfig.formId;\n\t\treturn this.state.formsState[formId + '_view'] === 'edit' || this.props.formMode === 'create_object'\n\t}\n\n\tcomponentWillReceiveProps(props) {\n\t\tthis.setState({\n\t\t\teditingFormData: props.data.attributes,\n\t\t\tinitialData: props.data\n\t\t})\n\t}\n\n\trender() {\n\t\tconst attributes = this.props.attributesListConfig.attributes;\n\t\tlet attrs = this.processGroup(attributes);\n\n\t\t// TOP LEVEL COMMONE HEADER OF THE GROUP\n\t\t// IF THERE IS ONE\n\t\tlet finalheader;\n\t\tif(this.props.displayHeader === true){\n\t\t\tlet header = this.processHeader();\n\t\t\tfinalheader = (\n\t\t\t\t<table width=\"100%\" id=\"dt-form\">\n\t\t\t\t\t<tbody>\n\t\t\t\t\t{header}\n\t\t\t\t\t</tbody>\n\t\t\t\t</table>\n\t\t\t)\n\t\t}\n\n\t\t// COMMONS FOOTER\n\t\tlet finalFooter;\n\t\tlet footer = this.processFooter();\n\t\tif(footer){\n\t\t\tfinalFooter = (\n\t\t\t\t<div className=\"btn-toolbar-right\">{footer}</div>\n\t\t\t)\n\t\t}\n\n\t\t// body classname\n\t\tlet bodyClassName = \"no-border\";\n\t\tif(this.props.attributesListConfig.addHeaderMargin || this.props.addHeaderMargin){\n\t\t\tbodyClassName = \"no-border noBorder katappult-top-margin-20\";\n\t\t}\n\n\t\t// IF TOP LEVEL CONFIGURATION HAS DEFINED A FORMID ATTRIBUTE,\n\t\t// MEANS THAT ALL BLOCS BELONGS TO SAME FORM\n\t\tlet body\n\t\tif(this.props.attributesListConfig.formId){\n\t\t\tif(this.isEditing()){\n\t\t\t\tbody = <div className={this.props.cardClassName}>\n\t\t\t\t\t<Form ref={form => this.formEl = form} validated={this.state.formValidated} id={this.props.attributesListConfig.formId}>\n\t\t\t\t\t\t{attrs}\n\t\t\t\t\t</Form>\n\t\t\t\t</div>\n\t\t\t}\n\t\t\telse {\n\t\t\t\tbody = <div className={this.props.cardClassName}>\n\t\t\t\t\t<Table id=\"dt-form\" borderless={this.props.attributesListConfig.borderLess}\n\t\t\t\t\t\t   size=\"sm\" className={bodyClassName}>\n\t\t\t\t\t\t<tbody>{attrs}</tbody>\n\t\t\t\t\t</Table>\n\t\t\t\t</div>\n\t\t\t}\n\n\t\t}\n\t\telse {\n\t\t\tbody = <div className={this.props.cardClassName}>\n\t\t\t\t<Table id=\"dt-form\" borderless={this.props.attributesListConfig.borderLess || this.isEditing()}\n\t\t\t\t\t   size=\"sm\" className={bodyClassName}>\n\t\t\t\t\t<tbody>{attrs}</tbody>\n\t\t\t\t</Table>\n\t\t\t</div>\n\t\t}\n\n\t\treturn (\n\t\t\t<div className=\"attributes-list\">\n\t\t\t\t{finalheader}\n\t\t\t\t{body}\n\t\t\t\t{finalFooter}\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nAttributeListGroup.propTypes = propTypes;\nAttributeListGroup.defaultProps = defaultProps;\n\n\nexport default AttributeListGroup;\n"],"sourceRoot":""}